{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Chord.ts","webpack:///./src/Frequency.ts","webpack:///./src/Interval.ts","webpack:///./src/Note.ts","webpack:///./src/Pitch.ts","webpack:///./src/Utils.ts","webpack:///./src/index.ts"],"names":["isChord","x","isNote","base","isIntervalArray","intervals","isAbsolute","Symbol","iterator","Chord","constructor","first","isPitch","Pitch","REGEX","exec","Note","arrayIn","find","e","isPitchArray","sort","compare","map","pitch","getInterval","isNoteArray","note","Interval","fromArray","size","length","notes","i","clone","add","contains","noteIn","equals","toString","o","next","value","done","Frequency","toPitch","f","Math","log","A440","isInterval","degree","onset","octave","Array","isArray","every","el","DEGREE_TO_OFFSET","EnumIntervalProperty","byAbb","abbIn","name","abbMap","SyntaxError","propertyIn","property","P","M","m","A","d","getOffsetFromProperty","degreeIn","Utils","floorMod","PERFECT","AUGMENTED","DIMINISHED","MAJOR","MINOR","getPropertyFromOffset","onsetIn","getOffsetFromDegree","floor","second","third","fromString","nameIn","matched","parseInt","fromOffset","offsetIn","iIn","offset","sub","reverse","intervalIn","sOnset","sOctave","y","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","indexMap","index","indexOf","enumNote","alteration","split","forEach","c","alterationIn","newEnumNote","TypeError","that","repeat","abs","pitchIn","console","n","p"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { Note, isNoteArray, isNote } from \"./Note\";\nimport { Pitch, isPitchArray } from \"./Pitch\";\n\nexport type TChord = { base: Note | Pitch; intervals: Interval[]; isAbsolute: boolean };\nexport const isChord = (x: any): x is TChord | Chord => {\n    return typeof x === \"object\"\n            && isNote(x.base)\n            && isIntervalArray(x.intervals)\n            && typeof x.isAbsolute === \"boolean\";\n};\nexport class Chord implements Iterable<Note> {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    isAbsolute: boolean;\n    /**\n     * Gives a new Chord instance (clone)\n     * @param {(Chord | TChord)} chordIn\n     * @memberof Chord\n     */\n    constructor(chordIn: Chord | TChord);\n    /**\n     * Construct chord by notes\n     * @param {(Note | Pitch | string)} base\n     * @param {(...Note[] | Pitch[])} notes\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     * @param {Pitch} base\n     * @param {...Pitch[]} pitches\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: Chord | TChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        this.isAbsolute = false;\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n            this.isAbsolute = first.isAbsolute;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        this.isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) this.isAbsolute = false;\n        if (!this.isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn) && this.isAbsolute) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes() {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    contains(noteIn: Note | Pitch) {\n        return !!this.notes.find(note => noteIn.equals(note));\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    [Symbol.iterator](): Iterator<Note | Pitch> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note | Pitch;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = i === -1 ? o.base : o.base.clone().add(o.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","import { Pitch } from \"./Pitch\";\n\nexport class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n    static toPitch(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n}\n","import { Utils } from \"./Utils\";\n\nexport type TInterval = { degree: number; onset: number; octave: number };\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is TInterval | Interval => {\n    return typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\";\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MINOR\" | \"MAJOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty {\n    private static abbMap: { [key: string]: TIntervalPropertyValue } = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static PERFECT = new EnumIntervalProperty(\"P\");\n    static MAJOR = new EnumIntervalProperty(\"M\");\n    static MINOR = new EnumIntervalProperty(\"m\");\n    static AUGMENTED = new EnumIntervalProperty(\"A\");\n    static DIMINISHED = new EnumIntervalProperty(\"d\");\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    property: TIntervalProperty;\n    constructor(propertyIn: TIntervalProperty) {\n        this.property = propertyIn;\n    }\n    get value() {\n        return EnumIntervalProperty.abbMap[this.property];\n    }\n}\n\nexport class Interval {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? Utils.floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn === EnumIntervalProperty.PERFECT) return 0;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -1;\n        } else {\n            if (propertyIn === EnumIntervalProperty.MAJOR) return 0;\n            if (propertyIn === EnumIntervalProperty.MINOR) return -1;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? Utils.floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[Utils.floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     * @memberof Interval\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     * @param {(Interval | TInterval)} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: Interval | TInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     * @param {number} degreeIn\n     * @param {number} [onset]\n     * @param {number} [octave]\n     * @memberof Interval\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: Interval | TInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.constructor(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.degree = Utils.floorMod(first - 1, 7) + 1;\n            this.onset = second || 0;\n            this.octave = Math.floor((first - 1) / 7) + (third || 0);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === Utils.floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === Utils.floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[Utils.floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | TInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n                && this.degree === intervalIn.degree\n                && this.onset === intervalIn.onset\n                && this.octave === intervalIn.octave;\n    }\n    toString() {\n        const sOnset = this.property ? this.property.property : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n}\n","import { Utils } from \"./Utils\";\nimport { Interval, TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\n\nexport class EnumNote {\n    private static offsetMap: { [key: number]: TEnumNoteValue } = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    private static indexMap = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"] as TEnumNoteValue[];\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        this.offset = offsetIn;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[Utils.floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexMap[Utils.floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    get name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n    toString() { return this.name; }\n}\nexport type TNote = { enumNote: EnumNote; alteration: number };\nexport const isNote = (x: any): x is TNote | Note => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n            && x.enumNote instanceof EnumNote\n            && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Note);\n};\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class Note {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     * @memberof Note\n     */\n    constructor()\n    /**\n     * New note\n     * @param {(EnumNote)} noteIn\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     * @param {(Note | TNote | string)} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: Note | EnumNote | TNote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     * @param {number} offset\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: Note | EnumNote | TNote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TNote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): TNote {\n        const note = Utils.floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - Utils.floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - Utils.floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n                && this.enumNote.equals(noteIn.enumNote)\n                && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: TNote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | TNote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name;\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n","import { Note, EnumNote, TNote, isNote } from \"./Note\";\nimport { Interval } from \"./Interval\";\n\nexport type TPitch = { enumNote: EnumNote; alteration: number; octave: number };\nexport const isPitch = (x: any): x is TPitch | Pitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n            && x.enumNote instanceof EnumNote\n            && typeof x.alteration === \"number\"\n            && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    octave: number;\n\n    /**\n     * Returns C0\n     * @memberof Pitch\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     * @param {Pitch | TPitch} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: Pitch | TPitch);\n    /**\n     * Add octave info to a note\n     * @param {(Note | EnumNote | TNote)} noteIn\n     * @param {number} [octaveIn]\n     * @memberof Pitch\n     */\n    constructor(noteIn: Note | EnumNote | TNote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} pitchIn\n     * @memberof Note\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(first?: Pitch | Note | EnumNote | TPitch | TNote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote || isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n                && isPitch(pitchIn)\n                && this.octave === pitchIn.octave;\n    }\n    getInterval(pitchIn: TPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | TPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n}\n","export const Utils = {\r\n    floorMod: (x: number, y: number) => {\r\n        return ((x % y) + y) % y;\r\n    }\r\n};\r\n","/* eslint-disable no-console */\nimport { Note } from \"./Note\";\nimport { Interval } from \"./Interval\";\nimport { Pitch } from \"./Pitch\";\nimport { Frequency } from \"./Frequency\";\nimport { Chord } from \"./Chord\";\n\nnew Note(\"#G\").getInterval(new Note(\"C\"));\nconsole.log(new Note(\"#G\").getInterval(new Note(\"C\")).toString());\nconsole.log(new Note(\"#C\").getInterval(new Note(\"G\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bC\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#C\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bB\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#A\")).toString());\n\nconst n = new Note(1);\nconsole.log(n.toString());\n\nconst p = new Pitch(\"##F0\");\nconsole.log(p.add(\"A4\").toString() + \" \" + p.offset);\n\nconst f = 440;\nconsole.log(Frequency.toPitch(f).offset);\n\nconst c = new Chord(new Pitch(\"C1\"), new Pitch(\"bC2\"), new Pitch(\"#C1\"));\n\nconsole.log(c.toString());\n\nconsole.log(new Interval(\"M3\").reverse().toString());\n\nconsole.log(c.notes.toString());\nconsole.log(c.contains(new Pitch(\"#C1\")));\n"],"sourceRoot":""}