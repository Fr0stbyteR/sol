{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Chord.ts","webpack:///./src/Enum.ts","webpack:///./src/Frequency.ts","webpack:///./src/Interval.ts","webpack:///./src/Note.ts","webpack:///./src/Pitch.ts","webpack:///./src/Utils.ts","webpack:///./src/index.ts"],"names":["EnumChord","Enum","MAJ","MIN","AUG","DIM","SUS2","SUS","SUS4","DOM7","MAJ7","MINMAJ7","MIN7","AUGMAJ7","AUG7","DIMMIN7","DIM7","DOM7DIM5","constructor","nameIn","_name","intervalsIn","intervals","Interval","fromArray","byChord","chordIn","values","find","enumChord","length","every","interval","i","equals","byName","isChord","x","isNote","base","isIntervalArray","isAbsolute","Symbol","iterator","Chord","first","isPitch","Pitch","REGEX","exec","Note","arrayIn","e","isPitchArray","sort","compare","map","pitch","getInterval","isNoteArray","note","size","notes","clone","add","contains","noteIn","getEnumChord","toString","o","next","value","done","indexes","key","valueOf","name","Error","ordinal","indexOf","Frequency","toPitch","f","Math","log","A440","isInterval","degree","onset","octave","Array","isArray","el","DEGREE_TO_OFFSET","EnumIntervalProperty","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","byAbb","abbIn","abbMap","SyntaxError","abb","P","M","m","A","d","getOffsetFromProperty","propertyIn","degreeIn","Utils","floorMod","getPropertyFromOffset","onsetIn","getOffsetFromDegree","floor","second","third","fromString","matched","parseInt","fromOffset","offsetIn","iIn","offset","sub","reverse","property","intervalIn","sOnset","sOctave","y","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","index","enumNote","alteration","split","forEach","c","alterationIn","newEnumNote","TypeError","that","repeat","abs","pitchIn","console","n","p","c1"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { Note, isNoteArray, isNote } from \"./Note\";\nimport { Pitch, isPitchArray } from \"./Pitch\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumChordValue = \"MAJ\" | \"MIN\" | \"AUG\" | \"DIM\" | \"SUS2\" | \"SUS\" | \"SUS4\" | \"DOM7\" | \"MAJ7\" | \"MINMAJ7\" | \"MIN7\" | \"AUGMAJ7\" | \"AUG7\" | \"DIMMIN7\" | \"DIM7\" | \"DOM7DIM5\";\nexport class EnumChord extends Enum {\n    protected static indexes = [\"MAJ\", \"MIN\", \"AUG\", \"DIM\", \"SUS2\", \"SUS\", \"SUS4\", \"DOM7\", \"MAJ7\", \"MINMAJ7\", \"MIN7\", \"AUGMAJ7\", \"AUG7\", \"DIMMIN7\", \"DIM7\", \"DOM7DIM5\"] as TEnumChordValue[];\n    static get MAJ() { return new EnumChord(\"MAJ\", \"M3\", \"P5\"); }\n    static get MIN() { return new EnumChord(\"MIN\", \"m3\", \"P5\"); }\n    static get AUG() { return new EnumChord(\"AUG\", \"M3\", \"A5\"); }\n    static get DIM() { return new EnumChord(\"DIM\", \"m3\", \"d5\"); }\n    static get SUS2() { return new EnumChord(\"SUS2\", \"M2\", \"P5\"); }\n    static get SUS() { return new EnumChord(\"SUS\", \"P5\", \"P5\"); }\n    static get SUS4() { return new EnumChord(\"SUS4\", \"P5\", \"P5\"); }\n    static get DOM7() { return new EnumChord(\"DOM7\", \"M3\", \"P5\", \"m7\"); }\n    static get MAJ7() { return new EnumChord(\"MAJ7\", \"M3\", \"P5\", \"M7\"); }\n    static get MINMAJ7() { return new EnumChord(\"MINMAJ7\", \"m3\", \"P5\", \"M7\"); }\n    static get MIN7() { return new EnumChord(\"MIN7\", \"m3\", \"P5\", \"m7\"); }\n    static get AUGMAJ7() { return new EnumChord(\"AUGMAJ7\", \"M3\", \"A5\", \"M7\"); }\n    static get AUG7() { return new EnumChord(\"AUG7\", \"M3\", \"A5\", \"m7\"); }\n    static get DIMMIN7() { return new EnumChord(\"DIMMIN7\", \"m3\", \"d5\", \"m7\"); }\n    static get DIM7() { return new EnumChord(\"DIM7\", \"m3\", \"d5\", \"d7\"); }\n    static get DOM7DIM5() { return new EnumChord(\"DOM7DIM5\", \"M3\", \"d5\", \"m7\"); }\n\n    _name: string;\n    intervals: Interval[];\n    private constructor(nameIn: string, ...intervalsIn: string[]) {\n        super();\n        this._name = nameIn;\n        this.intervals = Interval.fromArray(...intervalsIn);\n    }\n    static byChord(chordIn: Chord) {\n        return this.values<Chord>().find((enumChord) => {\n            return enumChord.intervals.length === chordIn.intervals.length\n                    && enumChord.intervals.every((interval, i) => interval.equals(chordIn.intervals[i]));\n        }) || null;\n    }\n    static byName(chordIn: TEnumChordValue) {\n        return EnumChord[chordIn];\n    }\n}\nexport type TChord = { base: Note | Pitch; intervals: Interval[]; isAbsolute: boolean };\nexport const isChord = (x: any): x is TChord | Chord => {\n    return typeof x === \"object\"\n            && isNote(x.base)\n            && isIntervalArray(x.intervals)\n            && typeof x.isAbsolute === \"boolean\";\n};\nexport class Chord implements Iterable<Note> {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    isAbsolute: boolean;\n    /**\n     * Gives a new Chord instance (clone)\n     * @param {(Chord | TChord)} chordIn\n     * @memberof Chord\n     */\n    constructor(chordIn: Chord | TChord);\n    /**\n     * Construct chord by notes\n     * @param {(Note | Pitch | string)} base\n     * @param {(...Note[] | Pitch[])} notes\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     * @param {Pitch} base\n     * @param {...Pitch[]} pitches\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: Chord | TChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        this.isAbsolute = false;\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n            this.isAbsolute = first.isAbsolute;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        this.isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) this.isAbsolute = false;\n        if (!this.isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn) && this.isAbsolute) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes() {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    contains(noteIn: Note | Pitch) {\n        return !!this.notes.find(note => noteIn.equals(note));\n    }\n    getEnumChord() {\n        return EnumChord.byChord(this);\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    [Symbol.iterator](): Iterator<Note | Pitch> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note | Pitch;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = i === -1 ? o.base : o.base.clone().add(o.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","export class Enum {\n    protected static indexes: string[] = [];\n    static values<T>(): T[] {\n        return this.indexes.map(key => (this as unknown as { [key: string]: T })[key]);\n    }\n    static valueOf<T>(key: string): T {\n        return (this as unknown as { [key: string]: T })[key];\n    }\n    name(): string {\n        throw new Error(\"Method not implemented\");\n    }\n    ordinal(): number {\n        return (this.constructor as typeof Enum).indexes.indexOf(this.name());\n    }\n    toString(): string {\n        return this.name();\n    }\n}\n","import { Pitch } from \"./Pitch\";\n\nexport class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n    static toPitch(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n}\n","import { Utils } from \"./Utils\";\nimport { Enum } from \"./Enum\";\n\nexport type TInterval = { degree: number; onset: number; octave: number };\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is TInterval | Interval => {\n    return typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\";\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MAJOR\" | \"MINOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty extends Enum {\n    protected static indexes = [\"PERFECT\", \"MAJOR\", \"MINOR\", \"AUGMENTED\", \"DIMINISHED\"];\n    private static abbMap: { [key: string]: TIntervalPropertyValue } = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static get PERFECT() { return new EnumIntervalProperty(\"P\"); }\n    static get MAJOR() { return new EnumIntervalProperty(\"M\"); }\n    static get MINOR() { return new EnumIntervalProperty(\"m\"); }\n    static get AUGMENTED() { return new EnumIntervalProperty(\"A\"); }\n    static get DIMINISHED() { return new EnumIntervalProperty(\"d\"); }\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    abb: TIntervalProperty;\n    private constructor(abbIn: TIntervalProperty) {\n        super();\n        this.abb = abbIn;\n    }\n    name() {\n        return EnumIntervalProperty.abbMap[this.abb];\n    }\n    toString() {\n        return this.name();\n    }\n}\n\nexport class Interval {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? Utils.floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn === EnumIntervalProperty.PERFECT) return 0;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -1;\n        } else {\n            if (propertyIn === EnumIntervalProperty.MAJOR) return 0;\n            if (propertyIn === EnumIntervalProperty.MINOR) return -1;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? Utils.floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[Utils.floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     * @memberof Interval\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     * @param {(Interval | TInterval)} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: Interval | TInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     * @param {number} degreeIn\n     * @param {number} [onset]\n     * @param {number} [octave]\n     * @memberof Interval\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: Interval | TInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.constructor(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.degree = Utils.floorMod(first - 1, 7) + 1;\n            this.onset = second || 0;\n            this.octave = Math.floor((first - 1) / 7) + (third || 0);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === Utils.floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === Utils.floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = Utils.floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[Utils.floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | TInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n                && this.degree === intervalIn.degree\n                && this.onset === intervalIn.onset\n                && this.octave === intervalIn.octave;\n    }\n    toString() {\n        const sOnset = this.property ? this.property.abb : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n}\n","import { Utils } from \"./Utils\";\nimport { Interval, TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class EnumNote extends Enum {\n    protected static indexes: TEnumNoteValue[] = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    private static offsetMap: { [key: number]: TEnumNoteValue } = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        super();\n        this.offset = offsetIn;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[Utils.floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexes[Utils.floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    ordinal() { return this.index; }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n}\nexport type TNote = { enumNote: EnumNote; alteration: number };\nexport const isNote = (x: any): x is TNote | Note => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n            && x.enumNote instanceof EnumNote\n            && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Note);\n};\nexport class Note {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     * @memberof Note\n     */\n    constructor()\n    /**\n     * New note\n     * @param {(EnumNote)} noteIn\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     * @param {(Note | TNote | string)} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: Note | EnumNote | TNote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     * @param {number} offset\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: Note | EnumNote | TNote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TNote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): TNote {\n        const note = Utils.floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - Utils.floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - Utils.floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n                && this.enumNote.equals(noteIn.enumNote)\n                && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: TNote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | TNote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name();\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n","import { Note, EnumNote, TNote, isNote } from \"./Note\";\nimport { Interval } from \"./Interval\";\n\nexport type TPitch = { enumNote: EnumNote; alteration: number; octave: number };\nexport const isPitch = (x: any): x is TPitch | Pitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n            && x.enumNote instanceof EnumNote\n            && typeof x.alteration === \"number\"\n            && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    octave: number;\n\n    /**\n     * Returns C0\n     * @memberof Pitch\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     * @param {Pitch | TPitch} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: Pitch | TPitch);\n    /**\n     * Add octave info to a note\n     * @param {(Note | EnumNote | TNote)} noteIn\n     * @param {number} [octaveIn]\n     * @memberof Pitch\n     */\n    constructor(noteIn: Note | EnumNote | TNote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} pitchIn\n     * @memberof Note\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(first?: Pitch | Note | EnumNote | TPitch | TNote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote || isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n                && isPitch(pitchIn)\n                && this.octave === pitchIn.octave;\n    }\n    getInterval(pitchIn: TPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | TPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n}\n","export const Utils = {\r\n    floorMod: (x: number, y: number) => {\r\n        return ((x % y) + y) % y;\r\n    }\r\n};\r\n","/* eslint-disable no-console */\nimport { Note } from \"./Note\";\nimport { Interval } from \"./Interval\";\nimport { Pitch } from \"./Pitch\";\nimport { Frequency } from \"./Frequency\";\nimport { Chord } from \"./Chord\";\n\nnew Note(\"#G\").getInterval(new Note(\"C\"));\nconsole.log(new Note(\"#G\").getInterval(new Note(\"C\")).toString());\nconsole.log(new Note(\"#C\").getInterval(new Note(\"G\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bC\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#C\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bB\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#A\")).toString());\n\nconst n = new Note(1);\nconsole.log(n.toString());\n\nconst p = new Pitch(\"##F0\");\nconsole.log(p.add(\"A4\").toString() + \" \" + p.offset);\n\nconst f = 440;\nconsole.log(Frequency.toPitch(f).offset);\n\nconst c = new Chord(new Pitch(\"C1\"), new Pitch(\"bC2\"), new Pitch(\"#C1\"));\n\nconsole.log(c.toString());\n\nconsole.log(new Interval(\"M3\").reverse().toString());\n\nconsole.log(c.notes.toString());\nconsole.log(c.contains(new Pitch(\"#C1\")));\nconst c1 = new Chord(new Pitch(\"C1\"), new Pitch(\"E1\"), new Pitch(\"G1\"));\nconsole.log(c1.getEnumChord());\n"],"sourceRoot":""}