{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/seedrandom/index.js","webpack:///./node_modules/seedrandom/lib/alea.js","webpack:///./node_modules/seedrandom/lib/tychei.js","webpack:///./node_modules/seedrandom/lib/xor128.js","webpack:///./node_modules/seedrandom/lib/xor4096.js","webpack:///./node_modules/seedrandom/lib/xorshift7.js","webpack:///./node_modules/seedrandom/lib/xorwow.js","webpack:///./node_modules/seedrandom/seedrandom.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/Articulation.ts","webpack:///./src/Chord.ts","webpack:///./src/Duration.ts","webpack:///./src/Enum.ts","webpack:///./src/Frequency.ts","webpack:///./src/Interval.ts","webpack:///./src/Note.ts","webpack:///./src/Pitch.ts","webpack:///./src/Scale.ts","webpack:///./src/TonalChord.ts","webpack:///./src/Tonality.ts","webpack:///./src/Utils.ts","webpack:///./src/Velocity.ts","webpack:///./src/effect/Automation.ts","webpack:///./src/effect/AutomationPoint.ts","webpack:///./src/genre/ChordProgression.ts","webpack:///./src/genre/EnumChordProgression.ts","webpack:///./src/genre/Random.ts","webpack:///./src/genre/modifier/HClipper.ts","webpack:///./src/genre/modifier/Modifier.ts","webpack:///./src/index.ts","webpack:///./src/instrument/EnumInstrumentTag.ts","webpack:///./src/instrument/Instrument.ts","webpack:///./src/track/Segment.ts","webpack:///./src/track/TrackNote.ts","webpack:///external \"crypto\""],"names":["isArticulation","x","Articulation","velocity","length","EnumArticulation","STACCATISSIMO","STACCATO","MEZZO_STACCATO","LEGATO","TENUTO","SOSTENUTO","MARCATO","PIZZICATO","MUTED","constructor","first","lengthIn","clone","toString","EnumChord","Enum","MAJ","MIN","AUG","DIM","SUS2","SUS","SUS4","DOM7","MAJ7","MINMAJ7","MIN7","AUGMAJ7","AUG7","DIMMIN7","DIM7","DOM7DIM5","_name","intervals","intervalsIn","Interval","fromArray","map","i","byChord","chordIn","values","find","enumChord","every","interval","equals","byName","toChord","base","Chord","name","isChord","isIntervalArray","e","indexes","isNote","isChordArray","Array","isArray","Symbol","iterator","isPitch","Pitch","REGEX","exec","Note","isAbsolute","arrayIn","isPitchArray","sort","compare","pitch","getInterval","isNoteArray","note","size","notes","add","contains","noteIn","inverseUp","interval0","sub","octaveReverse","inverseDown","inverse","inversion","getEnumChord","getImaginaryBase","getRatio","Frequency","THRES_AUDIT","bases","j","d","offset","f","nearestFraction","push","div","isDuration","Duration","seconds","numerator","denominator","second","simplify","check","value","getBeats","Error","getAbsoluteDuration","toAbsolute","durationIn","a","b","mul","compareTo","that","y","$gcd","gcd","random","randomIn","min","max","step","steps","randint","key","valueOf","ordinal","indexOf","A440","SEMITONE","isInterval","degree","onset","octave","el","DEGREE_TO_OFFSET","EnumIntervalProperty","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","byAbb","abbIn","abbMap","SyntaxError","abb","propertyIn","P","M","m","A","getOffsetFromProperty","degreeIn","floorMod","getPropertyFromOffset","onsetIn","getOffsetFromDegree","Math","floor","third","fromString","nameIn","matched","parseInt","fromOffset","offsetIn","fromRatio","ratioIn","round","log","iIn","intervalIn","reverse","ratio","fraction","property","sOnset","sOctave","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","index","c","g","enumNote","alteration","split","forEach","alterationIn","ratioToOffset","newEnumNote","fIn","TypeError","repeat","abs","fromFrequency","frequency","pitchIn","MINIMUM","MAXIMUM","EnumScale","Scale","PENTA","IONIAN","DORIAN","PHRYGIAN","LYDIAN","MIXOLYDIAN","AEOLIAN","LOCRIAN","ASCENDING_MELODIC_MINOR","PHRYGIAN_MAJ6","LYDIAN_AUG","LYDIAN_DOM","MIXOLYDIAN_MIN6","LOCRIAN_MAJ2","SUPER_LOCRIAN","isScale","isStringArray","degreeNames","scaleName","degreeName","addNote","getIntervalFromIndex","getIntervalFromDegree","degrees","scaleIn","getName","s","sI","sN","isTonalChord","TonalChord","chord","isTonalChordArray","REGEX1","p","parseRoman","REGEX2","getChord","tonalityIn","getNoteFromDegree","getTriad","toRoman","toLowerCase","isTonality","Tonality","scale","substr","match","getTriads","triads","toRelative","relative","toNext","next","toPrev","prev","lcm","isNumberArray","stringIn","string","toUpperCase","r","rIn","aOut","sum","nIn","n","rOut","getValueFromCurve","t0","t1","t","exp","v","approx","lastJ","isVelocity","Velocity","EnumVelocity","SILENT","PPP","PP","PIANISSIMO","MP","MEZZO_PIANO","MF","MEZZO_FORTE","FORTE","FF","FORTISSIMO","FFF","velocityIn","normalize","isAutomation","Automation","path","isAutomationPointArray","points","isAutomationArray","getValueAtTime","time","duration","exponent","addPointAtTime","AutomationPoint","forward","rewind","toFixed","join","isAutomationPoint","isChordProgression","ChordProgression","chords","from","getChords","fromStringArray","append","concat","prepend","tc","EnumChordProgression","REV_ANDAL","CANON","POP1","POP2","POP3","EPIC1","EPIC2","EDM1","EDM2","TRAP1","Random","seedIn","prng","seedrandom","quick","int32","double","state","minimum","maximum","HClipperRight","Modifier","use","params","mode","end","noteEnd","filter","automations","$oob","findIndex","slice","HClipperLeft","start","oldDuration","$0","HClipper","console","c1","tn1","TrackNote","tn2","tn3","seg","Segment","isEnumInstrumentTagArray","EnumInstrumentTag","LEAD","PAD","KICK","SNARE","TOM","HAT","RIDE","STICK","CLAP","TAMBOURINE","CYMBAL","VOCAL","SFX","BASS","STRING","PLUCKED","BOWED","BRASS","WOODWIND","SYNTH","GUITAR","KEYBOARD","ORGAN","DRUM","UNPITCHED","ACOUSTIC","ELECTRONIC","PITCHED","HAS_RANGE","PERCUSSION","VOICE","isInstrument","Instrument","isTypeofInstrument","TAGS","NAME","MIN_PITCH","MAX_PITCH","optionsIn","getParamValue","setParamValue","hasTag","tagsIn","tag","tags","minPitch","maxPitch","isSegment","instrument","isTrackNoteArray","isSegmentArray","pitches","pitchesIn","trackNote","noteDurations","durationsIn","noteOffsets","offsetsIn","isTrackNote","articulation"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,oBAAoB;AACpB,0BAA0B;;AAE1B;AACA;AACA;AACA,WAAW,mBAAO,CAAC,yDAAY;;AAE/B;AACA;AACA;AACA,aAAa,mBAAO,CAAC,6DAAc;;AAEnC;AACA;AACA;AACA,aAAa,mBAAO,CAAC,6DAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,mEAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,+DAAe;;AAErC;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,6DAAc;;AAEnC;AACA;AACA,SAAS,mBAAO,CAAC,6DAAc;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA,kBAAkB,YAAY;AAC9B;AACA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,8CAA8C;AAC9C;;AAEA;AACA;;;AAGA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;;;AC/GA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;;;ACpGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,8CAA8C;AAC9C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,oCAAoC;AACpC,iCAAiC;AACjC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;ACjJA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,8BAA8B;;AAE9B;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;;AC/FA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,8FAAM,IAAI,gGAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,8FAAuC;AACzC;;;;;;;;;;;;;;;ACnFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB,iBAAiB;;AAElE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,8BAA8B;AAC9B,0BAA0B;AAC1B,iBAAiB;AACjB,oBAAoB;AACpB;AACA,2BAA2B;AAC3B,aAAa;AACb,aAAa;AACb,eAAe;AACf;AACA,uBAAuB;AACvB;;AAEA,2BAA2B,sBAAsB;AACjD,2BAA2B,gCAAgC;AAC3D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,mCAAmC,qBAAqB,EAAE;AAC1D;;AAEA;AACA;AACA,2BAA2B,sBAAsB,aAAa;;AAE9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;;AAElC;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export interface IArticulation {\n    velocity: number;\n    length: number;\n}\nexport const isArticulation = (x: any): x is IArticulation => {\n    return x instanceof Articulation\n        || (typeof x === \"object\"\n        && typeof x.velocity === \"number\"\n        && typeof x.length === \"number\");\n};\nexport class EnumArticulation {\n    static get STACCATISSIMO() { return new Articulation(1, 0.25); }\n    static get STACCATO() { return new Articulation(1, 0.4); }\n    static get MEZZO_STACCATO() { return new Articulation(1, 0.75); }\n    static get LEGATO() { return new Articulation(1, 0.95); }\n    static get TENUTO() { return new Articulation(1, 1); }\n    static get SOSTENUTO() { return new Articulation(1, 1.2); }\n    static get MARCATO() { return new Articulation(1.5, 1); }\n    static get PIZZICATO() { return new Articulation(1, 1); }\n    static get MUTED() { return new Articulation(1, 1); }\n}\nexport class Articulation implements IArticulation {\n    velocity: number;\n    length: number;\n    constructor(articulationIn: IArticulation);\n    constructor(velocityIn: number, lengthIn: number);\n    constructor(first: IArticulation | number, lengthIn?: number) {\n        if (isArticulation(first)) {\n            this.velocity = first.velocity;\n            this.length = first.length;\n        } else {\n            this.velocity = first;\n            this.length = lengthIn;\n        }\n        return this;\n    }\n    clone() {\n        return new Articulation(this);\n    }\n    toString() {\n        return `Art: [Vel: ${this.velocity} Len: ${this.length}]`;\n    }\n}\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { Note, isNoteArray, isNote } from \"./Note\";\nimport { Pitch, isPitchArray } from \"./Pitch\";\nimport { Enum } from \"./Enum\";\nimport { nearestFraction } from \"./Utils\";\nimport { Frequency } from \"./Frequency\";\n\ntype TEnumChordName = \"MAJ\" | \"MIN\" | \"AUG\" | \"DIM\" | \"SUS2\" | \"SUS\" | \"SUS4\" | \"DOM7\" | \"MAJ7\" | \"MINMAJ7\" | \"MIN7\" | \"AUGMAJ7\" | \"AUG7\" | \"DIMMIN7\" | \"DIM7\" | \"DOM7DIM5\";\nexport class EnumChord extends Enum {\n    protected static indexes = [\"MAJ\", \"MIN\", \"AUG\", \"DIM\", \"SUS2\", \"SUS\", \"SUS4\", \"DOM7\", \"MAJ7\", \"MINMAJ7\", \"MIN7\", \"AUGMAJ7\", \"AUG7\", \"DIMMIN7\", \"DIM7\", \"DOM7DIM5\"] as TEnumChordName[];\n    static get MAJ() { return new EnumChord(\"MAJ\", \"M3\", \"P5\"); }\n    static get MIN() { return new EnumChord(\"MIN\", \"m3\", \"P5\"); }\n    static get AUG() { return new EnumChord(\"AUG\", \"M3\", \"A5\"); }\n    static get DIM() { return new EnumChord(\"DIM\", \"m3\", \"d5\"); }\n    static get SUS2() { return new EnumChord(\"SUS2\", \"M2\", \"P5\"); }\n    static get SUS() { return new EnumChord(\"SUS\", \"P5\", \"P5\"); }\n    static get SUS4() { return new EnumChord(\"SUS4\", \"P5\", \"P5\"); }\n    static get DOM7() { return new EnumChord(\"DOM7\", \"M3\", \"P5\", \"m7\"); }\n    static get MAJ7() { return new EnumChord(\"MAJ7\", \"M3\", \"P5\", \"M7\"); }\n    static get MINMAJ7() { return new EnumChord(\"MINMAJ7\", \"m3\", \"P5\", \"M7\"); }\n    static get MIN7() { return new EnumChord(\"MIN7\", \"m3\", \"P5\", \"m7\"); }\n    static get AUGMAJ7() { return new EnumChord(\"AUGMAJ7\", \"M3\", \"A5\", \"M7\"); }\n    static get AUG7() { return new EnumChord(\"AUG7\", \"M3\", \"A5\", \"m7\"); }\n    static get DIMMIN7() { return new EnumChord(\"DIMMIN7\", \"m3\", \"d5\", \"m7\"); }\n    static get DIM7() { return new EnumChord(\"DIM7\", \"m3\", \"d5\", \"d7\"); }\n    static get DOM7DIM5() { return new EnumChord(\"DOM7DIM5\", \"M3\", \"d5\", \"m7\"); }\n\n    _name: string;\n    intervals: Interval[];\n    private constructor(nameIn: string, ...intervalsIn: string[]);\n    private constructor(chord: EnumChord);\n    private constructor(first: string | EnumChord, ...intervalsIn: string[]) {\n        super();\n        if (typeof first === \"string\") {\n            this._name = first;\n            this.intervals = Interval.fromArray(...intervalsIn);\n        } else {\n            this._name = first._name;\n            this.intervals = first.intervals.map(i => i.clone());\n        }\n        return this;\n    }\n    static byChord(chordIn: IChord) {\n        return this.values<EnumChord>().find((enumChord) => {\n            return enumChord.intervals.length === chordIn.intervals.length\n                && enumChord.intervals.every((interval, i) => interval.equals(chordIn.intervals[i]));\n        }) || null;\n    }\n    static byName(chordIn: TEnumChordName) {\n        return EnumChord[chordIn];\n    }\n    toChord(base: Note | Pitch | string) {\n        return new Chord(base, ...this.intervals);\n    }\n    name() {\n        return this._name;\n    }\n    equals(chordIn: object) {\n        return isChord(chordIn)\n            && \"intervals\" in chordIn\n            && isIntervalArray(chordIn.intervals)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    clone() {\n        return new EnumChord(this);\n    }\n}\nexport interface IChord {\n    base: Note | Pitch;\n    intervals: Interval[];\n}\nexport const isChord = (x: any): x is IChord => {\n    return x instanceof Chord\n        || (typeof x === \"object\"\n        && isNote(x.base)\n        && isIntervalArray(x.intervals));\n};\nexport const isChordArray = (x: any): x is Chord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof Chord);\n};\nexport class Chord implements Iterable<Note>, IChord {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    /**\n     * Gives a new Chord instance (clone)\n     * @param {IChord} chordIn\n     * @memberof Chord\n     */\n    constructor(chordIn: IChord);\n    /**\n     * Construct chord by notes\n     * @param {(Note | Pitch | string)} base\n     * @param {(...Note[] | Pitch[])} notes\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     * @param {Pitch} base\n     * @param {...Pitch[]} pitches\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: IChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        let isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) isAbsolute = false;\n        if (!isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes(): Note[] | Pitch[] {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    get isAbsolute() {\n        return this.base instanceof Pitch;\n    }\n    contains(noteIn: Note | Pitch) {\n        for (const note of this.notes) {\n            if (noteIn.equals(note)) return true;\n        }\n        return false;\n    }\n    inverseUp() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[0];\n        this.base.add(interval0);\n        for (let i = 0; i < this.intervals.length - 1; i++) {\n            this.intervals[i] = this.intervals[i + 1].sub(interval0);\n        }\n        this.intervals[this.intervals.length - 1] = interval0.octaveReverse();\n        return this;\n    }\n    inverseDown() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[this.intervals.length - 1].octaveReverse();\n        this.base.sub(interval0);\n        for (let i = this.intervals.length - 1; i > 0; i--) {\n            this.intervals[i] = this.intervals[i - 1].add(interval0);\n        }\n        this.intervals[0] = interval0;\n        return this;\n    }\n    inverse(inversion: number) {\n        if (this.intervals.length === 0) return this;\n        if (inversion > 0) {\n            for (let i = 0; i < inversion; i++) {\n                this.inverseUp();\n            }\n        }\n        if (inversion < 0) {\n            for (let i = 0; i > inversion; i--) {\n                this.inverseDown();\n            }\n        }\n        return this;\n    }\n    getEnumChord() {\n        return EnumChord.byChord(this);\n    }\n    getImaginaryBase() {\n        const { notes } = this;\n        const { getRatio, THRES_AUDIT } = Frequency;\n        const bases = [];\n        for (let i = 0; i < notes.length - 1; i++) {\n            for (let j = i + 1; j < notes.length; j++) {\n                const d = notes[j].offset - notes[i].offset;\n                const f = nearestFraction(getRatio(d), THRES_AUDIT);\n                bases.push(notes[i].clone().div(f[0]));\n            }\n        }\n        return bases;\n    }\n    equals(chordIn: object) {\n        return isChord(chordIn)\n            && chordIn.base.equals(this.base)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    * [Symbol.iterator](): Iterator<Note | Pitch> {\n        for (const interval of this.intervals) {\n            yield this.base.clone().add(interval);\n        }\n    }\n}\n","import { TimeCode } from \"./TimeCode\";\nimport { gcd } from \"./Utils\";\nimport { Random } from \"./genre/Random\";\n\nexport interface IDuration {\n    isAbsolute: boolean;\n    numerator: number;\n    denominator: number;\n    seconds: number;\n}\nexport const isDuration = (x: any): x is IDuration => {\n    return x instanceof Duration\n        || (typeof x.isAbsolute === \"boolean\"\n        && x.isAbsolute\n            ? typeof x.seconds === \"number\"\n            : typeof x.numerator === \"number\" && typeof x.denominator === \"number\"\n        );\n};\nexport class Duration implements IDuration, Computable<Duration> {\n    isAbsolute: boolean; // Absolute duration is represented by seconds.\n    numerator: number; // Quarter note = 1/4, Whole note = 1/1, Quarter note triplet = 1/6\n    denominator: number;\n    seconds: number; // Absolute duration if in abs mode.\n\n    constructor(secondsIn: number);\n    constructor(numeratorIn: number, denominatorIn: number);\n    constructor(durationIn: Duration);\n    constructor(first: number | Duration, second?: number) {\n        if (isDuration(first)) {\n            this.isAbsolute = first.isAbsolute;\n            this.numerator = first.numerator;\n            this.denominator = first.denominator;\n            this.seconds = first.seconds;\n            this.simplify().check();\n        } else if (typeof second === \"number\") {\n            this.isAbsolute = false;\n            this.numerator = first;\n            this.denominator = second;\n            this.simplify().check();\n        } else {\n            this.isAbsolute = true;\n            this.seconds = first;\n            this.check();\n        }\n        return this;\n    }\n    private get value() {\n        return this.isAbsolute ? this.seconds : this.numerator / this.denominator;\n    }\n\n    getBeats(): number;\n    getBeats(timeCodeIn: TimeCode): number;\n    getBeats(bpmIn: number): number;\n    getBeats(first?: TimeCode | number) {\n        if (typeof first === \"undefined\") {\n            if (this.isAbsolute) throw new Error(\"Absolute duration needs BPM to calculate.\");\n            return this.value * 4;\n        }\n        if (typeof first === \"number\") { // bpmIn\n            return this.value * 4 * first / 60;\n        } // timeCodeIn\n        return this.value * 4 * first.getAbsoluteDuration();\n    }\n\n    toAbsolute(bpmIn: number): this;\n    toAbsolute(timeCodeIn: TimeCode): this\n    toAbsolute(first: TimeCode | number) {\n        if (this.isAbsolute) return this;\n        if (typeof first === \"number\") this.seconds = this.getBeats() * first / 60;\n        else this.seconds = first.getAbsoluteDuration(this.getBeats());\n        this.isAbsolute = true;\n        return this;\n    }\n\n    add(durationIn: Duration) {\n        if (this.isAbsolute && durationIn.isAbsolute) {\n            this.seconds += durationIn.seconds;\n        } else if (!this.isAbsolute && !durationIn.isAbsolute) {\n            if (this.denominator === durationIn.denominator) {\n                this.numerator += durationIn.numerator;\n            } else {\n                this.numerator = this.numerator * durationIn.denominator + durationIn.numerator * this.denominator;\n                this.denominator *= durationIn.denominator;\n            }\n            this.simplify();\n        } else {\n            throw new Error(\"Cannot operate between absolute and relative duration.\");\n        }\n        return this.check();\n    }\n    static add(a: Duration, b: Duration) {\n        return a.clone().add(b);\n    }\n    sub(durationIn: Duration) {\n        if (this.isAbsolute && durationIn.isAbsolute) {\n            this.seconds -= durationIn.seconds;\n        } else if (!this.isAbsolute && !durationIn.isAbsolute) {\n            if (this.denominator === durationIn.denominator) {\n                this.numerator -= durationIn.numerator;\n            } else {\n                this.numerator = this.numerator * durationIn.denominator - durationIn.numerator * this.denominator;\n                this.denominator *= durationIn.denominator;\n            }\n            this.simplify();\n        } else {\n            throw new Error(\"Cannot operate between absolute and relative duration.\");\n        }\n        return this.check();\n    }\n    static sub(a: Duration, b: Duration) {\n        return a.clone().sub(b);\n    }\n    mul(f: number) {\n        if (this.isAbsolute) {\n            this.seconds *= f;\n        } else {\n            this.numerator *= f;\n            this.simplify();\n        }\n        return this.check();\n    }\n    static mul(a: Duration, b: number) {\n        return a.clone().mul(b);\n    }\n    div(f: number): this;\n    div(durationIn: Duration): number;\n    div(first: number | Duration) {\n        if (typeof first === \"number\") {\n            if (this.isAbsolute) {\n                this.seconds /= first;\n            } else {\n                this.numerator /= first;\n                this.simplify();\n            }\n            return this.check();\n        }\n        if (this.isAbsolute === first.isAbsolute) return this.value / first.value;\n        throw new Error(\"Cannot operate between absolute and relative duration.\");\n    }\n    static div(a: Duration, b: number): Duration;\n    static div(a: Duration, b: Duration): number;\n    static div(a: Duration, b: Duration | number) {\n        if (typeof b === \"number\") return a.clone().div(b);\n        return a.clone().div(b);\n    }\n    equals(durationIn: object) {\n        return isDuration(durationIn) && this.compareTo(durationIn) === 0;\n    }\n    compareTo(that: IDuration) {\n        return Duration.compare(this, that);\n    }\n    static compare(x: IDuration, y: IDuration) {\n        if (x.isAbsolute !== y.isAbsolute) throw new Error(\"Cannot compare between absolute and relative duration\");\n        return x.isAbsolute ? x.seconds - y.seconds : x.numerator / x.denominator - y.numerator / y.denominator;\n    }\n\n    private simplify() {\n        const $gcd = gcd(this.numerator, this.denominator);\n        if ($gcd > 1) {\n            this.denominator /= $gcd;\n            this.numerator /= $gcd;\n        }\n        return this;\n    }\n\n    private check() {\n        if (this.isAbsolute) {\n            if (this.numerator < 0 || this.denominator <= 0) throw new Error(\"Duration should have positive value.\");\n        } else {\n            if (this.seconds < 0) throw new Error(\"Duration should have positive value.\");\n        }\n        return this;\n    }\n\n    clone() {\n        return new Duration(this);\n    }\n\n    static random(randomIn: Random, min: Duration, max: Duration, step: Duration): Duration {\n        if (min.equals(max)) return min.clone();\n        const d = max.clone().sub(min);\n        const steps = randomIn.randint(0, ~~d.div(step));\n        return min.clone().add(step.clone().mul(steps));\n    }\n\n    toString() {\n        return this.isAbsolute ? this.seconds + \"s\" : this.getBeats() + \" beats\";\n    }\n}\n","export class Enum {\n    protected static indexes: string[] = [];\n    static values<T extends Enum>(): T[] {\n        return this.indexes.map(key => (this as unknown as Record<string, T>)[key]);\n    }\n    static valueOf<T extends Enum>(key: string): T {\n        return (this as unknown as Record<string, T>)[key];\n    }\n    protected constructor() {\n        return this;\n    }\n    name(): string {\n        throw new Error(\"Method not implemented\");\n    }\n    ordinal(): number {\n        return (this.constructor as typeof Enum).indexes.indexOf(this.name());\n    }\n    toString(): string {\n        return this.name();\n    }\n}\n","export class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n    static getRatio = (d: number) => 2 ** (d / 12);\n}\n","import { floorMod, nearestFraction } from \"./Utils\";\nimport { Enum } from \"./Enum\";\nimport { Frequency } from \"./Frequency\";\n\nexport interface IInterval {\n    degree: number;\n    onset: number;\n    octave: number;\n}\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is IInterval => {\n    return x instanceof Interval\n        || (typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MAJOR\" | \"MINOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty extends Enum {\n    protected static indexes = [\"PERFECT\", \"MAJOR\", \"MINOR\", \"AUGMENTED\", \"DIMINISHED\"];\n    private static abbMap: Record<string, TIntervalPropertyValue> = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static get PERFECT() { return new EnumIntervalProperty(\"P\"); }\n    static get MAJOR() { return new EnumIntervalProperty(\"M\"); }\n    static get MINOR() { return new EnumIntervalProperty(\"m\"); }\n    static get AUGMENTED() { return new EnumIntervalProperty(\"A\"); }\n    static get DIMINISHED() { return new EnumIntervalProperty(\"d\"); }\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    abb: TIntervalProperty;\n    private constructor(abbIn: TIntervalProperty) {\n        super();\n        this.abb = abbIn;\n        return this;\n    }\n    name() {\n        return EnumIntervalProperty.abbMap[this.abb];\n    }\n    toString() {\n        return this.name();\n    }\n    equals(propertyIn: object) {\n        return propertyIn instanceof EnumIntervalProperty\n            && this.abb === propertyIn.abb;\n    }\n}\n\nexport class Interval implements IInterval, Computable<Interval> {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn.equals(EnumIntervalProperty.PERFECT)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -1;\n        } else {\n            if (propertyIn.equals(EnumIntervalProperty.MAJOR)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.MINOR)) return -1;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     * @memberof Interval\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     * @param {(IInterval)} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: IInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     * @param {number} degreeIn\n     * @param {number} [onset]\n     * @param {number} [octave]\n     * @memberof Interval\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: IInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.constructor(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.degree = floorMod(first - 1, 7) + 1;\n            this.onset = second || 0;\n            this.octave = Math.floor((first - 1) / 7) + (third || 0);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): IInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromRatio(ratioIn: number) {\n        const offset = Math.round(Math.log(ratioIn) / Math.log(Frequency.SEMITONE));\n        return new Interval(offset);\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    static add(a: Interval, b: Interval) {\n        return a.clone().add(b);\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    static sub(a: Interval, b: Interval) {\n        return a.clone().sub(b);\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n            && this.degree === intervalIn.degree\n            && this.onset === intervalIn.onset\n            && this.octave === intervalIn.octave;\n    }\n    compareTo(iIn: Interval) {\n        return Interval.compare(this, iIn);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    octaveReverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 1 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get ratio() {\n        return Frequency.getRatio(this.offset);\n    }\n    get fraction() {\n        return nearestFraction(this.ratio, Frequency.THRES_AUDIT);\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | IInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    toString() {\n        const sOnset = this.property ? this.property.abb : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n}\n","import { floorMod } from \"./Utils\";\nimport { Interval, TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\nimport { Enum } from \"./Enum\";\nimport { Frequency } from \"./Frequency\";\n\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class EnumNote extends Enum {\n    protected static indexes: TEnumNoteValue[] = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    private static offsetMap: Record<string, TEnumNoteValue> = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        super();\n        this.offset = offsetIn;\n        return this;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexes[floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    ordinal() { return this.index; }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n}\nexport interface INote {\n    enumNote: EnumNote;\n    alteration: number;\n}\nexport const isNote = (x: any): x is INote => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Note);\n};\nexport class Note implements INote {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     * @memberof Note\n     */\n    constructor()\n    /**\n     * New note\n     * @param {EnumNote} noteIn\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     * @param {INote} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: INote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     * @param {number} offset\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: EnumNote | INote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): INote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): INote {\n        const note = floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static ratioToOffset(ratio: number) {\n        return Math.round(Math.log(ratio) / Math.log(Frequency.SEMITONE));\n    }\n    add(semitones: number): Note;\n    add(interval: string | Interval): Note;\n    add(iIn: number | string | Interval | Note) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(semitones: number): Note;\n    sub(interval: string | Interval): Note;\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    mul(fIn: number) {\n        const d = Note.ratioToOffset(fIn);\n        return this.add(d);\n    }\n    div(fIn: number) {\n        return this.mul(1 / fIn);\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n            && this.enumNote.equals(noteIn.enumNote)\n            && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: INote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | INote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name();\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n","import { Note, EnumNote, INote, isNote } from \"./Note\";\nimport { Interval } from \"./Interval\";\nimport { Frequency } from \"./Frequency\";\n\nexport interface IPitch extends INote {\n    octave: number;\n}\nexport const isPitch = (x: any): x is IPitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note implements IPitch, Computable<Pitch> {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    static fromFrequency(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n    static MINIMUM = Pitch.fromFrequency(20);\n    static MAXIMUM = Pitch.fromFrequency(20000);\n    octave: number;\n\n    /**\n     * Returns C0\n     * @memberof Pitch\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     * @param {IPitch} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: IPitch);\n    /**\n     * Add octave info to a note\n     * @param {EnumNote | INote} noteIn\n     * @param {number} [octaveIn]\n     * @memberof Pitch\n     */\n    constructor(noteIn: EnumNote | INote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} pitchIn\n     * @memberof Note\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(first?: IPitch | EnumNote | INote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote) {\n            super(first);\n            this.octave = second || 0;\n        } else if (isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n        return this;\n    }\n    get frequency() {\n        return Frequency.A440 * 2 ** ((this.offset - 69) / 12);\n    }\n    static fromString(nameIn: string): IPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(semitones: number): Pitch;\n    add(interval: string | Interval): Pitch;\n    add(pitchIn: Pitch): Pitch;\n    add(iIn: number | string | Interval | Pitch) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        if (iIn instanceof Pitch) return this.mul(1 + iIn.frequency / this.frequency);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    static add(a: Pitch, b: Pitch) {\n        return a.clone().add(b);\n    }\n    sub(semitones: number): Pitch;\n    sub(interval: string | Interval): Pitch;\n    sub(pitchIn: Pitch): Pitch;\n    sub(iIn: number | string | Interval | Pitch) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        if (iIn instanceof Pitch) return this.mul(1 - iIn.frequency / this.frequency);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    static sub(a: Pitch, b: Pitch) {\n        return a.clone().sub(b);\n    }\n    mul(fIn: number): Pitch {\n        const d = Note.ratioToOffset(fIn);\n        return this.add(d);\n    }\n    static mul(a: Pitch, b: number) {\n        return a.clone().mul(b);\n    }\n    div(pitchIn: Pitch): number;\n    div(fIn: number): Pitch;\n    div(first: number | Pitch) {\n        if (first instanceof Pitch) return this.frequency / first.frequency;\n        return this.mul(1 / first);\n    }\n    static div(a: Pitch, b: number): Pitch;\n    static div(a: Pitch, b: Pitch): number;\n    static div(a: Pitch, b: Pitch | number) {\n        if (typeof b === \"number\") return a.clone().div(b);\n        return a.clone().div(b);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n            && isPitch(pitchIn)\n            && this.octave === pitchIn.octave;\n    }\n    compareTo(pitchIn: Pitch) {\n        return Pitch.compare(this, pitchIn);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n    getInterval(pitchIn: IPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | IPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n}\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { isStringArray, floorMod } from \"./Utils\";\n\nexport class EnumScale {\n    static get MAJOR() { return new Scale(\"Major\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MINOR() { return new Scale(\"Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get PENTA() { return new Scale(\"Penta\", \"P1:Gong\", \"M2:Shang\", \"M3:Jiao\", \"P5:Zhi\", \"M6:Yu\"); }\n\n    static get IONIAN() { return EnumScale.MAJOR; }\n    static get DORIAN() { return new Scale(\"Dorian\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get PHRYGIAN() { return new Scale(\"Phrygian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN() { return new Scale(\"Lydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MIXOLYDIAN() { return new Scale(\"Mixolydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get AEOLIAN() { return EnumScale.MINOR; }\n    static get LOCRIAN() { return new Scale(\"Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n\n    static get ASCENDING_MELODIC_MINOR() { return new Scale(\"Ascending Melodic Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get PHRYGIAN_MAJ6() { return new Scale(\"Phrygian M6\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN_AUG() { return new Scale(\"Lydian Augmented\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"A5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get LYDIAN_DOM() { return new Scale(\"Lydian Dominant\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get MIXOLYDIAN_MIN6() { return new Scale(\"Mixolydian m6\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LOCRIAN_MAJ2() { return new Scale(\"Locrian M2\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get SUPER_LOCRIAN() { return new Scale(\"Super Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"d4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n}\nexport interface IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n}\nexport const isScale = (x: any): x is IScale => {\n    return x instanceof Scale\n        || (typeof x === \"object\"\n        && isStringArray(x.degreeNames)\n        && isIntervalArray(x.intervals));\n};\nexport class Scale implements Iterable<Interval>, IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n\n    constructor(nameIn: string, ...degreesIn: string[]);\n    constructor(scaleIn: IScale);\n    constructor(first: string | IScale, ...degreesIn: string[]) {\n        if (typeof first === \"string\") {\n            this.scaleName = first;\n            this.intervals = [];\n            this.degreeNames = [];\n            for (let i = 0; i < degreesIn.length; i++) {\n                const degreeName = degreesIn[i];\n                const split = degreeName.split(\":\");\n                if (split.length === 2) {\n                    this.intervals[i] = new Interval(split[0]);\n                    this.degreeNames[i] = split[1];\n                } else {\n                    this.intervals[i] = new Interval(degreeName);\n                    this.degreeNames[i] = degreeName;\n                }\n            }\n        } else {\n            this.scaleName = first.scaleName;\n            this.intervals = first.intervals.map(i => i.clone());\n            this.degreeNames = [...first.degreeNames];\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length;\n    }\n    addNote(noteIn: string) {\n        let interval: Interval;\n        let name: string;\n        const split = noteIn.split(\":\");\n        if (split.length === 2) {\n            interval = new Interval(split[0]);\n            name = split[1];\n        } else {\n            interval = new Interval(noteIn);\n            name = noteIn;\n        }\n        this.intervals.push(interval);\n        this.degreeNames.push(name);\n        return this;\n    }\n    getIntervalFromIndex(index: number) {\n        return this.intervals[index];\n    }\n    getIntervalFromDegree(degreeIn: number) {\n        return this.intervals.find((interval) => {\n            return floorMod(degreeIn - 1, this.intervals.length) + 1 === interval.degree;\n        });\n    }\n    get degrees() {\n        return this.intervals.map(i => i.degree);\n    }\n    equals(scaleIn: object) {\n        return isScale(scaleIn)\n            && this.intervals.length === scaleIn.intervals.length\n            && this.intervals.every((interval, i) => interval.equals(scaleIn.intervals[i]))\n            && this.degreeNames.length === scaleIn.degreeNames.length\n            && this.degreeNames.every((name, i) => name === scaleIn.degreeNames[i]);\n    }\n    public getName() {\n        return this.scaleName;\n    }\n    toString() {\n        let s = this.scaleName ? `Scale \"${this.scaleName}\": {` : \"Scale :{\";\n        for (let i = 0; i < this.intervals.length; i++) {\n            const sI = this.intervals[i].toString();\n            const sN = this.degreeNames[i];\n            s += sI + (sN.length > 0 && sN !== sI ? \":\" + sN : \"\");\n            if (i !== this.intervals.length - 1) s += \", \";\n        }\n        s += \"}\";\n        return s;\n    }\n    clone() {\n        return new Scale(this);\n    }\n    * [Symbol.iterator](): Iterator<Interval> {\n        for (const interval of this.intervals) {\n            yield interval;\n        }\n    }\n}\n","import { EnumChord, Chord } from \"./Chord\";\nimport { parseRoman, toRoman } from \"./Utils\";\nimport { Tonality } from \"./Tonality\";\nimport { Interval } from \"./Interval\";\n\nexport interface ITonalChord {\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n}\nexport const isTonalChord = (x: any): x is ITonalChord => {\n    return x instanceof TonalChord\n        || (typeof x.alteration === \"number\"\n        && typeof x.degree === \"number\"\n        && x.chord instanceof EnumChord);\n};\nexport const isTonalChordArray = (x: any): x is TonalChord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof TonalChord);\n};\nexport class TonalChord implements ITonalChord {\n    static REGEX1 = /^([#b]?)(I{1,3}|i{1,3}|I?V|i?v|VI{1,2}|vi{1,2})(\\+|-?)$/;\n    static REGEX2 = /^([#b]?)([1-7])(M|m|\\+|-?)$/;\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n    constructor(nameIn: string);\n    constructor(chordIn: ITonalChord);\n    constructor(first: string | ITonalChord) {\n        if (typeof first === \"string\") {\n            let matched = TonalChord.REGEX1.exec(first);\n            if (matched) {\n                let s = matched[1];\n                this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                s = matched[2];\n                const p = parseRoman(s);\n                if (p !== 0 && p > 7 && p < -7) throw new Error(\"Roman number too large for degree.\");\n                this.degree = Math.abs(p);\n                s = matched[3];\n                this.chord = s.length === 0\n                    ? p > 0 ? EnumChord.MAJ : EnumChord.MIN\n                    : s === \"+\" ? EnumChord.AUG : EnumChord.DIM;\n            } else {\n                matched = TonalChord.REGEX2.exec(first);\n                if (matched) {\n                    let s = matched[1];\n                    this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                    s = matched[2];\n                    this.degree = +s;\n                    s = matched[3];\n                    this.chord = s.length === 0\n                        ? null\n                        : s === \"M\" ? EnumChord.MAJ\n                            : s === \"m\" ? EnumChord.MAJ\n                                : s === \"+\" ? EnumChord.AUG\n                                    : EnumChord.DIM;\n                } else throw new Error(\"Input string error: \" + first);\n            }\n        } else {\n            this.alteration = first.alteration;\n            this.degree = first.degree;\n            this.chord = first.chord.clone();\n        }\n        return this;\n    }\n    getChord(tonalityIn: Tonality) {\n        let chord: Chord;\n        if (this.chord) chord = new Chord(tonalityIn.getNoteFromDegree(this.degree));\n        else chord = tonalityIn.getTriad(this.degree);\n        if (this.alteration === 1) chord.base.add(new Interval(\"A1\"));\n        else if (this.alteration === -1) chord.base.sub(new Interval(\"A1\"));\n        return chord;\n    }\n    equals(chordIn: object) {\n        return isTonalChord(chordIn)\n            && chordIn.alteration === this.alteration\n            && chordIn.degree === this.degree\n            && chordIn.chord.equals(this.chord);\n    }\n    toString() {\n        let s = \"\";\n        if (this.alteration === 1) s = \"#\";\n        else if (this.alteration === -1) s = \"b\";\n        if (!this.chord) return s + this.degree;\n        s += toRoman(this.degree * (this.chord.equals(EnumChord.MIN) ? -1 : 1));\n        if (!this.chord.equals(EnumChord.MAJ) && !this.chord.equals(EnumChord.MIN)) {\n            if (this.chord.equals(EnumChord.AUG)) s += \"+\";\n            else if (this.chord.equals(EnumChord.AUG)) s += \"-\";\n            else s += this.chord.name().toLowerCase();\n        }\n        return s;\n    }\n    clone() {\n        return new TonalChord(this);\n    }\n}\n","import { Scale, isScale, EnumScale } from \"./Scale\";\nimport { Note, isNote } from \"./Note\";\nimport { Chord } from \"./Chord\";\nimport { Interval } from \"./Interval\";\n\nexport interface ITonality {\n    note: Note;\n    scale: Scale;\n}\nexport const isTonality = (x: any): x is ITonality => {\n    return x instanceof Tonality\n        || (typeof x === \"object\"\n        && isNote(x.note)\n        && isScale(x.scale));\n};\nexport class Tonality implements Iterable<Note>, ITonality {\n    note: Note;\n    scale: Scale;\n    constructor(tonalityIn: Tonality);\n    constructor(tonalityIn: string);\n    constructor(noteIn: Note, scaleIn: Scale);\n    constructor(first: Tonality | string | Note, second?: Scale) {\n        if (isTonality(first)) {\n            this.note = first.note.clone();\n            this.scale = first.scale.clone();\n        } else if (typeof first === \"string\") {\n            try {\n                this.note = new Note(first);\n            } catch (e) {\n                throw new Error(`No such tonality: ${first}.`);\n            }\n            this.scale = first.substr(first.length - 1).match(\"[A-G]\") ? EnumScale.MAJOR : EnumScale.MINOR;\n        } else {\n            this.note = first;\n            this.scale = second;\n        }\n        return this;\n    }\n    add(intervalIn: Interval) {\n        this.note.add(intervalIn);\n        return this;\n    }\n    sub(intervalIn: Interval) {\n        this.note.sub(intervalIn);\n        return this;\n    }\n\n    get notes() {\n        return this.scale.intervals.map(i => this.note.clone().add(i));\n    }\n    getNoteFromDegree(degreeIn: number) {\n        return this.note.clone().add(this.scale.getIntervalFromDegree(degreeIn));\n    }\n    getTriad(degreeIn: number) {\n        return new Chord(this.getNoteFromDegree(degreeIn), this.getNoteFromDegree(degreeIn + 2), this.getNoteFromDegree(degreeIn + 4));\n    }\n    getTriads() {\n        return this.scale.degrees.map(d => this.getTriad(d));\n    }\n    get triads() {\n        return this.getTriads();\n    }\n    toRelative() {\n        if (this.scale.equals(EnumScale.MAJOR)) {\n            this.note.sub(new Interval(\"m3\"));\n            this.scale = EnumScale.MINOR;\n        } else if (this.scale.equals(EnumScale.MINOR)) {\n            this.note.add(new Interval(\"m3\"));\n            this.scale = EnumScale.MAJOR;\n        } else throw new Error(\"Relative not found.\");\n        return this;\n    }\n    get relative() {\n        return this.clone().toRelative();\n    }\n    toNext() {\n        this.note.add(new Interval(\"P5\"));\n        return this;\n    }\n    get next() {\n        return this.clone().toNext();\n    }\n    toPrev() {\n        this.note.sub(new Interval(\"P5\"));\n        return this;\n    }\n    get prev() {\n        return this.clone().toPrev();\n    }\n    toString() {\n        return `${this.note.toString()} ${this.scale.getName() || this.scale.toString()}`;\n    }\n    clone() {\n        return new Tonality(this);\n    }\n    * [Symbol.iterator](): Iterator<Note> {\n        for (let i = 0; i < this.scale.size; i++) {\n            yield this.note.clone().add(this.scale.intervals[i]);\n        }\n    }\n}\n","export const gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nexport const lcm = (a: number, b: number): number => a * (b / gcd(a, b));\nexport const floorMod = (x: number, y: number) => {\n    return ((x % y) + y) % y;\n};\nexport const isStringArray = (x: any): x is string[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"string\");\n};\nexport const isNumberArray = (x: any): x is number[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"number\");\n};\nexport const parseRoman = (stringIn: string) => {\n    if (stringIn.length === 0) return 0;\n    let c: number;\n    if (stringIn.match(/[IVXLCDM]+/)) c = 1;\n    else if (stringIn.match(/[ivxlcdm]+/)) c = -1;\n    else throw new Error(\"Roman number error.\");\n    const string = stringIn.toUpperCase();\n    if (!string.match(/(M{0,3})(C{1,3}|C?D|DC{1,3}|CM)?(X{1,3}|X?L|LX{1,3}|XC)?(I{1,3}|I?V|VI{1,3}|IX)?$/)) {\n        throw new Error(\"Roman number error.\");\n    }\n    const r = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n    const a = [1, 5, 10, 50, 100, 500, 1000];\n    const rIn = string.split(\"\");\n    const aOut: number[] = [];\n    for (let i = 0; i < rIn.length; i++) {\n        for (let j = 0; j < r.length; j++) {\n            if (rIn[i] === r[j]) aOut[i] = a[j];\n        }\n    }\n    let sum = aOut[0];\n    for (let i = 0; i < rIn.length - 1; i++) {\n        if (aOut[i] >= aOut[i + 1]) {\n            sum += aOut[i + 1];\n        } else {\n            sum = sum + aOut[i + 1] - 2 * aOut[i];\n        }\n    }\n    return sum * c;\n};\nexport const toRoman = (nIn: number) => {\n    let n = Math.round(Math.abs(nIn));\n    if (n > 3999 || n === 0) throw new Error(\"Too large or Too small for Roman Number.\");\n    const a = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const r = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\n    let rOut = \"\";\n    for (let i = 0; i < a.length; i++) {\n        while (n >= a[i]) {\n            rOut += r[i];\n            n -= a[i];\n        }\n    }\n    return nIn > 0 ? rOut : rOut.toLowerCase();\n};\nexport const getValueFromCurve = (t0: number, t1: number, t: number, exp: number) => t0 + (t1 - t0) * (t ** (2 ** exp));\n/**\n * Get a fraction typle from a floating number.\n *\n * @param {number} v Floating number\n * @param {number} [approx=17 / 16] Approximation ratio (> 1)\n * @returns {[number, number]} fraction tuple\n */\nexport const nearestFraction = (v: number, approx: number = 17 / 16): [number, number] => {\n    let lastJ = 1;\n    for (let i = 1; ; i++) {\n        for (let j = lastJ; ; j++) {\n            const d = (j / i) / v;\n            if (d > approx) break;\n            if (d < approx && d > 1 / approx) return [i, j];\n            lastJ = j;\n        }\n    }\n};\n","export interface IVelocity {\n    velocity: number;\n}\nexport const isVelocity = (x: any): x is IVelocity => {\n    return x instanceof Velocity\n        || (typeof x === \"object\"\n        && typeof x.velocity === \"number\");\n};\nexport class EnumVelocity {\n    static get SILENT() { return new Velocity(0); }\n    static get PPP() { return new Velocity(10); }\n    static get PP() { return new Velocity(25); }\n    static get PIANISSIMO() { return new Velocity(25); }\n    static get P() { return new Velocity(50); }\n    static get MP() { return new Velocity(60); }\n    static get MEZZO_PIANO() { return new Velocity(60); }\n    static get MF() { return new Velocity(70); }\n    static get MEZZO_FORTE() { return new Velocity(70); }\n    static get F() { return new Velocity(85); }\n    static get FORTE() { return new Velocity(85); }\n    static get FF() { return new Velocity(100); }\n    static get FORTISSIMO() { return new Velocity(100); }\n    static get FFF() { return new Velocity(120); }\n}\nexport class Velocity implements IVelocity {\n    velocity: number;\n\n    constructor(velocityIn: number);\n    constructor(velocityIn: IVelocity);\n    constructor(velocityIn: number | IVelocity) {\n        if (typeof velocityIn === \"number\") this.velocity = velocityIn;\n        else this.velocity = velocityIn.velocity;\n        return this;\n    }\n    normalize() {\n        return this.velocity / 128;\n    }\n    clone() {\n        return new Velocity(this);\n    }\n    toString() {\n        return `Vel: ${this.velocity}`;\n    }\n}\n","import { AutomationPoint, isAutomationPointArray } from \"./AutomationPoint\";\nimport { Duration } from \"../Duration\";\nimport { getValueFromCurve } from \"../Utils\";\n\nexport interface IAutomation {\n    path: string;\n    points: AutomationPoint[];\n}\nexport const isAutomation = (x: any): x is IAutomation => {\n    return x instanceof Automation\n        || (typeof x.path === \"string\"\n        && isAutomationPointArray(x.points));\n};\nexport const isAutomationArray = (x: any): x is Automation[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof Automation);\n};\nexport class Automation implements IAutomation {\n    path: string;\n    points: AutomationPoint[];\n    constructor(path: string, points?: AutomationPoint[]);\n    constructor(automationIn: IAutomation);\n    constructor(first: string | IAutomation, points?: AutomationPoint[]) {\n        if (typeof first === \"string\") {\n            this.path = first;\n            this.points = points ? points.map(e => e.clone()) : [];\n        } else {\n            this.path = first.path;\n            this.points = first.points.map(e => e.clone());\n        }\n        return this;\n    }\n    getValueAtTime(time: Duration) {\n        this.sort();\n        let prev: AutomationPoint;\n        let next: AutomationPoint;\n        for (const p of this.points) {\n            if (p.offset.compareTo(time) < 0) prev = p;\n            if (p.offset.compareTo(time) > 0) {\n                next = p;\n                break;\n            }\n        }\n        if (!prev) return next.value;\n        if (!next) return prev.value;\n        if (prev && next) {\n            const duration = next.offset.clone().sub(prev.offset);\n            const split = time.clone().sub(prev.offset);\n            const ratio = split.div(duration);\n            return getValueFromCurve(prev.value, next.value, ratio, prev.exponent);\n        }\n        throw new Error(`No point in automation: ${this.path}`);\n    }\n    addPointAtTime(time: Duration) {\n        this.points.push(new AutomationPoint(this.getValueAtTime(time), time, 0));\n    }\n    sort() {\n        this.points = this.points.sort((a, b) => a.offset.compareTo(b.offset));\n    }\n    forward(duration: Duration) {\n        this.points.forEach(p => p.offset.add(duration));\n    }\n    rewind(duration: Duration) {\n        this.points.forEach(p => p.offset.sub(duration));\n    }\n    toString() {\n        return `Automation: \"${this.path}\": {${this.points.map(p => `${p.value.toFixed(2)}@${p.offset.toString()}`).join()}}`;\n    }\n    clone() {\n        return new Automation(this);\n    }\n}\n","import { Duration, isDuration } from \"../Duration\";\n\nexport interface IAutomationPoint {\n    value: number;\n    offset: Duration; // absolute position\n    exponent: number; // 0 for linear, 1 for quadratic\n}\nexport const isAutomationPoint = (x: any): x is IAutomationPoint => {\n    return x instanceof AutomationPoint\n        || (typeof x.value === \"number\"\n        && isDuration(x.offset)\n        && typeof x.exponent === \"number\");\n};\nexport const isAutomationPointArray = (x: any): x is AutomationPoint[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof AutomationPoint);\n};\nexport class AutomationPoint implements IAutomationPoint {\n    value: number;\n    offset: Duration;\n    exponent: number;\n    constructor(value: number, offset: Duration, exponent?: number);\n    constructor(pointIn: IAutomationPoint);\n    constructor(first: number | IAutomationPoint, offset?: Duration, exponent?: number) {\n        if (typeof first === \"number\") {\n            this.value = first;\n            this.offset = offset.clone();\n            this.exponent = exponent || 0;\n        } else {\n            this.value = first.value;\n            this.offset = first.offset;\n            this.exponent = first.exponent;\n        }\n        return this;\n    }\n    clone() {\n        return new AutomationPoint(this);\n    }\n}\n","import { TonalChord, isTonalChord, isTonalChordArray } from \"../TonalChord\";\nimport { isStringArray } from \"../Utils\";\nimport { Tonality } from \"../Tonality\";\n\nexport interface IChordProgression {\n    chords: TonalChord[];\n}\nexport const isChordProgression = (x: any): x is IChordProgression => {\n    return x instanceof ChordProgression\n        || (typeof x === \"object\"\n        && isTonalChord(x.chord));\n};\nexport class ChordProgression implements Iterable<TonalChord>, IChordProgression {\n    chords: TonalChord[];\n    constructor(cp: string);\n    constructor(cp: string[]);\n    constructor(c: TonalChord);\n    constructor(cp: TonalChord[]);\n    constructor(cp: IChordProgression);\n    constructor(first: string | string[] | TonalChord | TonalChord[] | IChordProgression) {\n        this.chords = this.from(first);\n        return this;\n    }\n    getChords(tonalityIn: Tonality) {\n        return this.chords.map(c => c.getChord(tonalityIn));\n    }\n    fromString(chords: string) {\n        return chords.split(/\\s+/).map(s => new TonalChord(s));\n    }\n    fromStringArray(chords: string[]) {\n        return chords.map(s => new TonalChord(s));\n    }\n    from(first: string | string[] | TonalChord | TonalChord[] | IChordProgression) {\n        if (typeof first === \"string\") return this.fromString(first);\n        if (isStringArray(first)) return this.fromStringArray(first);\n        if (isTonalChord(first)) return [first.clone()];\n        if (isTonalChordArray(first)) return first.map(c => c.clone());\n        return first.chords.map(c => c.clone());\n    }\n    append(first: string | string[] | TonalChord | TonalChord[] | IChordProgression) {\n        this.chords.concat(this.from(first));\n        return this;\n    }\n    prepend(first: string | string[] | TonalChord | TonalChord[] | IChordProgression) {\n        this.chords = this.from(first).concat(this.chords);\n        return this;\n    }\n    toString() {\n        return `ChordProgression: {${this.chords.map(tc => tc.toString()).join(\" \")}}`;\n    }\n    clone() {\n        return new ChordProgression(this);\n    }\n    * [Symbol.iterator](): Iterator<TonalChord> {\n        for (const chord of this.chords) {\n            yield chord;\n        }\n    }\n}\n","import { ChordProgression } from \"./ChordProgression\";\n\nexport class EnumChordProgression {\n    static PERFECT = new ChordProgression(\"IV V I\");\n    static REV_ANDAL = new ChordProgression(\"bVI bVII I\");\n    static CANON = new ChordProgression(\"I V vi iii IV I\");\n    static POP1 = new ChordProgression(\"IV V iii vi\");\n    static POP2 = new ChordProgression(\"I vi IV V\");\n    static POP3 = new ChordProgression(\"I V vi IV\");\n    static EPIC1 = new ChordProgression(\"vi IV I V\");\n    static EPIC2 = new ChordProgression(\"vi I V ii\");\n    static EDM1 = new ChordProgression(\"IV I vi V\");\n    static EDM2 = new ChordProgression(\"IV V vi I\");\n    static TRAP1 = new ChordProgression(\"vi I IV III\");\n}\n","import * as seedrandom from \"seedrandom\";\n\nexport class Random {\n    private prng: seedrandom.prng;\n    constructor(seedIn?: string) {\n        this.prng = seedrandom(seedIn || \"\");\n        return this;\n    }\n    quick() {\n        return this.prng.quick();\n    }\n    int32() {\n        return this.prng.int32();\n    }\n    double() {\n        return this.prng.double();\n    }\n    state() {\n        return this.prng.state();\n    }\n    randint(minimum: number, maximum: number) {\n        return Math.floor(this.quick() * (maximum - minimum + 1)) + minimum;\n    }\n}\n","import { Modifier } from \"./Modifier\";\nimport { Segment } from \"../../track/Segment\";\nimport { Duration } from \"../../Duration\";\n\ninterface IHSidedClipperParams {\n    duration: Duration;\n    mode?: \"preserve\" | \"clip\" | \"remove\"; // mode for last/first notes, preserve or clip their length or remove them\n}\nexport class HClipperRight extends Modifier {\n    static use = (s: Segment, params: IHSidedClipperParams) => {\n        const duration = params.duration;\n        const mode = params.mode || \"clip\";\n        let end = duration.clone();\n        s.notes.forEach((note, i) => {\n            if (note.offset.compareTo(duration) >= 0) {\n                s.notes[i] = null;\n            } else {\n                const noteEnd = note.offset.clone().add(note.duration);\n                if (mode === \"preserve\") {\n                    if (noteEnd.compareTo(end) > 0) end = noteEnd;\n                } else {\n                    if (noteEnd.compareTo(duration) > 0) {\n                        if (mode === \"clip\") note.duration = noteEnd.sub(duration);\n                        else if (mode === \"remove\") s.notes[i] = null;\n                    }\n                }\n            }\n        });\n        s.notes = s.notes.filter(e => e);\n        s.duration = end;\n        s.automations.forEach((a) => {\n            a.sort();\n            const $oob = a.points.findIndex(p => p.offset.compareTo(end) > 0);\n            if ($oob !== -1) a.points = a.points.slice(0, $oob);\n        });\n        return s;\n    }\n}\nexport class HClipperLeft extends Modifier {\n    static use = (s: Segment, params: IHSidedClipperParams) => {\n        const duration = params.duration;\n        const mode = params.mode || \"clip\";\n        let start = duration.clone();\n        s.notes.forEach((note, i) => {\n            const noteEnd = note.offset.clone().add(note.duration);\n            if (noteEnd.compareTo(duration) <= 0) {\n                s.notes[i] = null;\n            } else {\n                if (mode === \"preserve\") {\n                    if (note.offset.compareTo(start) < 0) start = note.offset;\n                } else {\n                    if (note.offset.compareTo(duration) < 0) {\n                        if (mode === \"clip\") {\n                            const oldDuration = note.duration;\n                            note.duration = noteEnd.sub(duration);\n                            note.offset.add(oldDuration.sub(note.duration));\n                        } else if (mode === \"remove\") {\n                            s.notes[i] = null;\n                        }\n                    }\n                }\n            }\n        });\n        s.notes = s.notes.filter(e => e);\n        s.duration.sub(start);\n        s.notes.forEach(note => note.offset.sub(start));\n        s.automations.forEach((a) => {\n            a.sort();\n            const $0 = a.points.findIndex(p => p.offset.compareTo(start) >= 0);\n            if ($0 !== -1) a.points = a.points.slice($0);\n            a.rewind(start);\n        });\n        return s;\n    }\n}\ninterface IHClipperParams {\n    start: Duration;\n    end: Duration;\n    mode: \"preserve\" | \"clip\" | \"remove\";\n}\nexport class HClipper extends Modifier {\n    static use = (s: Segment, params: IHClipperParams) => {\n        const mode = params.mode || \"clip\";\n        let { start, end } = params;\n        if (start.compareTo(end) > 0) [start, end] = [end, start];\n        if (end.compareTo(s.duration) !== 0) HClipperRight.use(s, { mode, duration: end });\n        if (start.compareTo(new Duration(0, 4)) !== 0) HClipperLeft.use(s, { mode, duration: start });\n        return s;\n    }\n}\n","import { Segment } from \"../../track/Segment\";\nimport { IGeneratorParams } from \"../generator/Generator\";\n\n/**\n * Describe a processor that modifies a segment, return itself modified.\n *\n * @export\n * @abstract\n * @class Modifier\n */\nexport abstract class Modifier {\n    static use: (segmentIn: Segment, modParamsIn?: any, genParamsIn?: Partial<IGeneratorParams>) => Segment;\n}\n","/* eslint-disable no-console */\nimport { Interval } from \"./Interval\";\nimport { Note } from \"./Note\";\nimport { Pitch } from \"./Pitch\";\nimport { Chord, EnumChord } from \"./Chord\";\nimport { EnumScale } from \"./Scale\";\nimport { Tonality } from \"./Tonality\";\nimport { EnumChordProgression } from \"./genre/EnumChordProgression\";\nimport { Random } from \"./genre/Random\";\nimport { TrackNote } from \"./track/TrackNote\";\nimport { Duration } from \"./Duration\";\nimport { Segment } from \"./track/Segment\";\nimport { HClipper } from \"./genre/modifier/HClipper\";\n\nconsole.log(new Pitch(\"C8\").offset);\nnew Note(\"#G\").getInterval(new Note(\"C\"));\nconsole.log(new Note(\"#G\").getInterval(new Note(\"C\")).toString());\nconsole.log(new Note(\"#C\").getInterval(new Note(\"G\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bC\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#C\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bB\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#A\")).toString());\n\nconst n = new Note(1);\nconsole.log(n.toString());\n\nconst p = new Pitch(\"##F0\");\nconsole.log(p.add(\"A4\").toString() + \" \" + p.offset);\n\nconst f = 440;\nconsole.log(Pitch.fromFrequency(f).offset);\n\nconst c = new Chord(new Pitch(\"C1\"), new Pitch(\"bC2\"), new Pitch(\"#C1\"));\n\nconsole.log(c.toString());\n\nconsole.log(new Interval(\"M3\").reverse().toString());\n\nconsole.log(c.notes.toString());\nconsole.log(c.contains(new Pitch(\"#C1\")));\nconst c1 = new Chord(new Pitch(\"C1\"), new Pitch(\"E1\"), new Pitch(\"G1\"));\nconsole.log(c1.getEnumChord());\n\nconst s = EnumScale.MINOR;\nconsole.log(s.toString());\nconsole.log(new Tonality(\"C\").toRelative().toString());\nconsole.log(new Tonality(\"C\").toPrev().toString());\nconsole.log(new Tonality(\"C\").toNext().toString());\n\nconsole.log(EnumChordProgression.EPIC1.toString());\n\nconsole.log(new Random(\"1\").randint(0, 100));\n\nconst tn1 = new TrackNote({ pitch: new Pitch(\"C1\"), duration: new Duration(1, 4), offset: new Duration(0, 4) });\nconst tn2 = new TrackNote({ pitch: new Pitch(\"D1\"), duration: new Duration(1, 4), offset: new Duration(1, 4) });\nconst tn3 = new TrackNote({ pitch: new Pitch(\"E1\"), duration: new Duration(1, 4), offset: new Duration(2, 4) });\nconst seg = new Segment({ notes: [tn2, tn3, tn1], automations: [], duration: new Duration(1, 1) });\nseg.notes.sort((a, b) => a.offset.compareTo(b.offset)).forEach(n => console.log(n.toString()));\nHClipper.use(seg, { start: new Duration(1, 8), end: new Duration(3, 8), mode: \"clip\" });\nseg.notes.sort((a, b) => a.offset.compareTo(b.offset)).forEach(n => console.log(n.toString()));\nconsole.log(seg.duration.toString());\nconsole.log(new Interval(\"M2\").fraction.toString());\nconsole.log(EnumChord.MAJ.toChord(\"C\").getImaginaryBase().toString());\nconsole.log(Duration.random(new Random(\"2\"), new Duration(1, 4), new Duration(3, 1), new Duration(1, 2)));\n","export const isEnumInstrumentTagArray = (x: any): x is EnumInstrumentTag[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"number\");\n};\nexport enum EnumInstrumentTag {\n    LEAD,\n    PAD,\n    KICK,\n    SNARE,\n    TOM,\n    HAT,\n    RIDE,\n    STICK,\n    CLAP,\n    TAMBOURINE,\n    CYMBAL,\n    VOCAL,\n    SFX,\n    BASS,\n    STRING,\n    PLUCKED,\n    BOWED,\n    BRASS,\n    WOODWIND,\n    SYNTH,\n    GUITAR,\n    KEYBOARD,\n    ORGAN,\n    DRUM,\n    UNPITCHED,\n    ACOUSTIC,\n    ELECTRONIC,\n    PITCHED,\n    HAS_RANGE,\n    PERCUSSION,\n    VOICE\n}\nexport const {\n    LEAD,\n    PAD,\n    KICK,\n    SNARE,\n    TOM,\n    HAT,\n    RIDE,\n    STICK,\n    CLAP,\n    TAMBOURINE,\n    CYMBAL,\n    VOCAL,\n    SFX,\n    BASS,\n    STRING,\n    PLUCKED,\n    BOWED,\n    BRASS,\n    WOODWIND,\n    SYNTH,\n    GUITAR,\n    KEYBOARD,\n    ORGAN,\n    DRUM,\n    UNPITCHED,\n    ACOUSTIC,\n    ELECTRONIC,\n    PITCHED,\n    HAS_RANGE,\n    PERCUSSION,\n    VOICE\n} = EnumInstrumentTag;\n","import { EnumInstrumentTag, isEnumInstrumentTagArray } from \"./EnumInstrumentTag\";\nimport { Pitch, isPitch } from \"../Pitch\";\nimport { Param } from \"../Param\";\n\nexport interface IInstrument {\n    name: string;\n    params: Record<string, Param>;\n}\nexport type TConcreteInstrument = typeof Instrument & (new (optionsIn: IInstrument) => Instrument);\nexport const isInstrument = (x: any): x is Instrument => {\n    return x instanceof Instrument\n        || (typeof x === \"object\"\n        && typeof x.name === \"string\");\n};\nexport const isTypeofInstrument = (x: any): x is typeof Instrument => {\n    return typeof x === \"object\"\n        && isEnumInstrumentTagArray(x.TAGS)\n        && typeof x.NAME === \"string\"\n        && (typeof x.MIN_PITCH === \"undefined\" || isPitch(x.MIN_PITCH))\n        && (typeof x.MAX_PITCH === \"undefined\" || isPitch(x.MAX_PITCH));\n};\nexport abstract class Instrument implements IInstrument {\n    static NAME: string; // instrument name\n    static TAGS: EnumInstrumentTag[];\n    static MIN_PITCH?: Pitch;\n    static MAX_PITCH?: Pitch;\n    name: string; // instrument instance name\n    params: Record<string, Param>;\n\n    constructor(optionsIn: IInstrument) {\n        this.name = optionsIn.name;\n        this.params = {};\n        for (const key in optionsIn.params) {\n            this.params[key] = optionsIn.params[key].clone();\n        }\n        return this;\n    }\n    getParamValue(path: string) {\n        return this.params[path] ? this.params[path].value : null;\n    }\n    setParamValue(path: string, value: number) {\n        if (this.params[path]) this.params[value].value = value;\n    }\n    hasTag(...tagsIn: EnumInstrumentTag[]) {\n        return tagsIn.every(tag => this.tags.indexOf(tag) !== -1);\n    }\n    get tags() {\n        return (this.constructor as typeof Instrument).TAGS;\n    }\n    get minPitch() {\n        return (this.constructor as typeof Instrument).MIN_PITCH;\n    }\n    get maxPitch() {\n        return (this.constructor as typeof Instrument).MAX_PITCH;\n    }\n    toString() {\n        return this.constructor.name;\n    }\n}\n","import { isTypeofInstrument, TConcreteInstrument } from \"../instrument/Instrument\";\nimport { TrackNote, isTrackNoteArray } from \"./TrackNote\";\nimport { Automation, isAutomationArray } from \"../effect/Automation\";\nimport { Duration, isDuration } from \"../Duration\";\nimport { Pitch } from \"../Pitch\";\n\nexport interface ISegment {\n    instrument?: TConcreteInstrument;\n    notes: TrackNote[];\n    automations: Automation[];\n    duration: Duration;\n}\nexport const isSegment = (x: any): x is ISegment => {\n    return x instanceof Segment\n        || (typeof x === \"object\"\n        && (typeof x.instrument === \"undefined\" || isTypeofInstrument(x.instrument))\n        && isTrackNoteArray(x.notes)\n        && isAutomationArray(x.automations)\n        && isDuration(x.duration));\n};\nexport const isSegmentArray = (x: any): x is ISegment[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof Segment);\n};\nexport class Segment implements ISegment {\n    instrument?: TConcreteInstrument;\n    notes: TrackNote[];\n    automations: Automation[];\n    duration: Duration;\n    constructor(optionsIn: ISegment) {\n        this.instrument = optionsIn.instrument;\n        this.notes = optionsIn.notes.map(e => e.clone());\n        this.automations = optionsIn.automations.map(e => e.clone());\n        this.duration = optionsIn.duration.clone();\n        return this;\n    }\n    get pitches() {\n        return this.notes.map(note => note.pitch);\n    }\n    set pitches(pitchesIn: Pitch[]) {\n        pitchesIn.forEach((e, i) => {\n            const trackNote = this.notes[i];\n            if (trackNote) trackNote.pitch = e.clone();\n        });\n    }\n    get noteDurations() {\n        return this.notes.map(note => note.duration);\n    }\n    set noteDurations(durationsIn: Duration[]) {\n        durationsIn.forEach((e, i) => {\n            const trackNote = this.notes[i];\n            if (trackNote) trackNote.duration = e.clone();\n        });\n    }\n    get noteOffsets() {\n        return this.notes.map(note => note.offset);\n    }\n    set noteOffsets(offsetsIn: Duration[]) {\n        offsetsIn.forEach((e, i) => {\n            const trackNote = this.notes[i];\n            if (trackNote) trackNote.offset = e.clone();\n        });\n    }\n    clone() {\n        return new Segment(this);\n    }\n}\n","import { Pitch, isPitch } from \"../Pitch\";\nimport { Velocity, isVelocity } from \"../Velocity\";\nimport { Duration, isDuration } from \"../Duration\";\nimport { Articulation, isArticulation } from \"../Articulation\";\n\nexport interface ITrackNote {\n    duration: Duration;\n    offset: Duration;\n    pitch?: Pitch;\n    velocity?: Velocity;\n    articulation?: Articulation;\n}\nexport const isTrackNote = (x: any): x is ITrackNote => {\n    return x instanceof TrackNote\n        || (typeof x === \"object\"\n        && isDuration(x.duration)\n        && isDuration(x.offset)\n        && (typeof x.pitch === \"undefined\" || isPitch(x.pitch))\n        && (typeof x.velocity === \"undefined\" || isVelocity(x.velocity))\n        && (typeof x.articulation === \"undefined\" || isArticulation(x.articulation)));\n};\nexport const isTrackNoteArray = (x: any): x is TrackNote[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof TrackNote);\n};\nexport class TrackNote implements ITrackNote {\n    duration: Duration;\n    offset: Duration;\n    pitch?: Pitch;\n    velocity?: Velocity;\n    articulation?: Articulation;\n    constructor(optionsIn: ITrackNote) {\n        this.duration = optionsIn.duration.clone();\n        this.offset = optionsIn.offset.clone();\n        if (optionsIn.pitch) this.pitch = optionsIn.pitch.clone();\n        if (optionsIn.velocity) this.velocity = optionsIn.velocity.clone();\n        if (optionsIn.articulation) this.articulation = optionsIn.articulation.clone();\n        return this;\n    }\n    clone() {\n        return new TrackNote(this);\n    }\n    toString() {\n        return `${this.offset} -> ${this.pitch ? this.pitch.toString() : \"*\"} ${this.duration}`;\n    }\n}\n","module.exports = require(\"crypto\");"],"sourceRoot":""}