{"version":3,"sources":["webpack://sol/./src/Chord.ts","webpack://sol/./src/Enum.ts","webpack://sol/./src/Frequency.ts","webpack://sol/./src/Interval.ts","webpack://sol/./src/Note.ts","webpack://sol/./src/Pitch.ts","webpack://sol/./src/Scale.ts","webpack://sol/./src/TonalChord.ts","webpack://sol/./src/Tonality.ts","webpack://sol/./src/Utils.ts","webpack://sol/./src/genre/ChordProgression.ts","webpack://sol/./src/genre/EnumChordProgression.ts","webpack://sol/webpack/bootstrap","webpack://sol/webpack/runtime/define property getters","webpack://sol/webpack/runtime/hasOwnProperty shorthand","webpack://sol/webpack/runtime/make namespace object","webpack://sol/./src/index.ts"],"names":["EnumChord","Enum","MAJ","MIN","AUG","DIM","SUS2","SUS","SUS4","DOM7","MAJ7","MINMAJ7","MIN7","AUGMAJ7","AUG7","DIMMIN7","DIM7","DOM7DIM5","constructor","first","_name","intervalsIn","intervals","Interval","map","i","clone","byChord","chordIn","values","find","enumChord","length","every","interval","equals","byName","name","isIntervalArray","e","isChord","x","Chord","isNote","base","isAbsolute","isChordArray","Array","isArray","Symbol","iterator","isPitch","Pitch","Note","arrayIn","isPitchArray","sort","pitch","getInterval","isNoteArray","note","size","notes","add","contains","noteIn","inverseUp","interval0","sub","octaveReverse","inverseDown","inverse","inversion","getEnumChord","toString","o","next","value","done","indexes","key","valueOf","Error","ordinal","indexOf","Frequency","isInterval","degree","onset","octave","el","DEGREE_TO_OFFSET","EnumIntervalProperty","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","byAbb","abbIn","abbMap","SyntaxError","abb","propertyIn","P","M","m","A","d","getOffsetFromProperty","degreeIn","floorMod","getPropertyFromOffset","onsetIn","getOffsetFromDegree","Math","floor","second","third","fromString","nameIn","matched","REGEX","exec","parseInt","fromOffset","offsetIn","fromRatio","ratioIn","offset","round","log","iIn","reverse","ratio","property","fromArray","intervalIn","sOnset","sOctave","compare","y","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","index","enumNote","alteration","split","forEach","c","alterationIn","newEnumNote","TypeError","that","repeat","abs","fromFrequency","f","pitchIn","EnumScale","Scale","PENTA","IONIAN","DORIAN","PHRYGIAN","LYDIAN","MIXOLYDIAN","AEOLIAN","LOCRIAN","ASCENDING_MELODIC_MINOR","PHRYGIAN_MAJ6","LYDIAN_AUG","LYDIAN_DOM","MIXOLYDIAN_MIN6","LOCRIAN_MAJ2","SUPER_LOCRIAN","isScale","isStringArray","degreeNames","scaleName","degreeName","addNote","push","getIntervalFromIndex","getIntervalFromDegree","degrees","scaleIn","getName","s","sI","sN","isTonalChord","TonalChord","chord","isTonalChordArray","REGEX1","p","parseRoman","REGEX2","getChord","tonalityIn","getNoteFromDegree","getTriad","toRoman","toLowerCase","isTonality","Tonality","scale","substr","match","getTriads","triads","toRelative","relative","toNext","toPrev","prev","gcd","a","b","lcm","isNumberArray","stringIn","string","toUpperCase","r","rIn","aOut","j","sum","nIn","n","rOut","isChordProgression","ChordProgression","cp","chords","fromStringArray","getChords","tc","join","EnumChordProgression","console","c1"],"mappings":"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","file":"index.js","sourcesContent":["import { Interval, isIntervalArray } from \"./Interval\";\nimport { Note, isNoteArray, isNote } from \"./Note\";\nimport { Pitch, isPitchArray } from \"./Pitch\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumChordName = \"MAJ\" | \"MIN\" | \"AUG\" | \"DIM\" | \"SUS2\" | \"SUS\" | \"SUS4\" | \"DOM7\" | \"MAJ7\" | \"MINMAJ7\" | \"MIN7\" | \"AUGMAJ7\" | \"AUG7\" | \"DIMMIN7\" | \"DIM7\" | \"DOM7DIM5\";\nexport class EnumChord extends Enum {\n    protected static indexes = [\"MAJ\", \"MIN\", \"AUG\", \"DIM\", \"SUS2\", \"SUS\", \"SUS4\", \"DOM7\", \"MAJ7\", \"MINMAJ7\", \"MIN7\", \"AUGMAJ7\", \"AUG7\", \"DIMMIN7\", \"DIM7\", \"DOM7DIM5\"] as TEnumChordName[];\n    static get MAJ() { return new EnumChord(\"MAJ\", \"M3\", \"P5\"); }\n    static get MIN() { return new EnumChord(\"MIN\", \"m3\", \"P5\"); }\n    static get AUG() { return new EnumChord(\"AUG\", \"M3\", \"A5\"); }\n    static get DIM() { return new EnumChord(\"DIM\", \"m3\", \"d5\"); }\n    static get SUS2() { return new EnumChord(\"SUS2\", \"M2\", \"P5\"); }\n    static get SUS() { return new EnumChord(\"SUS\", \"P5\", \"P5\"); }\n    static get SUS4() { return new EnumChord(\"SUS4\", \"P5\", \"P5\"); }\n    static get DOM7() { return new EnumChord(\"DOM7\", \"M3\", \"P5\", \"m7\"); }\n    static get MAJ7() { return new EnumChord(\"MAJ7\", \"M3\", \"P5\", \"M7\"); }\n    static get MINMAJ7() { return new EnumChord(\"MINMAJ7\", \"m3\", \"P5\", \"M7\"); }\n    static get MIN7() { return new EnumChord(\"MIN7\", \"m3\", \"P5\", \"m7\"); }\n    static get AUGMAJ7() { return new EnumChord(\"AUGMAJ7\", \"M3\", \"A5\", \"M7\"); }\n    static get AUG7() { return new EnumChord(\"AUG7\", \"M3\", \"A5\", \"m7\"); }\n    static get DIMMIN7() { return new EnumChord(\"DIMMIN7\", \"m3\", \"d5\", \"m7\"); }\n    static get DIM7() { return new EnumChord(\"DIM7\", \"m3\", \"d5\", \"d7\"); }\n    static get DOM7DIM5() { return new EnumChord(\"DOM7DIM5\", \"M3\", \"d5\", \"m7\"); }\n\n    _name: string;\n    intervals: Interval[];\n    private constructor(nameIn: string, ...intervalsIn: string[]);\n    private constructor(chord: EnumChord);\n    private constructor(first: string | EnumChord, ...intervalsIn: string[]) {\n        super();\n        if (typeof first === \"string\") {\n            this._name = first;\n            this.intervals = Interval.fromArray(...intervalsIn);\n        } else {\n            this._name = first._name;\n            this.intervals = first.intervals.map(i => i.clone());\n        }\n        return this;\n    }\n    static byChord(chordIn: IChord) {\n        return this.values<EnumChord>().find((enumChord) => {\n            return enumChord.intervals.length === chordIn.intervals.length\n                && enumChord.intervals.every((interval, i) => interval.equals(chordIn.intervals[i]));\n        }) || null;\n    }\n    static byName(chordIn: TEnumChordName) {\n        return EnumChord[chordIn];\n    }\n    name() {\n        return this._name;\n    }\n    equals(chordIn: { intervals?: any }) {\n        return \"intervals\" in chordIn\n            && isIntervalArray(chordIn.intervals)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    clone() {\n        return new EnumChord(this);\n    }\n}\nexport interface IChord {\n    base: Note | Pitch;\n    intervals: Interval[];\n    isAbsolute: boolean;\n}\nexport const isChord = (x: any): x is IChord => {\n    return x instanceof Chord\n        || (typeof x === \"object\"\n        && isNote(x.base)\n        && isIntervalArray(x.intervals)\n        && typeof x.isAbsolute === \"boolean\");\n};\nexport const isChordArray = (x: any): x is Chord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof Chord);\n};\nexport class Chord implements Iterable<Note>, IChord {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    isAbsolute: boolean;\n    /**\n     * Gives a new Chord instance (clone)\n     * @param {IChord} chordIn\n     * @memberof Chord\n     */\n    constructor(chordIn: IChord);\n    /**\n     * Construct chord by notes\n     * @param {(Note | Pitch | string)} base\n     * @param {(...Note[] | Pitch[])} notes\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     * @param {Pitch} base\n     * @param {...Pitch[]} pitches\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: IChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        this.isAbsolute = false;\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n            this.isAbsolute = first.isAbsolute;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        this.isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) this.isAbsolute = false;\n        if (!this.isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn) && this.isAbsolute) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes(): Note[] | Pitch[] {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    contains(noteIn: Note | Pitch) {\n        return !!this.notes.find(note => noteIn.equals(note));\n    }\n    inverseUp() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[0];\n        this.base.add(interval0);\n        for (let i = 0; i < this.intervals.length - 1; i++) {\n            this.intervals[i] = this.intervals[i + 1].sub(interval0);\n        }\n        this.intervals[this.intervals.length - 1] = interval0.octaveReverse();\n        return this;\n    }\n    inverseDown() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[this.intervals.length - 1].octaveReverse();\n        this.base.sub(interval0);\n        for (let i = this.intervals.length - 1; i > 0; i--) {\n            this.intervals[i] = this.intervals[i - 1].add(interval0);\n        }\n        this.intervals[0] = interval0;\n        return this;\n    }\n    inverse(inversion: number) {\n        if (this.intervals.length === 0) return this;\n        if (inversion > 0) {\n            for (let i = 0; i < inversion; i++) {\n                this.inverseUp();\n            }\n        }\n        if (inversion < 0) {\n            for (let i = 0; i > inversion; i--) {\n                this.inverseDown();\n            }\n        }\n        return this;\n    }\n    getEnumChord() {\n        return EnumChord.byChord(this);\n    }\n    equals(chordIn: object) {\n        return isChord(chordIn)\n            && chordIn.isAbsolute === this.isAbsolute\n            && chordIn.base.equals(this.base)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    [Symbol.iterator](): Iterator<Note | Pitch> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note | Pitch;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = i === -1 ? o.base : o.base.clone().add(o.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","export class Enum {\n    protected static indexes: string[] = [];\n    static values<T extends Enum>(): T[] {\n        return this.indexes.map(key => (this as unknown as { [key: string]: T })[key]);\n    }\n    static valueOf<T extends Enum>(key: string): T {\n        return (this as unknown as { [key: string]: T })[key];\n    }\n    protected constructor() {\n        return this;\n    }\n    name(): string {\n        throw new Error(\"Method not implemented\");\n    }\n    ordinal(): number {\n        return (this.constructor as typeof Enum).indexes.indexOf(this.name());\n    }\n    toString(): string {\n        return this.name();\n    }\n}\n","export class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n}\n","import { floorMod } from \"./Utils\";\nimport { Enum } from \"./Enum\";\nimport { Frequency } from \"./Frequency\";\n\nexport interface IInterval {\n    degree: number;\n    onset: number;\n    octave: number;\n}\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is IInterval => {\n    return x instanceof Interval\n        || (typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MAJOR\" | \"MINOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty extends Enum {\n    protected static indexes = [\"PERFECT\", \"MAJOR\", \"MINOR\", \"AUGMENTED\", \"DIMINISHED\"];\n    private static abbMap: { [key: string]: TIntervalPropertyValue } = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static get PERFECT() { return new EnumIntervalProperty(\"P\"); }\n    static get MAJOR() { return new EnumIntervalProperty(\"M\"); }\n    static get MINOR() { return new EnumIntervalProperty(\"m\"); }\n    static get AUGMENTED() { return new EnumIntervalProperty(\"A\"); }\n    static get DIMINISHED() { return new EnumIntervalProperty(\"d\"); }\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    abb: TIntervalProperty;\n    private constructor(abbIn: TIntervalProperty) {\n        super();\n        this.abb = abbIn;\n        return this;\n    }\n    name() {\n        return EnumIntervalProperty.abbMap[this.abb];\n    }\n    toString() {\n        return this.name();\n    }\n    equals(propertyIn: object) {\n        return propertyIn instanceof EnumIntervalProperty\n            && this.abb === propertyIn.abb;\n    }\n}\n\nexport class Interval implements IInterval {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn.equals(EnumIntervalProperty.PERFECT)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -1;\n        } else {\n            if (propertyIn.equals(EnumIntervalProperty.MAJOR)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.MINOR)) return -1;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     * @memberof Interval\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     * @param {(IInterval)} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: IInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     * @param {number} degreeIn\n     * @param {number} [onset]\n     * @param {number} [octave]\n     * @memberof Interval\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: IInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.constructor(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.degree = floorMod(first - 1, 7) + 1;\n            this.onset = second || 0;\n            this.octave = Math.floor((first - 1) / 7) + (third || 0);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): IInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromRatio(ratioIn: number) {\n        const offset = Math.round(Math.log(ratioIn) / Math.log(Frequency.SEMITONE));\n        return new Interval(offset);\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    octaveReverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 1 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get ratio() {\n        return Frequency.SEMITONE ** this.offset;\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | IInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n            && this.degree === intervalIn.degree\n            && this.onset === intervalIn.onset\n            && this.octave === intervalIn.octave;\n    }\n    toString() {\n        const sOnset = this.property ? this.property.abb : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n}\n","import { floorMod } from \"./Utils\";\nimport { Interval, TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class EnumNote extends Enum {\n    protected static indexes: TEnumNoteValue[] = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    private static offsetMap: { [key: number]: TEnumNoteValue } = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        super();\n        this.offset = offsetIn;\n        return this;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexes[floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    ordinal() { return this.index; }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n}\nexport interface INote {\n    enumNote: EnumNote;\n    alteration: number;\n}\nexport const isNote = (x: any): x is INote => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Note);\n};\nexport class Note implements INote {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     * @memberof Note\n     */\n    constructor()\n    /**\n     * New note\n     * @param {EnumNote} noteIn\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     * @param {INote} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: INote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     * @param {number} offset\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: EnumNote | INote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): INote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): INote {\n        const note = floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n            && this.enumNote.equals(noteIn.enumNote)\n            && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: INote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | INote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name();\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n","import { Note, EnumNote, INote, isNote } from \"./Note\";\nimport { Interval } from \"./Interval\";\nimport { Frequency } from \"./Frequency\";\n\nexport interface IPitch extends INote {\n    octave: number;\n}\nexport const isPitch = (x: any): x is IPitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note implements IPitch {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    static fromFrequency(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n    static MINIMUM = Pitch.fromFrequency(20);\n    static MAXIMUM = Pitch.fromFrequency(20000);\n    octave: number;\n\n    /**\n     * Returns C0\n     * @memberof Pitch\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     * @param {IPitch} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: IPitch);\n    /**\n     * Add octave info to a note\n     * @param {EnumNote | INote} noteIn\n     * @param {number} [octaveIn]\n     * @memberof Pitch\n     */\n    constructor(noteIn: EnumNote | INote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} pitchIn\n     * @memberof Note\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(first?: IPitch | EnumNote | INote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote) {\n            super(first);\n            this.octave = second || 0;\n        } else if (isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n        return this;\n    }\n    static fromString(nameIn: string): IPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n            && isPitch(pitchIn)\n            && this.octave === pitchIn.octave;\n    }\n    getInterval(pitchIn: IPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | IPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n}\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { isStringArray, floorMod } from \"./Utils\";\n\nexport class EnumScale {\n    static get MAJOR() { return new Scale(\"Major\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MINOR() { return new Scale(\"Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get PENTA() { return new Scale(\"Penta\", \"P1:Gong\", \"M2:Shang\", \"M3:Jiao\", \"P5:Zhi\", \"M6:Yu\"); }\n\n    static get IONIAN() { return EnumScale.MAJOR; }\n    static get DORIAN() { return new Scale(\"Dorian\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get PHRYGIAN() { return new Scale(\"Phrygian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN() { return new Scale(\"Lydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MIXOLYDIAN() { return new Scale(\"Mixolydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get AEOLIAN() { return EnumScale.MINOR; }\n    static get LOCRIAN() { return new Scale(\"Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n\n    static get ASCENDING_MELODIC_MINOR() { return new Scale(\"Ascending Melodic Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get PHRYGIAN_MAJ6() { return new Scale(\"Phrygian M6\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN_AUG() { return new Scale(\"Lydian Augmented\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"A5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get LYDIAN_DOM() { return new Scale(\"Lydian Dominant\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get MIXOLYDIAN_MIN6() { return new Scale(\"Mixolydian m6\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LOCRIAN_MAJ2() { return new Scale(\"Locrian M2\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get SUPER_LOCRIAN() { return new Scale(\"Super Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"d4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n}\nexport interface IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n}\nexport const isScale = (x: any): x is IScale => {\n    return x instanceof Scale\n        || (typeof x === \"object\"\n        && isStringArray(x.degreeNames)\n        && isIntervalArray(x.intervals));\n};\nexport class Scale implements Iterable<Interval>, IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n\n    constructor(nameIn: string, ...degreesIn: string[]);\n    constructor(scaleIn: IScale);\n    constructor(first: string | IScale, ...degreesIn: string[]) {\n        if (typeof first === \"string\") {\n            this.scaleName = first;\n            this.intervals = [];\n            this.degreeNames = [];\n            for (let i = 0; i < degreesIn.length; i++) {\n                const degreeName = degreesIn[i];\n                const split = degreeName.split(\":\");\n                if (split.length === 2) {\n                    this.intervals[i] = new Interval(split[0]);\n                    this.degreeNames[i] = split[1];\n                } else {\n                    this.intervals[i] = new Interval(degreeName);\n                    this.degreeNames[i] = degreeName;\n                }\n            }\n        } else {\n            this.scaleName = first.scaleName;\n            this.intervals = first.intervals.map(i => i.clone());\n            this.degreeNames = [...first.degreeNames];\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length;\n    }\n    addNote(noteIn: string) {\n        let interval: Interval;\n        let name: string;\n        const split = noteIn.split(\":\");\n        if (split.length === 2) {\n            interval = new Interval(split[0]);\n            name = split[1];\n        } else {\n            interval = new Interval(noteIn);\n            name = noteIn;\n        }\n        this.intervals.push(interval);\n        this.degreeNames.push(name);\n        return this;\n    }\n    getIntervalFromIndex(index: number) {\n        return this.intervals[index];\n    }\n    getIntervalFromDegree(degreeIn: number) {\n        return this.intervals.find((interval) => {\n            return floorMod(degreeIn - 1, this.intervals.length) + 1 === interval.degree;\n        });\n    }\n    get degrees() {\n        return this.intervals.map(i => i.degree);\n    }\n    equals(scaleIn: object) {\n        return isScale(scaleIn)\n            && this.intervals.length === scaleIn.intervals.length\n            && this.intervals.every((interval, i) => interval.equals(scaleIn.intervals[i]))\n            && this.degreeNames.length === scaleIn.degreeNames.length\n            && this.degreeNames.every((name, i) => name === scaleIn.degreeNames[i]);\n    }\n    public getName() {\n        return this.scaleName;\n    }\n    toString() {\n        let s = this.scaleName ? `Scale \"${this.scaleName}\" :{` : \"Scale :{\";\n        for (let i = 0; i < this.intervals.length; i++) {\n            const sI = this.intervals[i].toString();\n            const sN = this.degreeNames[i];\n            s += sI + (sN.length > 0 && sN !== sI ? \":\" + sN : \"\");\n            if (i !== this.intervals.length - 1) s += \", \";\n        }\n        s += \"}\";\n        return s;\n    }\n    clone() {\n        return new Scale(this);\n    }\n    [Symbol.iterator](): Iterator<Interval> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Interval;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = o.intervals[i];\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","import { EnumChord, Chord } from \"./Chord\";\nimport { parseRoman, toRoman } from \"./Utils\";\nimport { Tonality } from \"./Tonality\";\nimport { Interval } from \"./Interval\";\n\nexport interface ITonalChord {\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n}\nexport const isTonalChord = (x: any): x is ITonalChord => {\n    return x instanceof TonalChord\n        || (typeof x.alteration === \"number\"\n        && typeof x.degree === \"number\"\n        && x.chord instanceof EnumChord);\n};\nexport const isTonalChordArray = (x: any): x is TonalChord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof TonalChord);\n};\nexport class TonalChord implements ITonalChord {\n    static REGEX1 = /^([#b]?)(I{1,3}|i{1,3}|I?V|i?v|VI{1,2}|vi{1,2})(\\+|-?)$/;\n    static REGEX2 = /^([#b]?)([1-7])(M|m|\\+|-?)$/;\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n    constructor(nameIn: string);\n    constructor(chordIn: ITonalChord);\n    constructor(first: string | ITonalChord) {\n        if (typeof first === \"string\") {\n            let matched = TonalChord.REGEX1.exec(first);\n            if (matched) {\n                let s = matched[1];\n                this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                s = matched[2];\n                const p = parseRoman(s);\n                if (p !== 0 && p > 7 && p < -7) throw new Error(\"Roman number too large for degree.\");\n                this.degree = Math.abs(p);\n                s = matched[3];\n                this.chord = s.length === 0\n                    ? p > 0 ? EnumChord.MAJ : EnumChord.MIN\n                    : s === \"+\" ? EnumChord.AUG : EnumChord.DIM;\n            } else {\n                matched = TonalChord.REGEX2.exec(first);\n                if (matched) {\n                    let s = matched[1];\n                    this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                    s = matched[2];\n                    this.degree = +s;\n                    s = matched[3];\n                    this.chord = s.length === 0\n                        ? null\n                        : s === \"M\" ? EnumChord.MAJ\n                            : s === \"m\" ? EnumChord.MAJ\n                                : s === \"+\" ? EnumChord.AUG\n                                    : EnumChord.DIM;\n                } else throw new Error(\"Input string error: \" + first);\n            }\n        } else {\n            this.alteration = first.alteration;\n            this.degree = first.degree;\n            this.chord = first.chord.clone();\n        }\n        return this;\n    }\n    getChord(tonalityIn: Tonality) {\n        let chord: Chord;\n        if (this.chord) chord = new Chord(tonalityIn.getNoteFromDegree(this.degree));\n        else chord = tonalityIn.getTriad(this.degree);\n        if (this.alteration === 1) chord.base.add(new Interval(\"A1\"));\n        else if (this.alteration === -1) chord.base.sub(new Interval(\"A1\"));\n        return chord;\n    }\n    equals(chordIn: object) {\n        return isTonalChord(chordIn)\n            && chordIn.alteration === this.alteration\n            && chordIn.degree === this.degree\n            && chordIn.chord.equals(this.chord);\n    }\n    toString() {\n        let s = \"\";\n        if (this.alteration === 1) s = \"#\";\n        else if (this.alteration === -1) s = \"b\";\n        if (!this.chord) return s + this.degree;\n        s += toRoman(this.degree * (this.chord.equals(EnumChord.MIN) ? -1 : 1));\n        if (!this.chord.equals(EnumChord.MAJ) && !this.chord.equals(EnumChord.MIN)) {\n            if (this.chord.equals(EnumChord.AUG)) s += \"+\";\n            else if (this.chord.equals(EnumChord.AUG)) s += \"-\";\n            else s += this.chord.name().toLowerCase();\n        }\n        return s;\n    }\n    clone() {\n        return new TonalChord(this);\n    }\n}\n","import { Scale, isScale, EnumScale } from \"./Scale\";\nimport { Note, isNote } from \"./Note\";\nimport { Chord } from \"./Chord\";\nimport { Interval } from \"./Interval\";\n\nexport interface ITonality {\n    note: Note;\n    scale: Scale;\n}\nexport const isTonality = (x: any): x is ITonality => {\n    return x instanceof Tonality\n        || (typeof x === \"object\"\n        && isNote(x.note)\n        && isScale(x.scale));\n};\nexport class Tonality implements Iterable<Note>, ITonality {\n    note: Note;\n    scale: Scale;\n    constructor(tonalityIn: Tonality);\n    constructor(tonalityIn: string);\n    constructor(noteIn: Note, scaleIn: Scale);\n    constructor(first: Tonality | string | Note, second?: Scale) {\n        if (isTonality(first)) {\n            this.note = first.note.clone();\n            this.scale = first.scale.clone();\n        } else if (typeof first === \"string\") {\n            try {\n                this.note = new Note(first);\n            } catch (e) {\n                throw new Error(`No such tonality: ${first}.`);\n            }\n            this.scale = first.substr(first.length - 1).match(\"[A-G]\") ? EnumScale.MAJOR : EnumScale.MINOR;\n        } else {\n            this.note = first;\n            this.scale = second;\n        }\n        return this;\n    }\n    add(intervalIn: Interval) {\n        this.note.add(intervalIn);\n        return this;\n    }\n    sub(intervalIn: Interval) {\n        this.note.sub(intervalIn);\n        return this;\n    }\n\n    get notes() {\n        return this.scale.intervals.map(i => this.note.clone().add(i));\n    }\n    getNoteFromDegree(degreeIn: number) {\n        return this.note.clone().add(this.scale.getIntervalFromDegree(degreeIn));\n    }\n    getTriad(degreeIn: number) {\n        return new Chord(this.getNoteFromDegree(degreeIn), this.getNoteFromDegree(degreeIn + 2), this.getNoteFromDegree(degreeIn + 4));\n    }\n    getTriads() {\n        return this.scale.degrees.map(d => this.getTriad(d));\n    }\n    get triads() {\n        return this.getTriads();\n    }\n    toRelative() {\n        if (this.scale.equals(EnumScale.MAJOR)) {\n            this.note.sub(new Interval(\"m3\"));\n            this.scale = EnumScale.MINOR;\n        } else if (this.scale.equals(EnumScale.MINOR)) {\n            this.note.add(new Interval(\"m3\"));\n            this.scale = EnumScale.MAJOR;\n        } else throw new Error(\"Relative not found.\");\n        return this;\n    }\n    get relative() {\n        return this.clone().toRelative();\n    }\n    toNext() {\n        this.note.add(new Interval(\"P5\"));\n        return this;\n    }\n    get next() {\n        return this.clone().toNext();\n    }\n    toPrev() {\n        this.note.sub(new Interval(\"P5\"));\n        return this;\n    }\n    get prev() {\n        return this.clone().toPrev();\n    }\n    toString() {\n        return `${this.note.toString()} ${this.scale.getName() || this.scale.toString()}`;\n    }\n    clone() {\n        return new Tonality(this);\n    }\n    [Symbol.iterator](): Iterator<Note> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note;\n                let done = true;\n                if (i < o.scale.size) {\n                    value = o.note.clone().add(o.scale.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","export const gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nexport const lcm = (a: number, b: number): number => a * (b / gcd(a, b));\nexport const floorMod = (x: number, y: number) => {\n    return ((x % y) + y) % y;\n};\nexport const isStringArray = (x: any): x is string[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"string\");\n};\nexport const isNumberArray = (x: any): x is number[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"number\");\n};\nexport const parseRoman = (stringIn: string) => {\n    if (stringIn.length === 0) return 0;\n    let c: number;\n    if (stringIn.match(/[IVXLCDM]+/)) c = 1;\n    else if (stringIn.match(/[ivxlcdm]+/)) c = -1;\n    else throw new Error(\"Roman number error.\");\n    const string = stringIn.toUpperCase();\n    if (!string.match(/(M{0,3})(C{1,3}|C?D|DC{1,3}|CM)?(X{1,3}|X?L|LX{1,3}|XC)?(I{1,3}|I?V|VI{1,3}|IX)?$/)) {\n        throw new Error(\"Roman number error.\");\n    }\n    const r = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n    const a = [1, 5, 10, 50, 100, 500, 1000];\n    const rIn = string.split(\"\");\n    const aOut: number[] = [];\n    for (let i = 0; i < rIn.length; i++) {\n        for (let j = 0; j < r.length; j++) {\n            if (rIn[i] === r[j]) aOut[i] = a[j];\n        }\n    }\n    let sum = aOut[0];\n    for (let i = 0; i < rIn.length - 1; i++) {\n        if (aOut[i] >= aOut[i + 1]) {\n            sum += aOut[i + 1];\n        } else {\n            sum = sum + aOut[i + 1] - 2 * aOut[i];\n        }\n    }\n    return sum * c;\n};\nexport const toRoman = (nIn: number) => {\n    let n = Math.round(Math.abs(nIn));\n    if (n > 3999 || n === 0) throw new Error(\"Too large or Too small for Roman Number.\");\n    const a = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const r = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\n    let rOut = \"\";\n    for (let i = 0; i < a.length; i++) {\n        while (n >= a[i]) {\n            rOut += r[i];\n            n -= a[i];\n        }\n    }\n    return nIn > 0 ? rOut : rOut.toLowerCase();\n};\n","import { TonalChord, isTonalChord, isTonalChordArray } from \"../TonalChord\";\nimport { isStringArray } from \"../Utils\";\nimport { Tonality } from \"../Tonality\";\n\nexport interface IChordProgression {\n    chords: TonalChord[];\n}\nexport const isChordProgression = (x: any): x is IChordProgression => {\n    return x instanceof ChordProgression\n        || (typeof x === \"object\"\n        && isTonalChord(x.chord));\n};\nexport class ChordProgression implements Iterable<TonalChord>, IChordProgression {\n    chords: TonalChord[];\n    constructor(cp: string);\n    constructor(cp: string[]);\n    constructor(cp: TonalChord[]);\n    constructor(cp: IChordProgression);\n    constructor(cp: string | string[] | TonalChord[] | IChordProgression) {\n        if (typeof cp === \"string\") {\n            const chords = cp.split(/\\s+/);\n            this.fromStringArray(chords);\n        } else if (isStringArray(cp)) {\n            this.fromStringArray(cp);\n        } else if (isTonalChordArray(cp)) {\n            this.chords = cp.map(c => c.clone());\n        } else {\n            this.chords = cp.chords.map(c => c.clone());\n        }\n        return this;\n    }\n    getChords(tonalityIn: Tonality) {\n        return this.chords.map(c => c.getChord(tonalityIn));\n    }\n    fromStringArray(chords: string[]) {\n        if (chords.length < 2) throw new Error(\"Input string not enough long.\");\n        this.chords = chords.map(s => new TonalChord(s));\n    }\n    toString() {\n        return `ChordProgression: {${this.chords.map(tc => tc.toString()).join(\" \")}}`;\n    }\n    clone() {\n        return new ChordProgression(this);\n    }\n    [Symbol.iterator](): Iterator<TonalChord> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: TonalChord;\n                let done = true;\n                if (i < o.chords.length) {\n                    value = o.chords[i];\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","import { ChordProgression } from \"./ChordProgression\";\n\nexport class EnumChordProgression {\n    static PERFECT = new ChordProgression(\"IV V I\");\n    static REV_ANDAL = new ChordProgression(\"bVI bVII I\");\n    static CANON = new ChordProgression(\"I V vi iii IV I\");\n    static POP1 = new ChordProgression(\"IV V iii vi\");\n    static POP2 = new ChordProgression(\"I vi IV V\");\n    static POP3 = new ChordProgression(\"I V vi IV\");\n    static EPIC1 = new ChordProgression(\"vi IV I V\");\n    static EPIC2 = new ChordProgression(\"vi I V ii\");\n    static EDM1 = new ChordProgression(\"IV I vi V\");\n    static EDM2 = new ChordProgression(\"IV V vi I\");\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable no-console */\nimport { Interval } from \"./Interval\";\nimport { Note } from \"./Note\";\nimport { Pitch } from \"./Pitch\";\nimport { Chord } from \"./Chord\";\nimport { EnumScale } from \"./Scale\";\nimport { Tonality } from \"./Tonality\";\nimport { EnumChordProgression } from \"./genre/EnumChordProgression\";\n\nnew Note(\"#G\").getInterval(new Note(\"C\"));\nconsole.log(new Note(\"#G\").getInterval(new Note(\"C\")).toString());\nconsole.log(new Note(\"#C\").getInterval(new Note(\"G\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bC\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#C\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bB\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#A\")).toString());\n\nconst n = new Note(1);\nconsole.log(n.toString());\n\nconst p = new Pitch(\"##F0\");\nconsole.log(p.add(\"A4\").toString() + \" \" + p.offset);\n\nconst f = 440;\nconsole.log(Pitch.fromFrequency(f).offset);\n\nconst c = new Chord(new Pitch(\"C1\"), new Pitch(\"bC2\"), new Pitch(\"#C1\"));\n\nconsole.log(c.toString());\n\nconsole.log(new Interval(\"M3\").reverse().toString());\n\nconsole.log(c.notes.toString());\nconsole.log(c.contains(new Pitch(\"#C1\")));\nconst c1 = new Chord(new Pitch(\"C1\"), new Pitch(\"E1\"), new Pitch(\"G1\"));\nconsole.log(c1.getEnumChord());\n\nconst s = EnumScale.MINOR;\nconsole.log(s.toString());\nconsole.log(new Tonality(\"C\").toRelative().toString());\nconsole.log(new Tonality(\"C\").toPrev().toString());\nconsole.log(new Tonality(\"C\").toNext().toString());\n\nconsole.log(EnumChordProgression.EPIC1.toString());\n"],"sourceRoot":""}
