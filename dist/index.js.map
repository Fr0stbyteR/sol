{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Chord.ts","webpack:///./src/Enum.ts","webpack:///./src/Frequency.ts","webpack:///./src/Interval.ts","webpack:///./src/Note.ts","webpack:///./src/Pitch.ts","webpack:///./src/Scale.ts","webpack:///./src/Utils.ts","webpack:///./src/index.ts"],"names":["EnumChord","Enum","MAJ","MIN","AUG","DIM","SUS2","SUS","SUS4","DOM7","MAJ7","MINMAJ7","MIN7","AUGMAJ7","AUG7","DIMMIN7","DIM7","DOM7DIM5","constructor","nameIn","_name","intervalsIn","intervals","Interval","fromArray","byChord","chordIn","values","find","enumChord","length","every","interval","i","equals","byName","name","isChord","x","Chord","isNote","base","isIntervalArray","isAbsolute","Symbol","iterator","first","isPitch","Pitch","REGEX","exec","Note","arrayIn","e","isPitchArray","sort","compare","map","pitch","getInterval","isNoteArray","note","size","notes","clone","add","contains","noteIn","inverseUp","interval0","sub","octaveReverse","inverseDown","inverse","inversion","getEnumChord","toString","o","next","value","done","indexes","key","valueOf","Error","ordinal","indexOf","Frequency","toPitch","f","Math","log","A440","isInterval","degree","onset","octave","Array","isArray","el","DEGREE_TO_OFFSET","EnumIntervalProperty","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","byAbb","abbIn","abbMap","SyntaxError","abb","P","M","m","A","d","getOffsetFromProperty","propertyIn","degreeIn","floorMod","getPropertyFromOffset","onsetIn","getOffsetFromDegree","floor","second","third","fromString","matched","parseInt","fromOffset","offsetIn","fromRatio","ratioIn","offset","round","SEMITONE","iIn","reverse","ratio","property","intervalIn","sOnset","sOctave","y","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","index","enumNote","alteration","split","forEach","c","alterationIn","newEnumNote","TypeError","that","repeat","abs","pitchIn","EnumScale","PENTA","IONIAN","DORIAN","PHRYGIAN","LYDIAN","MIXOLYDIAN","AEOLIAN","LOCRIAN","ASCENDING_MELODIC_MINOR","PHRYGIAN_MAJ6","LYDIAN_AUG","LYDIAN_DOM","MIXOLYDIAN_MIN6","LOCRIAN_MAJ2","SUPER_LOCRIAN","scale","Scale","isScale","isStringArray","degreeNames","degreeName","addNote","push","getIntervalFromIndex","getIntervalFromDegree","scaleIn","s","sI","sN","Utils","console","n","p","c1"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { Note, isNoteArray, isNote } from \"./Note\";\nimport { Pitch, isPitchArray } from \"./Pitch\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumChordName = \"MAJ\" | \"MIN\" | \"AUG\" | \"DIM\" | \"SUS2\" | \"SUS\" | \"SUS4\" | \"DOM7\" | \"MAJ7\" | \"MINMAJ7\" | \"MIN7\" | \"AUGMAJ7\" | \"AUG7\" | \"DIMMIN7\" | \"DIM7\" | \"DOM7DIM5\";\nexport class EnumChord extends Enum {\n    protected static indexes = [\"MAJ\", \"MIN\", \"AUG\", \"DIM\", \"SUS2\", \"SUS\", \"SUS4\", \"DOM7\", \"MAJ7\", \"MINMAJ7\", \"MIN7\", \"AUGMAJ7\", \"AUG7\", \"DIMMIN7\", \"DIM7\", \"DOM7DIM5\"] as TEnumChordName[];\n    static get MAJ() { return new EnumChord(\"MAJ\", \"M3\", \"P5\"); }\n    static get MIN() { return new EnumChord(\"MIN\", \"m3\", \"P5\"); }\n    static get AUG() { return new EnumChord(\"AUG\", \"M3\", \"A5\"); }\n    static get DIM() { return new EnumChord(\"DIM\", \"m3\", \"d5\"); }\n    static get SUS2() { return new EnumChord(\"SUS2\", \"M2\", \"P5\"); }\n    static get SUS() { return new EnumChord(\"SUS\", \"P5\", \"P5\"); }\n    static get SUS4() { return new EnumChord(\"SUS4\", \"P5\", \"P5\"); }\n    static get DOM7() { return new EnumChord(\"DOM7\", \"M3\", \"P5\", \"m7\"); }\n    static get MAJ7() { return new EnumChord(\"MAJ7\", \"M3\", \"P5\", \"M7\"); }\n    static get MINMAJ7() { return new EnumChord(\"MINMAJ7\", \"m3\", \"P5\", \"M7\"); }\n    static get MIN7() { return new EnumChord(\"MIN7\", \"m3\", \"P5\", \"m7\"); }\n    static get AUGMAJ7() { return new EnumChord(\"AUGMAJ7\", \"M3\", \"A5\", \"M7\"); }\n    static get AUG7() { return new EnumChord(\"AUG7\", \"M3\", \"A5\", \"m7\"); }\n    static get DIMMIN7() { return new EnumChord(\"DIMMIN7\", \"m3\", \"d5\", \"m7\"); }\n    static get DIM7() { return new EnumChord(\"DIM7\", \"m3\", \"d5\", \"d7\"); }\n    static get DOM7DIM5() { return new EnumChord(\"DOM7DIM5\", \"M3\", \"d5\", \"m7\"); }\n\n    _name: string;\n    intervals: Interval[];\n    private constructor(nameIn: string, ...intervalsIn: string[]) {\n        super();\n        this._name = nameIn;\n        this.intervals = Interval.fromArray(...intervalsIn);\n        return this;\n    }\n    static byChord(chordIn: Chord) {\n        return this.values<EnumChord>().find((enumChord) => {\n            return enumChord.intervals.length === chordIn.intervals.length\n                && enumChord.intervals.every((interval, i) => interval.equals(chordIn.intervals[i]));\n        }) || null;\n    }\n    static byName(chordIn: TEnumChordName) {\n        return EnumChord[chordIn];\n    }\n    name() {\n        return this._name;\n    }\n}\nexport type TChord = { base: Note | Pitch; intervals: Interval[]; isAbsolute: boolean };\nexport const isChord = (x: any): x is TChord | Chord => {\n    return x instanceof Chord\n        || (typeof x === \"object\"\n        && isNote(x.base)\n        && isIntervalArray(x.intervals)\n        && typeof x.isAbsolute === \"boolean\");\n};\nexport class Chord implements Iterable<Note> {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    isAbsolute: boolean;\n    /**\n     * Gives a new Chord instance (clone)\n     * @param {(Chord | TChord)} chordIn\n     * @memberof Chord\n     */\n    constructor(chordIn: Chord | TChord);\n    /**\n     * Construct chord by notes\n     * @param {(Note | Pitch | string)} base\n     * @param {(...Note[] | Pitch[])} notes\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     * @param {Pitch} base\n     * @param {...Pitch[]} pitches\n     * @memberof Chord\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: Chord | TChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        this.isAbsolute = false;\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n            this.isAbsolute = first.isAbsolute;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        this.isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) this.isAbsolute = false;\n        if (!this.isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn) && this.isAbsolute) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes() {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    contains(noteIn: Note | Pitch) {\n        return !!this.notes.find(note => noteIn.equals(note));\n    }\n    inverseUp() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[0];\n        this.base.add(interval0);\n        for (let i = 0; i < this.intervals.length - 1; i++) {\n            this.intervals[i] = this.intervals[i + 1].sub(interval0);\n        }\n        this.intervals[this.intervals.length - 1] = interval0.octaveReverse();\n        return this;\n    }\n    inverseDown() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[this.intervals.length - 1].octaveReverse();\n        this.base.sub(interval0);\n        for (let i = this.intervals.length - 1; i > 0; i--) {\n            this.intervals[i] = this.intervals[i - 1].add(interval0);\n        }\n        this.intervals[0] = interval0;\n        return this;\n    }\n    inverse(inversion: number) {\n        if (this.intervals.length === 0) return this;\n        if (inversion > 0) {\n            for (let i = 0; i < inversion; i++) {\n                this.inverseUp();\n            }\n        }\n        if (inversion < 0) {\n            for (let i = 0; i > inversion; i--) {\n                this.inverseDown();\n            }\n        }\n        return this;\n    }\n    getEnumChord() {\n        return EnumChord.byChord(this);\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    [Symbol.iterator](): Iterator<Note | Pitch> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note | Pitch;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = i === -1 ? o.base : o.base.clone().add(o.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","export class Enum {\n    protected static indexes: string[] = [];\n    static values<T extends Enum>(): T[] {\n        return this.indexes.map(key => (this as unknown as { [key: string]: T })[key]);\n    }\n    static valueOf<T extends Enum>(key: string): T {\n        return (this as unknown as { [key: string]: T })[key];\n    }\n    name(): string {\n        throw new Error(\"Method not implemented\");\n    }\n    ordinal(): number {\n        return (this.constructor as typeof Enum).indexes.indexOf(this.name());\n    }\n    toString(): string {\n        return this.name();\n    }\n}\n","import { Pitch } from \"./Pitch\";\n\nexport class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n    static toPitch(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n}\n","import { floorMod } from \"./Utils\";\nimport { Enum } from \"./Enum\";\nimport { Frequency } from \"./Frequency\";\n\nexport type TInterval = { degree: number; onset: number; octave: number };\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is TInterval | Interval => {\n    return x instanceof Interval\n        || (typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MAJOR\" | \"MINOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty extends Enum {\n    protected static indexes = [\"PERFECT\", \"MAJOR\", \"MINOR\", \"AUGMENTED\", \"DIMINISHED\"];\n    private static abbMap: { [key: string]: TIntervalPropertyValue } = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static get PERFECT() { return new EnumIntervalProperty(\"P\"); }\n    static get MAJOR() { return new EnumIntervalProperty(\"M\"); }\n    static get MINOR() { return new EnumIntervalProperty(\"m\"); }\n    static get AUGMENTED() { return new EnumIntervalProperty(\"A\"); }\n    static get DIMINISHED() { return new EnumIntervalProperty(\"d\"); }\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    abb: TIntervalProperty;\n    private constructor(abbIn: TIntervalProperty) {\n        super();\n        this.abb = abbIn;\n        return this;\n    }\n    name() {\n        return EnumIntervalProperty.abbMap[this.abb];\n    }\n    toString() {\n        return this.name();\n    }\n}\n\nexport class Interval {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn === EnumIntervalProperty.PERFECT) return 0;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -1;\n        } else {\n            if (propertyIn === EnumIntervalProperty.MAJOR) return 0;\n            if (propertyIn === EnumIntervalProperty.MINOR) return -1;\n            if (propertyIn === EnumIntervalProperty.AUGMENTED) return 1;\n            if (propertyIn === EnumIntervalProperty.DIMINISHED) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     * @memberof Interval\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     * @param {(Interval | TInterval)} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: Interval | TInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} intervalIn\n     * @memberof Interval\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     * @param {number} degreeIn\n     * @param {number} [onset]\n     * @param {number} [octave]\n     * @memberof Interval\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: Interval | TInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.constructor(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.degree = floorMod(first - 1, 7) + 1;\n            this.onset = second || 0;\n            this.octave = Math.floor((first - 1) / 7) + (third || 0);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromRatio(ratioIn: number) {\n        const offset = Math.round(Math.log(ratioIn) / Math.log(Frequency.SEMITONE));\n        return new Interval(offset);\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    octaveReverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 1 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get ratio() {\n        return Frequency.SEMITONE ** this.offset;\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | TInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n            && this.degree === intervalIn.degree\n            && this.onset === intervalIn.onset\n            && this.octave === intervalIn.octave;\n    }\n    toString() {\n        const sOnset = this.property ? this.property.abb : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n}\n","import { floorMod } from \"./Utils\";\nimport { Interval, TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class EnumNote extends Enum {\n    protected static indexes: TEnumNoteValue[] = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    private static offsetMap: { [key: number]: TEnumNoteValue } = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        super();\n        this.offset = offsetIn;\n        return this;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexes[floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    ordinal() { return this.index; }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n}\nexport type TNote = { enumNote: EnumNote; alteration: number };\nexport const isNote = (x: any): x is TNote | Note => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Note);\n};\nexport class Note {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     * @memberof Note\n     */\n    constructor()\n    /**\n     * New note\n     * @param {(EnumNote)} noteIn\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     * @param {(Note | TNote | string)} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: Note | EnumNote | TNote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} noteIn\n     * @memberof Note\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     * @param {number} offset\n     * @param {number} [alteration]\n     * @memberof Note\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: Note | EnumNote | TNote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TNote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): TNote {\n        const note = floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n            && this.enumNote.equals(noteIn.enumNote)\n            && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: TNote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | TNote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name();\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n","import { Note, EnumNote, TNote, isNote } from \"./Note\";\nimport { Interval } from \"./Interval\";\n\nexport type TPitch = { enumNote: EnumNote; alteration: number; octave: number };\nexport const isPitch = (x: any): x is TPitch | Pitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    if (!Array.isArray(x)) return false;\n    return x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    octave: number;\n\n    /**\n     * Returns C0\n     * @memberof Pitch\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     * @param {Pitch | TPitch} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: Pitch | TPitch);\n    /**\n     * Add octave info to a note\n     * @param {(Note | EnumNote | TNote)} noteIn\n     * @param {number} [octaveIn]\n     * @memberof Pitch\n     */\n    constructor(noteIn: Note | EnumNote | TNote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     * @param {string} pitchIn\n     * @memberof Note\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     * @param {number} pitchIn\n     * @memberof Pitch\n     */\n    constructor(first?: Pitch | Note | EnumNote | TPitch | TNote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote || isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n        return this;\n    }\n    static fromString(nameIn: string): TPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): TPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n            && isPitch(pitchIn)\n            && this.octave === pitchIn.octave;\n    }\n    getInterval(pitchIn: TPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | TPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n}\n","import { Interval, isIntervalArray } from \"./Interval\";\nimport { isStringArray, floorMod } from \"./Utils\";\nimport { Enum } from \"./Enum\";\n\ntype TEnumScaleName = \"MAJOR\" | \"MINOR\" | \"PENTA\" | \"IONIAN\" | \"DORIAN\" | \"PHRYGIAN\" | \"LYDIAN\" | \"MIXOLYDIAN\" | \"AEOLIAN\" | \"LOCRIAN\" | \"ASCENDING_MELODIC_MINOR\" | \"PHRYGIAN_MAJ6\" | \"LYDIAN_AUG\" | \"LYDIAN_DOM\" | \"MIXOLYDIAN_MIN6\" | \"LOCRIAN_MAJ2\" | \"SUPER_LOCRIAN\";\nexport class EnumScale extends Enum {\n    protected static index = [\"MAJOR\", \"MINOR\", \"PENTA\", \"IONIAN\", \"DORIAN\", \"PHRYGIAN\", \"LYDIAN\", \"MIXOLYDIAN\", \"AEOLIAN\", \"LOCRIAN\", \"ASCENDING_MELODIC_MINOR\", \"PHRYGIAN_MAJ6\", \"LYDIAN_AUG\", \"LYDIAN_DOM\", \"MIXOLYDIAN_MIN6\", \"LOCRIAN_MAJ2\", \"SUPER_LOCRIAN\"] as TEnumScaleName[];\n    static get MAJOR() { return new EnumScale(\"Major\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MINOR() { return new EnumScale(\"Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get PENTA() { return new EnumScale(\"Penta\", \"P1:Gong\", \"M2:Shang\", \"M3:Jiao\", \"P5:Zhi\", \"M6:Yu\"); }\n\n    static get IONIAN() { return EnumScale.MAJOR; }\n    static get DORIAN() { return new EnumScale(\"Dorian\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get PHRYGIAN() { return new EnumScale(\"Phrygian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN() { return new EnumScale(\"Lydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MIXOLYDIAN() { return new EnumScale(\"Mixolydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get AEOLIAN() { return EnumScale.MINOR; }\n    static get LOCRIAN() { return new EnumScale(\"Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n\n    static get ASCENDING_MELODIC_MINOR() { return new EnumScale(\"Ascending Melodic Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get PHRYGIAN_MAJ6() { return new EnumScale(\"Phrygian M6\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN_AUG() { return new EnumScale(\"Lydian Augmented\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"A5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get LYDIAN_DOM() { return new EnumScale(\"Lydian Dominant\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get MIXOLYDIAN_MIN6() { return new EnumScale(\"Mixolydian m6\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LOCRIAN_MAJ2() { return new EnumScale(\"Locrian M2\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get SUPER_LOCRIAN() { return new EnumScale(\"Super Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"d4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n\n    _name: string;\n    scale: Scale;\n    private constructor(nameIn: string, ...intervalsIn: string[]) {\n        super();\n        this._name = nameIn;\n        this.scale = new Scale(intervalsIn);\n        return this;\n    }\n    static byName(nameIn: TEnumScaleName) {\n        return EnumScale[nameIn];\n    }\n    name() {\n        return this._name;\n    }\n}\nexport type TScale = { intervals: Interval[]; degreeNames: string[] };\nexport const isScale = (x: any): x is TScale | Scale => {\n    return x instanceof Scale\n        || (typeof x === \"object\"\n        && isStringArray(x.degreeNames)\n        && isIntervalArray(x.intervals));\n};\nexport class Scale implements Iterable<Interval> {\n    intervals: Interval[];\n    degreeNames: string[];\n\n    constructor(degreesIn: string[]);\n    constructor(scaleIn: Scale | TScale);\n    constructor(first: string[] | Scale | TScale) {\n        if (isScale(first)) {\n            this.intervals = [...first.intervals];\n            this.degreeNames = [...first.degreeNames];\n        } else {\n            this.intervals = [];\n            this.degreeNames = [];\n            for (let i = 0; i < first.length; i++) {\n                const degreeName = first[i];\n                const split = degreeName.split(\":\");\n                if (split.length === 2) {\n                    this.intervals[i] = new Interval(split[0]);\n                    this.degreeNames[i] = split[1];\n                } else {\n                    this.intervals[i] = new Interval(degreeName);\n                    this.degreeNames[i] = degreeName;\n                }\n            }\n        }\n        return this;\n    }\n    get size() {\n        return this.intervals.length;\n    }\n    addNote(noteIn: string) {\n        let interval: Interval;\n        let name: string;\n        const split = noteIn.split(\":\");\n        if (split.length === 2) {\n            interval = new Interval(split[0]);\n            name = split[1];\n        } else {\n            interval = new Interval(noteIn);\n            name = noteIn;\n        }\n        this.intervals.push(interval);\n        this.degreeNames.push(name);\n        return this;\n    }\n    getIntervalFromIndex(index: number) {\n        return this.intervals[index];\n    }\n    getIntervalFromDegree(degreeIn: number) {\n        return this.intervals.find((interval) => {\n            return floorMod(degreeIn - 1, this.intervals.length) + 1 === interval.degree;\n        });\n    }\n    equals(scaleIn: object) {\n        return isScale(scaleIn)\n            && this.intervals.length === scaleIn.intervals.length\n            && this.intervals.every((interval, i) => interval.equals(scaleIn.intervals[i]))\n            && this.degreeNames.length === scaleIn.degreeNames.length\n            && this.degreeNames.every((name, i) => name === scaleIn.degreeNames[i]);\n    }\n    toString() {\n        let s = \"Scale :{\";\n        for (let i = 0; i < this.intervals.length; i++) {\n            const sI = this.intervals[i].toString();\n            const sN = this.degreeNames[i];\n            s += sI + (sN.length > 0 && sN !== sI ? \":\" + sN : \"\");\n            if (i !== this.intervals.length - 1) s += \", \";\n        }\n        s += \"}\";\n        return s;\n    }\n    [Symbol.iterator](): Iterator<Interval> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Interval;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = o.intervals[i];\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n","export const Utils = {\n};\nexport const floorMod = (x: number, y: number) => {\n    return ((x % y) + y) % y;\n}\nexport const isStringArray = (x: any): x is string[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"string\");\n};\n","/* eslint-disable no-console */\nimport { Interval } from \"./Interval\";\nimport { Note } from \"./Note\";\nimport { Pitch } from \"./Pitch\";\nimport { Frequency } from \"./Frequency\";\nimport { Chord } from \"./Chord\";\nimport { EnumScale } from \"./Scale\";\n\nnew Note(\"#G\").getInterval(new Note(\"C\"));\nconsole.log(new Note(\"#G\").getInterval(new Note(\"C\")).toString());\nconsole.log(new Note(\"#C\").getInterval(new Note(\"G\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bC\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#C\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"bB\")).toString());\nconsole.log(new Note(\"C\").getInterval(new Note(\"#A\")).toString());\n\nconst n = new Note(1);\nconsole.log(n.toString());\n\nconst p = new Pitch(\"##F0\");\nconsole.log(p.add(\"A4\").toString() + \" \" + p.offset);\n\nconst f = 440;\nconsole.log(Frequency.toPitch(f).offset);\n\nconst c = new Chord(new Pitch(\"C1\"), new Pitch(\"bC2\"), new Pitch(\"#C1\"));\n\nconsole.log(c.toString());\n\nconsole.log(new Interval(\"M3\").reverse().toString());\n\nconsole.log(c.notes.toString());\nconsole.log(c.contains(new Pitch(\"#C1\")));\nconst c1 = new Chord(new Pitch(\"C1\"), new Pitch(\"E1\"), new Pitch(\"G1\"));\nconsole.log(c1.getEnumChord());\n\nconst s = EnumScale.MINOR;\nconsole.log(s.scale.toString());\n"],"sourceRoot":""}