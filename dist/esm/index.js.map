{"version":3,"sources":["webpack://sol/./src/Articulation.ts","webpack://sol/./src/Chord.ts","webpack://sol/./src/Color.ts","webpack://sol/./src/Duration.ts","webpack://sol/./src/Enum.ts","webpack://sol/./src/Frequency.ts","webpack://sol/./src/Interval.ts","webpack://sol/./src/Note.ts","webpack://sol/./src/Param.ts","webpack://sol/./src/Pitch.ts","webpack://sol/./src/Scale.ts","webpack://sol/./src/TimeCode.ts","webpack://sol/./src/TonalChord.ts","webpack://sol/./src/Tonality.ts","webpack://sol/./src/Velocity.ts","webpack://sol/./src/utils.ts","webpack://sol/webpack/bootstrap","webpack://sol/webpack/runtime/define property getters","webpack://sol/webpack/runtime/hasOwnProperty shorthand","webpack://sol/webpack/runtime/make namespace object","webpack://sol/./src/index.ts"],"names":["isArticulation","x","Articulation","velocity","length","EnumArticulation","STACCATISSIMO","STACCATO","MEZZO_STACCATO","LEGATO","TENUTO","SOSTENUTO","MARCATO","PIZZICATO","MUTED","constructor","first","lengthIn","clone","EnumChord","Enum","MAJ","MIN","AUG","DIM","SUS2","SUS","SUS4","DOM7","MAJ7","MINMAJ7","MIN7","AUGMAJ7","AUG7","DIMMIN7","DIM7","DOM7DIM5","_name","intervalsIn","intervals","Interval","map","i","byChord","chordIn","values","find","enumChord","every","interval","equals","byName","name","isIntervalArray","e","isChord","Chord","isNote","base","isAbsolute","isChordArray","Array","isArray","Symbol","iterator","isPitch","Pitch","Note","arrayIn","isPitchArray","sort","pitch","getInterval","isNoteArray","note","size","notes","add","contains","noteIn","inverseUp","interval0","sub","octaveReverse","inverseDown","inverse","inversion","getEnumChord","toString","o","next","value","done","isColor","Color","t","s","d","major","isNumberArray","fromArray","toArray","color","colorIn","isDuration","Duration","seconds","numerator","denominator","second","simplify","check","getBeats","Error","getAbsoluteDuration","toAbsolute","durationIn","mul","f","div","_gcd","gcd","compareTo","that","compare","y","indexes","key","valueOf","ordinal","indexOf","Frequency","isInterval","degree","onset","octave","el","DEGREE_TO_OFFSET","EnumIntervalProperty","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","byAbb","abbIn","abbMap","SyntaxError","abb","propertyIn","P","M","m","A","getOffsetFromProperty","degreeIn","floorMod","getPropertyFromOffset","onsetIn","getOffsetFromDegree","Math","floor","third","fromInterval","fromString","octaveIn","nameIn","matched","REGEX","exec","parseInt","fromOffset","offsetIn","fromRatio","ratioIn","offset","round","log","iIn","reverse","ratio","property","intervalIn","sOnset","sOctave","EnumNote","C","D","E","F","G","B","byOffset","offsetMap","byIndex","indexIn","index","enumNote","alteration","split","forEach","c","alterationIn","newEnumNote","TypeError","repeat","abs","isParam","Param","path","min","max","step","init","optionsIn","_value","setRange","valueIn","_min","minIn","_max","maxIn","fromFrequency","pitchIn","EnumScale","Scale","PENTA","IONIAN","DORIAN","PHRYGIAN","LYDIAN","MIXOLYDIAN","AEOLIAN","LOCRIAN","ASCENDING_MELODIC_MINOR","PHRYGIAN_MAJ6","LYDIAN_AUG","LYDIAN_DOM","MIXOLYDIAN_MIN6","LOCRIAN_MAJ2","SUPER_LOCRIAN","isScale","isStringArray","degreeNames","scaleName","degreeName","addNote","push","getIntervalFromIndex","getIntervalFromDegree","degrees","scaleIn","getName","sI","sN","isTimeCode","TimeCode","beats","beatDuration","bpm","beatsIn","isTonalChord","TonalChord","chord","isTonalChordArray","REGEX1","p","parseRoman","REGEX2","getChord","tonalityIn","getNoteFromDegree","getTriad","toRoman","toLowerCase","isTonality","Tonality","scale","substr","match","getTriads","triads","toRelative","relative","toNext","toPrev","prev","isVelocity","Velocity","EnumVelocity","SILENT","PPP","PP","PIANISSIMO","MP","MEZZO_PIANO","MF","MEZZO_FORTE","FORTE","FF","FORTISSIMO","FFF","velocityIn","normalize","a","b","lcm","stringIn","string","toUpperCase","r","rIn","aOut","j","sum","nIn","n","rOut"],"mappings":"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","file":"index.js","sourcesContent":["export interface IArticulation {\n    velocity: number;\n    length: number;\n}\nexport const isArticulation = (x: any): x is IArticulation => {\n    return x instanceof Articulation\n        || (typeof x === \"object\"\n        && typeof x.velocity === \"number\"\n        && typeof x.length === \"number\");\n};\nexport class EnumArticulation {\n    static get STACCATISSIMO() { return new Articulation(1, 0.25); }\n    static get STACCATO() { return new Articulation(1, 0.4); }\n    static get MEZZO_STACCATO() { return new Articulation(1, 0.75); }\n    static get LEGATO() { return new Articulation(1, 0.95); }\n    static get TENUTO() { return new Articulation(1, 1); }\n    static get SOSTENUTO() { return new Articulation(1, 1.2); }\n    static get MARCATO() { return new Articulation(1.5, 1); }\n    static get PIZZICATO() { return new Articulation(1, 1); }\n    static get MUTED() { return new Articulation(1, 1); }\n}\nexport class Articulation implements IArticulation {\n    velocity: number;\n    length: number;\n    constructor(articulationIn: IArticulation);\n    constructor(velocityIn: number, lengthIn: number);\n    constructor(first: IArticulation | number, lengthIn?: number) {\n        if (isArticulation(first)) {\n            this.velocity = first.velocity;\n            this.length = first.length;\n        } else {\n            this.velocity = first;\n            this.length = lengthIn;\n        }\n    }\n    clone() {\n        return new Articulation(this);\n    }\n}\n\nexport default Articulation;\n","import Interval, { isIntervalArray } from \"./Interval\";\nimport Note, { isNoteArray, isNote } from \"./Note\";\nimport Pitch, { isPitchArray } from \"./Pitch\";\nimport Enum from \"./Enum\";\n\ntype TEnumChordName = \"MAJ\" | \"MIN\" | \"AUG\" | \"DIM\" | \"SUS2\" | \"SUS\" | \"SUS4\" | \"DOM7\" | \"MAJ7\" | \"MINMAJ7\" | \"MIN7\" | \"AUGMAJ7\" | \"AUG7\" | \"DIMMIN7\" | \"DIM7\" | \"DOM7DIM5\";\nexport class EnumChord extends Enum {\n    protected static indexes = [\"MAJ\", \"MIN\", \"AUG\", \"DIM\", \"SUS2\", \"SUS\", \"SUS4\", \"DOM7\", \"MAJ7\", \"MINMAJ7\", \"MIN7\", \"AUGMAJ7\", \"AUG7\", \"DIMMIN7\", \"DIM7\", \"DOM7DIM5\"] as TEnumChordName[];\n    static get MAJ() { return new EnumChord(\"MAJ\", \"M3\", \"P5\"); }\n    static get MIN() { return new EnumChord(\"MIN\", \"m3\", \"P5\"); }\n    static get AUG() { return new EnumChord(\"AUG\", \"M3\", \"A5\"); }\n    static get DIM() { return new EnumChord(\"DIM\", \"m3\", \"d5\"); }\n    static get SUS2() { return new EnumChord(\"SUS2\", \"M2\", \"P5\"); }\n    static get SUS() { return new EnumChord(\"SUS\", \"P5\", \"P5\"); }\n    static get SUS4() { return new EnumChord(\"SUS4\", \"P5\", \"P5\"); }\n    static get DOM7() { return new EnumChord(\"DOM7\", \"M3\", \"P5\", \"m7\"); }\n    static get MAJ7() { return new EnumChord(\"MAJ7\", \"M3\", \"P5\", \"M7\"); }\n    static get MINMAJ7() { return new EnumChord(\"MINMAJ7\", \"m3\", \"P5\", \"M7\"); }\n    static get MIN7() { return new EnumChord(\"MIN7\", \"m3\", \"P5\", \"m7\"); }\n    static get AUGMAJ7() { return new EnumChord(\"AUGMAJ7\", \"M3\", \"A5\", \"M7\"); }\n    static get AUG7() { return new EnumChord(\"AUG7\", \"M3\", \"A5\", \"m7\"); }\n    static get DIMMIN7() { return new EnumChord(\"DIMMIN7\", \"m3\", \"d5\", \"m7\"); }\n    static get DIM7() { return new EnumChord(\"DIM7\", \"m3\", \"d5\", \"d7\"); }\n    static get DOM7DIM5() { return new EnumChord(\"DOM7DIM5\", \"M3\", \"d5\", \"m7\"); }\n\n    _name: string;\n    intervals: Interval[];\n    private constructor(nameIn: string, ...intervalsIn: string[]);\n    private constructor(chord: EnumChord);\n    private constructor(first: string | EnumChord, ...intervalsIn: string[]) {\n        super();\n        if (typeof first === \"string\") {\n            this._name = first;\n            this.intervals = Interval.fromArray(...intervalsIn);\n        } else {\n            this._name = first._name;\n            this.intervals = first.intervals.map(i => i.clone());\n        }\n    }\n    static byChord(chordIn: IChord) {\n        return this.values<EnumChord>().find((enumChord) => {\n            return enumChord.intervals.length === chordIn.intervals.length\n                && enumChord.intervals.every((interval, i) => interval.equals(chordIn.intervals[i]));\n        }) || null;\n    }\n    static byName(chordIn: TEnumChordName) {\n        return EnumChord[chordIn];\n    }\n    name() {\n        return this._name;\n    }\n    equals(chordIn: { intervals?: any }) {\n        return \"intervals\" in chordIn\n            && isIntervalArray(chordIn.intervals)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    clone() {\n        return new EnumChord(this);\n    }\n}\nexport interface IChord {\n    base: Note | Pitch;\n    intervals: Interval[];\n    isAbsolute: boolean;\n}\nexport const isChord = (x: any): x is IChord => {\n    return x instanceof Chord\n        || (typeof x === \"object\"\n        && isNote(x.base)\n        && isIntervalArray(x.intervals)\n        && typeof x.isAbsolute === \"boolean\");\n};\nexport const isChordArray = (x: any): x is Chord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof Chord);\n};\nexport class Chord implements Iterable<Note>, IChord {\n    base: Note | Pitch;\n    intervals: Interval[]; // Intervals from base\n    isAbsolute: boolean;\n    /**\n     * Gives a new Chord instance (clone)\n     */\n    constructor(chordIn: IChord);\n    /**\n     * Construct chord by notes\n     */\n    constructor(base: Note | Pitch | string, ...notes: Note[] | Pitch[]);\n    /**\n     * Construct chord by intervals\n     */\n    constructor(base: Note | Pitch | string, ...intervals: Interval[] | string[]);\n    constructor(first: IChord | Note | Pitch | string, ...arrayIn: Note[] | Pitch[] | Interval[] | string[]) {\n        this.base = null;\n        this.intervals = [];\n        this.isAbsolute = false;\n        if (isChord(first)) {\n            this.base = first.base;\n            this.intervals = first.intervals;\n            this.isAbsolute = first.isAbsolute;\n        } else if (typeof first === \"string\") {\n            const isPitch = Pitch.REGEX.exec(first);\n            if (isPitch) this.base = new Pitch(first);\n            else this.base = new Note(first);\n        } else {\n            this.base = first;\n        }\n        this.isAbsolute = true;\n        if ((arrayIn as (Pitch | Note | Interval | string)[]).find(e => e instanceof Note && !(e instanceof Pitch))) this.isAbsolute = false;\n        if (!this.isAbsolute) this.base = new Note(this.base);\n        if (isPitchArray(arrayIn) && this.isAbsolute) {\n            this.intervals = arrayIn.sort(Pitch.compare).map(pitch => this.base.getInterval(pitch));\n        } else if (isNoteArray(arrayIn)) {\n            this.intervals = (arrayIn as Note[]).map(note => (this.base as Note).getInterval(note));\n        } else if (isIntervalArray(arrayIn)) {\n            this.intervals = arrayIn.sort(Interval.compare);\n        } else {\n            this.intervals = Interval.fromArray(...arrayIn).sort(Interval.compare);\n        }\n    }\n    get size() {\n        return this.intervals.length + 1;\n    }\n    get notes(): Note[] | Pitch[] {\n        return [this.base, ...this.intervals.map(i => this.base.clone().add(i))];\n    }\n    contains(noteIn: Note | Pitch) {\n        return !!this.notes.find(note => noteIn.equals(note));\n    }\n    inverseUp() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[0];\n        this.base.add(interval0);\n        for (let i = 0; i < this.intervals.length - 1; i++) {\n            this.intervals[i] = this.intervals[i + 1].sub(interval0);\n        }\n        this.intervals[this.intervals.length - 1] = interval0.octaveReverse();\n        return this;\n    }\n    inverseDown() {\n        if (this.intervals.length === 0) return this;\n        const interval0 = this.intervals[this.intervals.length - 1].octaveReverse();\n        this.base.sub(interval0);\n        for (let i = this.intervals.length - 1; i > 0; i--) {\n            this.intervals[i] = this.intervals[i - 1].add(interval0);\n        }\n        this.intervals[0] = interval0;\n        return this;\n    }\n    inverse(inversion: number) {\n        if (this.intervals.length === 0) return this;\n        if (inversion > 0) {\n            for (let i = 0; i < inversion; i++) {\n                this.inverseUp();\n            }\n        }\n        if (inversion < 0) {\n            for (let i = 0; i > inversion; i--) {\n                this.inverseDown();\n            }\n        }\n        return this;\n    }\n    getEnumChord() {\n        return EnumChord.byChord(this);\n    }\n    equals(chordIn: object) {\n        return isChord(chordIn)\n            && chordIn.isAbsolute === this.isAbsolute\n            && chordIn.base.equals(this.base)\n            && chordIn.intervals.length === this.intervals.length\n            && chordIn.intervals.every((e, i) => this.intervals[i].equals(e));\n    }\n    toString() {\n        return this.base.toString() + \":\" + this.intervals.toString();\n    }\n    clone() {\n        return new Chord(this);\n    }\n\n    [Symbol.iterator](): Iterator<Note | Pitch> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note | Pitch;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = i === -1 ? o.base : o.base.clone().add(o.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n\nexport default Chord;\n","import { isNumberArray } from \"./utils\";\n\ninterface IColor {\n    t: number;\n    s: number;\n    d: number;\n    major: number;\n}\nexport const isColor = (x: any): x is IColor => {\n    return x instanceof Color\n        || (typeof x === \"object\"\n        && typeof x.t === \"number\"\n        && typeof x.s === \"number\"\n        && typeof x.d === \"number\"\n        && x.major === \"number\");\n};\nclass Color implements IColor {\n    t: number;\n    s: number;\n    d: number;\n    major: number;\n\n    constructor();\n    constructor(t?: number, s?: number, d?: number, major?: number);\n    constructor(color: number[]);\n    constructor(colorIn: Color);\n    constructor(first?: number | number[] | IColor, s?: number, d?: number, major?: number) {\n        if (isColor(first)) {\n            this.t = first.t;\n            this.s = first.s;\n            this.d = first.d;\n            this.major = first.major;\n        } else if (isNumberArray(first)) {\n            this.fromArray(first);\n        } else {\n            this.t = first || 0;\n            this.s = s || 0;\n            this.d = d || 0;\n            this.major = major || 0;\n        }\n    }\n    toArray() {\n        return [this.t, this.s, this.d, this.major];\n    }\n    fromArray(color: number[]) {\n        this.t = color[0] || 0;\n        this.s = color[1] || 0;\n        this.d = color[2] || 0;\n        this.major = color[3] || 0;\n        return this;\n    }\n    equals(colorIn: object) {\n        return isColor(colorIn)\n            && this.t === colorIn.t\n            && this.s === colorIn.s\n            && this.d === colorIn.d\n            && this.major === colorIn.major;\n    }\n    toString() {\n        return `Color{t=${this.t}, s=${this.s}, d=${this.d}, major=${this.major}}`;\n    }\n    clone() {\n        return new Color(this);\n    }\n}\n\nexport default Color;\n","import { TimeCode } from \"./TimeCode\";\nimport { gcd } from \"./utils\";\n\nexport interface IDuration {\n    isAbsolute: boolean;\n    numerator: number;\n    denominator: number;\n    seconds: number;\n}\nexport const isDuration = (x: any): x is IDuration => {\n    return x instanceof Duration\n        || (typeof x.isAbsolute === \"boolean\"\n        && x.isAbsolute\n            ? typeof x.seconds === \"number\"\n            : typeof x.numerator === \"number\" && typeof x.denominator === \"number\"\n        );\n};\nexport class Duration implements IDuration {\n    /**\n     * Absolute mode (use seconds or numerator/denominator)\n     */\n    isAbsolute: boolean;\n    /**\n     * Quarter note = 1/4, Whole note = 1/1, Quarter note triplet = 1/6\n     */\n    numerator: number;\n    /**\n     * Quarter note = 1/4, Whole note = 1/1, Quarter note triplet = 1/6\n     */\n    denominator: number;\n    /**\n     * Absolute duration if in abs mode, in seconds\n     */\n    seconds: number; // Absolute duration if in abs mode.\n\n    constructor(secondsIn: number);\n    constructor(numeratorIn: number, denominatorIn: number);\n    constructor(durationIn: Duration);\n    constructor(first: number | Duration, second?: number) {\n        if (isDuration(first)) {\n            this.isAbsolute = first.isAbsolute;\n            this.numerator = first.numerator;\n            this.denominator = first.denominator;\n            this.seconds = first.seconds;\n            this.simplify().check();\n        } else if (typeof second === \"number\") {\n            this.isAbsolute = false;\n            this.numerator = first;\n            this.denominator = second;\n            this.simplify().check();\n        } else {\n            this.isAbsolute = true;\n            this.seconds = first;\n            this.check();\n        }\n    }\n    private get value() {\n        return this.isAbsolute ? this.seconds : this.numerator / this.denominator;\n    }\n\n    getBeats(): number;\n    getBeats(timeCodeIn: TimeCode): number;\n    getBeats(bpmIn: number): number;\n    getBeats(first?: TimeCode | number) {\n        if (typeof first === \"undefined\") {\n            if (this.isAbsolute) throw new Error(\"Absolute duration needs BPM to calculate.\");\n            return this.value * 4;\n        }\n        if (typeof first === \"number\") { // bpmIn\n            return this.value * 4 * first / 60;\n        } // timeCodeIn\n        return this.value * 4 * first.getAbsoluteDuration();\n    }\n\n    toAbsolute(bpmIn: number): this;\n    toAbsolute(timeCodeIn: TimeCode): this\n    toAbsolute(first: TimeCode | number) {\n        if (this.isAbsolute) return this;\n        if (typeof first === \"number\") this.seconds = this.getBeats() * first / 60;\n        else this.seconds = first.getAbsoluteDuration(this.getBeats());\n        this.isAbsolute = true;\n        return this;\n    }\n\n    add(durationIn: Duration) {\n        if (this.denominator === durationIn.denominator) this.numerator += durationIn.numerator;\n        else {\n            this.numerator = this.numerator * durationIn.denominator + durationIn.numerator * this.denominator;\n            this.denominator *= durationIn.denominator;\n        }\n        this.simplify().check();\n        return this;\n    }\n\n    sub(durationIn: Duration) {\n        if (this.denominator === durationIn.denominator) this.numerator -= durationIn.numerator;\n        else {\n            this.numerator = this.numerator * durationIn.denominator - durationIn.numerator * this.denominator;\n            this.denominator *= durationIn.denominator;\n        }\n        this.simplify().check();\n        return this;\n    }\n\n    mul(f: number) {\n        this.numerator *= f;\n        this.simplify().check();\n        return this;\n    }\n\n    div(f: number) {\n        this.numerator /= f;\n        this.simplify().check();\n        return this;\n    }\n\n    private simplify() {\n        const _gcd = gcd(this.numerator, this.denominator);\n        if (_gcd > 1) {\n            this.denominator /= _gcd;\n            this.numerator /= _gcd;\n        }\n        return this;\n    }\n\n    private check() {\n        if (this.isAbsolute) {\n            if (this.numerator <= 0 || this.denominator <= 0) throw new Error(\"Duration should have positive value.\");\n        } else {\n            if (this.seconds <= 0) throw new Error(\"Duration should have positive value.\");\n        }\n        return this;\n    }\n\n    clone() {\n        return new Duration(this);\n    }\n\n    compareTo(that: IDuration) {\n        return Duration.compare(this, that);\n    }\n\n    static compare(x: IDuration, y: IDuration) {\n        if (x.isAbsolute !== y.isAbsolute) throw new Error(\"Cannot compare between absolute and relative duration\");\n        return x.isAbsolute ? x.seconds - y.seconds : x.numerator / x.denominator - y.numerator / y.denominator;\n    }\n\n    equals(durationIn: object) {\n        return isDuration(durationIn) && this.compareTo(durationIn) === 0;\n    }\n\n    toString() {\n        return this.isAbsolute ? this.seconds + \"s\" : this.getBeats() + \" beats\";\n    }\n}\n\nexport default Duration;\n","export class Enum {\n    protected static indexes: string[] = [];\n    static values<T extends Enum>(): T[] {\n        return this.indexes.map(key => (this as unknown as { [key: string]: T })[key]);\n    }\n    static valueOf<T extends Enum>(key: string): T {\n        return (this as unknown as { [key: string]: T })[key];\n    }\n    protected constructor() {\n    }\n    name(): string {\n        throw new Error(\"Method not implemented\");\n    }\n    ordinal(): number {\n        return (this.constructor as typeof Enum).indexes.indexOf(this.name());\n    }\n    toString(): string {\n        return this.name();\n    }\n}\n\nexport default Enum;\n","export class Frequency {\n    static A440 = 440;\n    static SEMITONE = 2 ** (1 / 12);\n    static THRES_AUDIT = 2 ** (1 / 36);\n}\n\nexport default Frequency;\n","import { floorMod } from \"./utils\";\nimport Enum from \"./Enum\";\nimport Frequency from \"./Frequency\";\n\nexport interface IInterval {\n    degree: number;\n    onset: number;\n    octave: number;\n}\nexport type TIntervalOffset = 0 | 2 | 4 | 5 | 7 | 9 | 11;\nexport const isInterval = (x: any): x is IInterval => {\n    return x instanceof Interval\n        || (typeof x === \"object\"\n        && typeof x.degree === \"number\"\n        && typeof x.onset === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isIntervalArray = (x: any): x is Interval[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Interval);\n};\ntype TIntervalProperty = \"P\" | \"M\" | \"m\" | \"A\" | \"d\";\ntype TIntervalPropertyValue = \"PERFECT\" | \"MAJOR\" | \"MINOR\" | \"AUGMENTED\" | \"DIMINISHED\";\nexport const DEGREE_TO_OFFSET = [0, 2, 4, 5, 7, 9, 11];\nclass EnumIntervalProperty extends Enum {\n    protected static indexes = [\"PERFECT\", \"MAJOR\", \"MINOR\", \"AUGMENTED\", \"DIMINISHED\"];\n    private static abbMap: { [key: string]: TIntervalPropertyValue } = { P: \"PERFECT\", M: \"MAJOR\", m: \"MINOR\", A: \"AUGMENTED\", d: \"DIMINISHED\" };\n    static get PERFECT() { return new EnumIntervalProperty(\"P\"); }\n    static get MAJOR() { return new EnumIntervalProperty(\"M\"); }\n    static get MINOR() { return new EnumIntervalProperty(\"m\"); }\n    static get AUGMENTED() { return new EnumIntervalProperty(\"A\"); }\n    static get DIMINISHED() { return new EnumIntervalProperty(\"d\"); }\n    static byAbb(abbIn: string) {\n        const name = this.abbMap[abbIn];\n        if (name) return EnumIntervalProperty[name];\n        throw new SyntaxError(`No such interval property with abbreviation ${abbIn}.`);\n    }\n    abb: TIntervalProperty;\n    private constructor(abbIn: TIntervalProperty) {\n        super();\n        this.abb = abbIn;\n    }\n    name() {\n        return EnumIntervalProperty.abbMap[this.abb];\n    }\n    toString() {\n        return this.name();\n    }\n    equals(propertyIn: object) {\n        return propertyIn instanceof EnumIntervalProperty\n            && this.abb === propertyIn.abb;\n    }\n}\n\nexport class Interval implements IInterval {\n    private static REGEX = /^([PMmAd])([0-9]+)((\\+|-)\\d+)?$/;\n    degree: number;\n    onset: number;\n    octave: number;\n    static getOffsetFromProperty(propertyIn: EnumIntervalProperty, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (propertyIn.equals(EnumIntervalProperty.PERFECT)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -1;\n        } else {\n            if (propertyIn.equals(EnumIntervalProperty.MAJOR)) return 0;\n            if (propertyIn.equals(EnumIntervalProperty.MINOR)) return -1;\n            if (propertyIn.equals(EnumIntervalProperty.AUGMENTED)) return 1;\n            if (propertyIn.equals(EnumIntervalProperty.DIMINISHED)) return -2;\n        }\n        return 0;\n    }\n    static getPropertyFromOffset(onsetIn: number, degreeIn: number) {\n        const degree = typeof degreeIn === \"number\" ? floorMod(degreeIn - 1, 7) + 1 : 1;\n        if (degree === 1 || degree === 4 || degree === 5) {\n            if (onsetIn === 0) return EnumIntervalProperty.PERFECT;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -1) return EnumIntervalProperty.DIMINISHED;\n        } else {\n            if (onsetIn === 0) return EnumIntervalProperty.MAJOR;\n            if (onsetIn === -1) return EnumIntervalProperty.MINOR;\n            if (onsetIn === 1) return EnumIntervalProperty.AUGMENTED;\n            if (onsetIn === -2) return EnumIntervalProperty.DIMINISHED;\n        }\n        return null;\n    }\n    static getOffsetFromDegree(degreeIn: number) {\n        return typeof degreeIn === \"number\" ? DEGREE_TO_OFFSET[floorMod(degreeIn - 1, 7)] + 12 * Math.floor((degreeIn - 1) / 7) : 0;\n    }\n    /**\n     * Returns Unison\n     */\n    constructor();\n    /**\n     * Gives a new Interval instance (clone)\n     */\n    constructor(intervalIn: IInterval);\n    /**\n     * Parse interval string\n     * @example\n     * new Interval(\"d6\");\n     * @throws {SyntaxError} when parse failed\n     */\n    constructor(intervalIn: string);\n    /**\n     * Creates an instance of Interval.\n     */\n    constructor(degreeIn: number, onset?: number, octave?: number);\n    constructor(first?: IInterval | string | number, second?: number, third?: number) {\n        this.degree = 0;\n        this.onset = 0;\n        this.octave = 0;\n        if (isInterval(first)) {\n            this.fromInterval(first.degree, first.onset, first.octave);\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromInterval(first, second, third);\n        }\n    }\n    protected fromInterval(degreeIn: number, onsetIn = 0, octaveIn = 0) {\n        this.degree = floorMod(degreeIn - 1, 7) + 1;\n        this.onset = onsetIn;\n        this.octave = Math.floor((degreeIn - 1) / 7) + octaveIn;\n    }\n    static fromString(nameIn: string): IInterval {\n        const matched = Interval.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such interval ${nameIn}.`);\n        const degree = parseInt(matched[2]);\n        const onset = Interval.getOffsetFromProperty(EnumIntervalProperty.byAbb(matched[1]), degree);\n        const octave = parseInt(matched[3]) || 0;\n        return { degree, onset, octave };\n    }\n    protected fromString(nameIn: string) {\n        const { degree, onset, octave } = Interval.fromString(nameIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IInterval {\n        let degree = 0;\n        let onset = 0;\n        const octave = Math.floor(offsetIn / 12);\n        for (let i = 0; i < DEGREE_TO_OFFSET.length; i++) {\n            if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12)) {\n                degree = i + 1;\n                onset = 0;\n                break;\n            } else if (DEGREE_TO_OFFSET[i] === floorMod(offsetIn, 12) + 1) {\n                degree = i + 1;\n                onset = -1;\n                break;\n            }\n        }\n        return { degree, onset, octave };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { degree, onset, octave } = Interval.fromOffset(offsetIn);\n        this.degree = degree;\n        this.onset = onset;\n        this.octave = octave;\n        return this;\n    }\n    static fromRatio(ratioIn: number) {\n        const offset = Math.round(Math.log(ratioIn) / Math.log(Frequency.SEMITONE));\n        return new Interval(offset);\n    }\n    add(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree + iIn.degree - 1 - 1, 7) + 1;\n        i.onset = this.offset - 12 * this.octave + iIn.offset - 12 * iIn.octave - Interval.getOffsetFromDegree(this.degree + iIn.degree - 1);\n        i.octave = this.octave + iIn.octave + (this.degree + iIn.degree - 1 - 1) / 7;\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    sub(iIn: Interval) {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(this.degree - iIn.degree + 1 - 1, 7) + 1;\n        i.onset = (this.offset - 12 * this.octave) - (iIn.offset - 12 * iIn.octave) - Interval.getOffsetFromDegree(this.degree - iIn.degree + 1);\n        i.octave = this.octave - iIn.octave + Math.floor((this.degree - iIn.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    reverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 0 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    octaveReverse() {\n        const i = { degree: 0, onset: 0, octave: 0 };\n        i.degree = floorMod(1 - this.degree, 7) + 1;\n        i.onset = 0 - (this.offset - 12 * this.octave) - Interval.getOffsetFromDegree(1 - this.degree + 1);\n        i.octave = 1 - this.octave + Math.floor((1 - this.degree + 1 - 1) / 7);\n        this.degree = i.degree;\n        this.onset = i.onset;\n        this.octave = i.octave;\n        return this;\n    }\n    get offset() {\n        return DEGREE_TO_OFFSET[floorMod(this.degree - 1, 7)] + 12 * Math.floor((this.degree - 1) / 7) + this.onset + 12 * this.octave;\n    }\n    get ratio() {\n        return Frequency.SEMITONE ** this.offset;\n    }\n    get property() {\n        return Interval.getPropertyFromOffset(this.onset, this.degree);\n    }\n    static fromArray(...arrayIn: (string | IInterval)[]) {\n        return arrayIn.map(e => new Interval(e as any));\n    }\n    equals(intervalIn: object) {\n        return isInterval(intervalIn)\n            && this.degree === intervalIn.degree\n            && this.onset === intervalIn.onset\n            && this.octave === intervalIn.octave;\n    }\n    toString() {\n        const sOnset = this.property ? this.property.abb : (this.onset > 0 ? \"+\" : \"\") + this.onset.toString() + \"_\";\n        const sOctave = this.octave > 0 ? (\"+\" + this.octave) : this.octave < 0 ? this.octave : \"\";\n        return sOnset + this.degree + sOctave;\n    }\n    clone() {\n        return new Interval(this);\n    }\n    static compare(x: Interval, y: Interval) {\n        return x.offset - y.offset;\n    }\n}\n\nexport default Interval;\n","import { floorMod } from \"./utils\";\nimport Interval, { TIntervalOffset, DEGREE_TO_OFFSET } from \"./Interval\";\nimport Enum from \"./Enum\";\n\ntype TEnumNoteValue = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\nexport class EnumNote extends Enum {\n    protected static indexes: TEnumNoteValue[] = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    private static offsetMap: { [key: number]: TEnumNoteValue } = { 0: \"C\", 2: \"D\", 4: \"E\", 5: \"F\", 7: \"G\", 9: \"A\", 11: \"B\" };\n    static get C() { return new EnumNote(0); }\n    static get D() { return new EnumNote(2); }\n    static get E() { return new EnumNote(4); }\n    static get F() { return new EnumNote(5); }\n    static get G() { return new EnumNote(7); }\n    static get A() { return new EnumNote(9); }\n    static get B() { return new EnumNote(11); }\n    static c = EnumNote.C;\n    static d = EnumNote.D;\n    static e = EnumNote.E;\n    static f = EnumNote.F;\n    static g = EnumNote.G;\n    static a = EnumNote.A;\n    static b = EnumNote.B;\n    readonly offset: TIntervalOffset;\n    private constructor(offsetIn: TIntervalOffset) {\n        super();\n        this.offset = offsetIn;\n    }\n    static byOffset(offsetIn: number) {\n        if (typeof offsetIn !== \"number\") return null;\n        const name = EnumNote.offsetMap[floorMod(offsetIn, 12)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with offset ${offsetIn}.`);\n    }\n    static byIndex(indexIn: number) {\n        if (typeof indexIn !== \"number\") return null;\n        const name = EnumNote.indexes[floorMod(indexIn, 7)];\n        if (name) return EnumNote[name];\n        throw new SyntaxError(`No such note with index ${indexIn}.`);\n    }\n    name() { return EnumNote.offsetMap[this.offset]; }\n    get index() { return DEGREE_TO_OFFSET.indexOf(this.offset); }\n    ordinal() { return this.index; }\n    equals(noteIn: object) {\n        return noteIn instanceof EnumNote && noteIn.offset === this.offset;\n    }\n}\nexport interface INote {\n    enumNote: EnumNote;\n    alteration: number;\n}\nexport const isNote = (x: any): x is INote => {\n    return x instanceof Note\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\");\n};\nexport const isNoteArray = (x: any): x is Note[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Note);\n};\nexport class Note implements INote {\n    static REGEX = /^([b#]*)([a-gA-G])$/;\n    enumNote: EnumNote;\n    alteration: number;\n    /**\n     * Returns C\n     */\n    constructor()\n    /**\n     * New note\n     */\n    constructor(noteIn: EnumNote, alteration?: number)\n    /**\n     * Gives a new Note instance (clone)\n     */\n    constructor(noteIn: INote)\n    /**\n     * Parses note string.\n     * @example\n     * new Note(\"##E\");\n     * @throws {SyntaxError} when parse failed\n     */\n    constructor(noteIn: string)\n    /**\n     * Creates an instance of Note.\n     */\n    constructor(offset: number, alteration?: number)\n    constructor(first?: EnumNote | INote | string | number, second?: number) {\n        this.enumNote = EnumNote.C;\n        this.alteration = 0;\n        if (first instanceof EnumNote) {\n            this.enumNote = first;\n            if (second) this.alteration = second;\n        } else if (isNote(first)) {\n            this.enumNote = first.enumNote;\n            this.alteration = first.alteration;\n        } else if (typeof first === \"string\") {\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            this.fromOffset(first, second);\n        }\n    }\n    static fromString(nameIn: string): INote {\n        const matched = Note.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such note ${nameIn}.`);\n        const enumNote = EnumNote[matched[2] as TEnumNoteValue];\n        let alteration = 0;\n        matched[1].split(\"\").forEach(c => alteration += c === \"#\" ? 1 : -1);\n        return { enumNote, alteration };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration } = Note.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    static fromOffset(offsetIn: number, alterationIn?: number): INote {\n        const note = floorMod(offsetIn, 12);\n        let offset = 11;\n        for (let i = DEGREE_TO_OFFSET.length - 1; i >= 0; i--) {\n            const el = DEGREE_TO_OFFSET[i];\n            if (el <= note) {\n                offset = el;\n                break;\n            }\n        }\n        const enumNote = EnumNote.byOffset(offset);\n        let alteration = note - offset;\n        if (alterationIn) alteration += alterationIn;\n        return { enumNote, alteration };\n    }\n    protected fromOffset(offsetIn: number, alterationIn?: number) {\n        const { enumNote, alteration } = Note.fromOffset(offsetIn, alterationIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index + i.degree - 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(newEnumNote.offset - this.enumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        const newEnumNote = EnumNote.byIndex(this.enumNote.index - i.degree + 1);\n        this.alteration += i.offset - 12 * i.octave - floorMod(this.enumNote.offset - newEnumNote.offset, 12);\n        this.enumNote = newEnumNote;\n        return this;\n    }\n    equals(noteIn: object) {\n        return isNote(noteIn)\n            && this.enumNote.equals(noteIn.enumNote)\n            && this.alteration === noteIn.alteration;\n    }\n    getInterval(noteIn: INote) {\n        if (!isNote(noteIn)) throw new TypeError(\"Cannot get Interval with other object than Note\");\n        const that = noteIn instanceof Note ? noteIn : new Note(noteIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration;\n    }\n    static fromArray(...arrayIn: (string | number | INote)[]) {\n        return arrayIn.map(e => new Note(e as any));\n    }\n    toString() {\n        return (this.alteration > 0 ? \"#\" : \"b\").repeat(Math.abs(this.alteration)) + this.enumNote.name();\n    }\n    clone() {\n        return new Note(this);\n    }\n}\n\nexport default Note;\n","export interface IParam {\n    path: string;\n    name?: string;\n    min: number;\n    max: number;\n    step: number;\n    value: number;\n}\nexport const isParam = (x: any): x is IParam => {\n    return x instanceof Param\n        || (typeof x === \"object\"\n        && typeof x.path === \"string\"\n        && (typeof x.name === \"undefined\" || x.name === \"string\")\n        && typeof x.min === \"number\"\n        && typeof x.max === \"number\"\n        && typeof x.step === \"number\"\n        && typeof x.value === \"number\"\n        && typeof x.init === \"number\");\n};\nexport class Param implements IParam {\n    readonly path: string;\n    name?: string;\n    private _min: number;\n    private _max: number;\n    step: number;\n    private _value: number;\n    constructor(optionsIn: IParam) {\n        this.path = optionsIn.path;\n        this.name = optionsIn.name;\n        this._value = optionsIn.value;\n        this.step = optionsIn.step;\n        this.setRange(optionsIn.min, optionsIn.max);\n    }\n    get value(): number {\n        return this._value;\n    }\n    set value(valueIn: number) {\n        if (valueIn < this.min) {\n            this._value = this.min;\n        } else if (valueIn > this.max) {\n            const d = this.max - this.min;\n            this._value = this.min + d - d % this.step;\n        } else {\n            const d = valueIn - this.min;\n            this._value = this.min + d - d % this.step;\n        }\n    }\n    get min() {\n        return this._min;\n    }\n    set min(minIn: number) {\n        this._min = Math.min(minIn, this.max);\n        if (this.value < this.min) this.value = this.min;\n    }\n    get max() {\n        return this._max;\n    }\n    set max(maxIn: number) {\n        this._max = Math.max(maxIn, this.min);\n        if (this.value > this.max) this.value = this.max;\n    }\n    setRange(minIn: number, maxIn: number) {\n        const min = Math.min(minIn, maxIn);\n        const max = Math.max(minIn, maxIn);\n        this._min = min;\n        this._max = max;\n        this.value = this._value;\n    }\n    clone() {\n        return new Param(this);\n    }\n}\n\nexport default Param;\n","import Note, { EnumNote, INote, isNote } from \"./Note\";\nimport Interval from \"./Interval\";\nimport Frequency from \"./Frequency\";\n\nexport interface IPitch extends INote {\n    octave: number;\n}\nexport const isPitch = (x: any): x is IPitch => {\n    return x instanceof Pitch\n        || (typeof x === \"object\"\n        && x.enumNote instanceof EnumNote\n        && typeof x.alteration === \"number\"\n        && typeof x.octave === \"number\");\n};\nexport const isPitchArray = (x: any): x is Pitch[] => {\n    return Array.isArray(x)\n        && x.every(el => el instanceof Pitch);\n};\nexport class Pitch extends Note implements IPitch {\n    static REGEX = /^([b#]*[a-gA-G])(-?\\d+)?$/;\n    static fromFrequency(f: number) {\n        return new Pitch(69 + 12 * (Math.log(f / Frequency.A440) / Math.log(2)));\n    }\n    static MINIMUM = Pitch.fromFrequency(20);\n    static MAXIMUM = Pitch.fromFrequency(20000);\n    octave: number;\n\n    /**\n     * Returns C0\n     */\n    constructor();\n    /**\n     * Gives a new Pitch instance (clone)\n     */\n    constructor(pitchIn: IPitch);\n    /**\n     * Add octave info to a note\n     */\n    constructor(noteIn: EnumNote | INote, octaveIn?: number);\n    /**\n     * Parses pitch string.\n     * @example\n     * new Pitch(\"##E5\");\n     * @throws {SyntaxError} when parse failed\n     */\n    constructor(pitchIn: string);\n    /**\n     * Creates an instance of Pitch with index\n     */\n    constructor(pitchIn: number);\n    /**\n     * Creates an instance of Pitch with index\n     */\n    constructor(first?: IPitch | EnumNote | INote | string | number, second?: number) {\n        if (isPitch(first)) {\n            super(first);\n            this.octave = first.octave;\n        } else if (first instanceof EnumNote) {\n            super(first);\n            this.octave = second || 0;\n        } else if (isNote(first)) {\n            super(first);\n            this.octave = second || 0;\n        } else if (typeof first === \"string\") {\n            super();\n            this.fromString(first);\n        } else if (typeof first === \"number\") {\n            super(first);\n            this.octave = Math.floor(first / 12 - 1);\n        } else {\n            super();\n        }\n    }\n    static fromString(nameIn: string): IPitch {\n        const matched = Pitch.REGEX.exec(nameIn);\n        if (matched === null) throw new SyntaxError(`No such pitch ${nameIn}.`);\n        const octave = parseInt(matched[2]) || 0;\n        return { ...Note.fromString(matched[1]), octave };\n    }\n    protected fromString(nameIn: string) {\n        const { enumNote, alteration, octave } = Pitch.fromString(nameIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    static fromOffset(offsetIn: number): IPitch {\n        return { ...super.fromOffset(offsetIn), octave: Math.floor(offsetIn / 12 - 1) };\n    }\n    protected fromOffset(offsetIn: number) {\n        const { enumNote, alteration, octave } = Pitch.fromOffset(offsetIn);\n        this.enumNote = enumNote;\n        this.alteration = alteration;\n        this.octave = octave;\n        return this;\n    }\n    add(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset + iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index + i.degree - 1) / 7) + i.octave;\n        return super.add(i);\n    }\n    sub(iIn: number | string | Interval) {\n        if (typeof iIn === \"number\") return this.fromOffset(this.offset - iIn);\n        let i: Interval;\n        if (typeof iIn === \"string\") i = new Interval(iIn);\n        else if (iIn instanceof Interval) i = iIn;\n        this.octave += Math.floor((this.enumNote.index - i.degree + 1) / 7) - i.octave;\n        return super.sub(i);\n    }\n    equals(pitchIn: object) {\n        return super.equals(pitchIn)\n            && isPitch(pitchIn)\n            && this.octave === pitchIn.octave;\n    }\n    getInterval(pitchIn: IPitch) {\n        if (!isPitch(pitchIn)) throw new TypeError(\"Cannot get Interval with other object than Pitch\");\n        const that = pitchIn instanceof Pitch ? pitchIn : new Pitch(pitchIn);\n        const degree = that.enumNote.index - this.enumNote.index + 1 + (pitchIn.octave - this.octave) * 7;\n        const onset = that.offset - this.offset - Interval.getOffsetFromDegree(degree);\n        const octave = 0;\n        return new Interval(degree, onset, octave);\n    }\n    get offset() {\n        return this.enumNote.offset + this.alteration + 12 * (this.octave + 1);\n    }\n    static fromArray(...arrayIn: (string | number | IPitch)[]) {\n        return arrayIn.map(e => new Pitch(e as any));\n    }\n    toString() {\n        return super.toString() + this.octave;\n    }\n    clone(): Pitch {\n        return new Pitch(this);\n    }\n    static compare(x: Pitch, y: Pitch) {\n        return x.offset - y.offset;\n    }\n}\n\nexport default Pitch;\n","import Interval, { isIntervalArray } from \"./Interval\";\nimport { isStringArray, floorMod } from \"./utils\";\n\nexport class EnumScale {\n    static get MAJOR() { return new Scale(\"Major\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MINOR() { return new Scale(\"Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get PENTA() { return new Scale(\"Penta\", \"P1:Gong\", \"M2:Shang\", \"M3:Jiao\", \"P5:Zhi\", \"M6:Yu\"); }\n\n    static get IONIAN() { return EnumScale.MAJOR; }\n    static get DORIAN() { return new Scale(\"Dorian\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get PHRYGIAN() { return new Scale(\"Phrygian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN() { return new Scale(\"Lydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get MIXOLYDIAN() { return new Scale(\"Mixolydian\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get AEOLIAN() { return EnumScale.MINOR; }\n    static get LOCRIAN() { return new Scale(\"Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n\n    static get ASCENDING_MELODIC_MINOR() { return new Scale(\"Ascending Melodic Minor\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get PHRYGIAN_MAJ6() { return new Scale(\"Phrygian M6\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get LYDIAN_AUG() { return new Scale(\"Lydian Augmented\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"A5:Dominant\", \"M6:Submediant\", \"M7:Leading\"); }\n    static get LYDIAN_DOM() { return new Scale(\"Lydian Dominant\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"A4:Subdominant\", \"P5:Dominant\", \"M6:Submediant\", \"m7:Subtonic\"); }\n    static get MIXOLYDIAN_MIN6() { return new Scale(\"Mixolydian m6\", \"P1:Tonic\", \"M2:Supertonic\", \"M3:Mediant\", \"P4:Subdominant\", \"P5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get LOCRIAN_MAJ2() { return new Scale(\"Locrian M2\", \"P1:Tonic\", \"M2:Supertonic\", \"m3:Mediant\", \"P4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n    static get SUPER_LOCRIAN() { return new Scale(\"Super Locrian\", \"P1:Tonic\", \"m2:Supertonic\", \"m3:Mediant\", \"d4:Subdominant\", \"d5:Dominant\", \"m6:Submediant\", \"m7:Subtonic\"); }\n}\nexport interface IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n}\nexport const isScale = (x: any): x is IScale => {\n    return x instanceof Scale\n        || (typeof x === \"object\"\n        && isStringArray(x.degreeNames)\n        && isIntervalArray(x.intervals));\n};\nexport class Scale implements Iterable<Interval>, IScale {\n    scaleName?: string;\n    intervals: Interval[];\n    degreeNames: string[];\n\n    constructor(nameIn: string, ...degreesIn: string[]);\n    constructor(scaleIn: IScale);\n    constructor(first: string | IScale, ...degreesIn: string[]) {\n        if (typeof first === \"string\") {\n            this.scaleName = first;\n            this.intervals = [];\n            this.degreeNames = [];\n            for (let i = 0; i < degreesIn.length; i++) {\n                const degreeName = degreesIn[i];\n                const split = degreeName.split(\":\");\n                if (split.length === 2) {\n                    this.intervals[i] = new Interval(split[0]);\n                    this.degreeNames[i] = split[1];\n                } else {\n                    this.intervals[i] = new Interval(degreeName);\n                    this.degreeNames[i] = degreeName;\n                }\n            }\n        } else {\n            this.scaleName = first.scaleName;\n            this.intervals = first.intervals.map(i => i.clone());\n            this.degreeNames = [...first.degreeNames];\n        }\n    }\n    get size() {\n        return this.intervals.length;\n    }\n    addNote(noteIn: string) {\n        let interval: Interval;\n        let name: string;\n        const split = noteIn.split(\":\");\n        if (split.length === 2) {\n            interval = new Interval(split[0]);\n            name = split[1];\n        } else {\n            interval = new Interval(noteIn);\n            name = noteIn;\n        }\n        this.intervals.push(interval);\n        this.degreeNames.push(name);\n        return this;\n    }\n    getIntervalFromIndex(index: number) {\n        return this.intervals[index];\n    }\n    getIntervalFromDegree(degreeIn: number) {\n        return this.intervals.find((interval) => {\n            return floorMod(degreeIn - 1, this.intervals.length) + 1 === interval.degree;\n        });\n    }\n    get degrees() {\n        return this.intervals.map(i => i.degree);\n    }\n    equals(scaleIn: object) {\n        return isScale(scaleIn)\n            && this.intervals.length === scaleIn.intervals.length\n            && this.intervals.every((interval, i) => interval.equals(scaleIn.intervals[i]))\n            && this.degreeNames.length === scaleIn.degreeNames.length\n            && this.degreeNames.every((name, i) => name === scaleIn.degreeNames[i]);\n    }\n    public getName() {\n        return this.scaleName;\n    }\n    toString() {\n        let s = this.scaleName ? `Scale \"${this.scaleName}\" :{` : \"Scale :{\";\n        for (let i = 0; i < this.intervals.length; i++) {\n            const sI = this.intervals[i].toString();\n            const sN = this.degreeNames[i];\n            s += sI + (sN.length > 0 && sN !== sI ? \":\" + sN : \"\");\n            if (i !== this.intervals.length - 1) s += \", \";\n        }\n        s += \"}\";\n        return s;\n    }\n    clone() {\n        return new Scale(this);\n    }\n    [Symbol.iterator](): Iterator<Interval> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Interval;\n                let done = true;\n                if (i < o.intervals.length) {\n                    value = o.intervals[i];\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n\nexport default Scale;\n","export interface ITimeCode {\n    beats: number;\n    beatDuration: number;\n    bpm: number;\n}\nexport const isTimeCode = (x: any): x is ITimeCode => {\n    return x instanceof TimeCode\n        || (typeof x.beats === \"number\"\n        && typeof x.beatDuration === \"number\"\n        && typeof x.bpm === \"number\");\n};\nexport class TimeCode implements ITimeCode {\n    static DEFAULT = new TimeCode(4, 4, 60);\n\n    beats: number;\n    beatDuration: number;\n    bpm: number;\n    constructor(beatsIn?: number, beatDurationIn?: number, bpmIn?: number);\n    constructor(timeCodeIn: ITimeCode);\n    constructor(first?: number | ITimeCode, second?: number, third?: number) {\n        if (isTimeCode(first)) {\n            this.beats = first.beats;\n            this.beatDuration = first.beatDuration;\n            this.bpm = first.bpm;\n        } else {\n            this.beats = first || 4;\n            this.beatDuration = second || 4;\n            this.bpm = third || 60;\n        }\n    }\n\n    getAbsoluteDuration(beatsIn?: number) {\n        return (typeof beatsIn === \"number\" ? beatsIn : 1) * this.bpm / 60;\n    }\n\n    toString() {\n        return this.beats + \"/\" + this.beatDuration + \" @\" + this.bpm;\n    }\n\n    clone() {\n        return new TimeCode(this);\n    }\n}\n\nexport default TimeCode;\n","import Chord, { EnumChord } from \"./Chord\";\nimport { parseRoman, toRoman } from \"./utils\";\nimport Tonality from \"./Tonality\";\nimport Interval from \"./Interval\";\n\nexport interface ITonalChord {\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n}\nexport const isTonalChord = (x: any): x is ITonalChord => {\n    return x instanceof TonalChord\n        || (typeof x.alteration === \"number\"\n        && typeof x.degree === \"number\"\n        && x.chord instanceof EnumChord);\n};\nexport const isTonalChordArray = (x: any): x is TonalChord[] => {\n    return Array.isArray(x)\n        && x.every(e => e instanceof TonalChord);\n};\nexport class TonalChord implements ITonalChord {\n    static REGEX1 = /^([#b]?)(I{1,3}|i{1,3}|I?V|i?v|VI{1,2}|vi{1,2})(\\+|-?)$/;\n    static REGEX2 = /^([#b]?)([1-7])(M|m|\\+|-?)$/;\n    alteration: number;\n    degree: number;\n    chord: EnumChord;\n    constructor(nameIn: string);\n    constructor(chordIn: ITonalChord);\n    constructor(first: string | ITonalChord) {\n        if (typeof first === \"string\") {\n            let matched = TonalChord.REGEX1.exec(first);\n            if (matched) {\n                let s = matched[1];\n                this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                s = matched[2];\n                const p = parseRoman(s);\n                if (p !== 0 && p > 7 && p < -7) throw new Error(\"Roman number too large for degree.\");\n                this.degree = Math.abs(p);\n                s = matched[3];\n                this.chord = s.length === 0\n                    ? p > 0 ? EnumChord.MAJ : EnumChord.MIN\n                    : s === \"+\" ? EnumChord.AUG : EnumChord.DIM;\n            } else {\n                matched = TonalChord.REGEX2.exec(first);\n                if (matched) {\n                    let s = matched[1];\n                    this.alteration = s === \"#\" ? 1 : s === \"b\" ? -1 : 0;\n                    s = matched[2];\n                    this.degree = +s;\n                    s = matched[3];\n                    this.chord = s.length === 0\n                        ? null\n                        : s === \"M\" ? EnumChord.MAJ\n                            : s === \"m\" ? EnumChord.MAJ\n                                : s === \"+\" ? EnumChord.AUG\n                                    : EnumChord.DIM;\n                } else throw new Error(\"Input string error: \" + first);\n            }\n        } else {\n            this.alteration = first.alteration;\n            this.degree = first.degree;\n            this.chord = first.chord.clone();\n        }\n    }\n    getChord(tonalityIn: Tonality) {\n        let chord: Chord;\n        if (this.chord) chord = new Chord(tonalityIn.getNoteFromDegree(this.degree));\n        else chord = tonalityIn.getTriad(this.degree);\n        if (this.alteration === 1) chord.base.add(new Interval(\"A1\"));\n        else if (this.alteration === -1) chord.base.sub(new Interval(\"A1\"));\n        return chord;\n    }\n    equals(chordIn: object) {\n        return isTonalChord(chordIn)\n            && chordIn.alteration === this.alteration\n            && chordIn.degree === this.degree\n            && chordIn.chord.equals(this.chord);\n    }\n    toString() {\n        let s = \"\";\n        if (this.alteration === 1) s = \"#\";\n        else if (this.alteration === -1) s = \"b\";\n        if (!this.chord) return s + this.degree;\n        s += toRoman(this.degree * (this.chord.equals(EnumChord.MIN) ? -1 : 1));\n        if (!this.chord.equals(EnumChord.MAJ) && !this.chord.equals(EnumChord.MIN)) {\n            if (this.chord.equals(EnumChord.AUG)) s += \"+\";\n            else if (this.chord.equals(EnumChord.AUG)) s += \"-\";\n            else s += this.chord.name().toLowerCase();\n        }\n        return s;\n    }\n    clone() {\n        return new TonalChord(this);\n    }\n}\n\nexport default TonalChord;\n","import Scale, { isScale, EnumScale } from \"./Scale\";\nimport Note, { isNote } from \"./Note\";\nimport Chord from \"./Chord\";\nimport Interval from \"./Interval\";\n\nexport interface ITonality {\n    note: Note;\n    scale: Scale;\n}\nexport const isTonality = (x: any): x is ITonality => {\n    return x instanceof Tonality\n        || (typeof x === \"object\"\n        && isNote(x.note)\n        && isScale(x.scale));\n};\nexport class Tonality implements Iterable<Note>, ITonality {\n    note: Note;\n    scale: Scale;\n    constructor(tonalityIn: Tonality);\n    constructor(tonalityIn: string);\n    constructor(noteIn: Note, scaleIn: Scale);\n    constructor(first: Tonality | string | Note, second?: Scale) {\n        if (isTonality(first)) {\n            this.note = first.note.clone();\n            this.scale = first.scale.clone();\n        } else if (typeof first === \"string\") {\n            try {\n                this.note = new Note(first);\n            } catch (e) {\n                throw new Error(`No such tonality: ${first}.`);\n            }\n            this.scale = first.substr(first.length - 1).match(\"[A-G]\") ? EnumScale.MAJOR : EnumScale.MINOR;\n        } else {\n            this.note = first;\n            this.scale = second;\n        }\n    }\n    add(intervalIn: Interval) {\n        this.note.add(intervalIn);\n        return this;\n    }\n    sub(intervalIn: Interval) {\n        this.note.sub(intervalIn);\n        return this;\n    }\n\n    get notes() {\n        return this.scale.intervals.map(i => this.note.clone().add(i));\n    }\n    getNoteFromDegree(degreeIn: number) {\n        return this.note.clone().add(this.scale.getIntervalFromDegree(degreeIn));\n    }\n    getTriad(degreeIn: number) {\n        return new Chord(this.getNoteFromDegree(degreeIn), this.getNoteFromDegree(degreeIn + 2), this.getNoteFromDegree(degreeIn + 4));\n    }\n    getTriads() {\n        return this.scale.degrees.map(d => this.getTriad(d));\n    }\n    get triads() {\n        return this.getTriads();\n    }\n    toRelative() {\n        if (this.scale.equals(EnumScale.MAJOR)) {\n            this.note.sub(new Interval(\"m3\"));\n            this.scale = EnumScale.MINOR;\n        } else if (this.scale.equals(EnumScale.MINOR)) {\n            this.note.add(new Interval(\"m3\"));\n            this.scale = EnumScale.MAJOR;\n        } else throw new Error(\"Relative not found.\");\n        return this;\n    }\n    get relative() {\n        return this.clone().toRelative();\n    }\n    toNext() {\n        this.note.add(new Interval(\"P5\"));\n        return this;\n    }\n    get next() {\n        return this.clone().toNext();\n    }\n    toPrev() {\n        this.note.sub(new Interval(\"P5\"));\n        return this;\n    }\n    get prev() {\n        return this.clone().toPrev();\n    }\n    toString() {\n        return `${this.note.toString()} ${this.scale.getName() || this.scale.toString()}`;\n    }\n    clone() {\n        return new Tonality(this);\n    }\n    [Symbol.iterator](): Iterator<Note> {\n        const o = this;\n        let i = -1;\n        return {\n            next() {\n                let value: Note;\n                let done = true;\n                if (i < o.scale.size) {\n                    value = o.note.clone().add(o.scale.intervals[i]);\n                    i++;\n                    done = false;\n                }\n                return { value, done };\n            }\n        };\n    }\n}\n\nexport default Tonality;\n","export interface IVelocity {\n    velocity: number;\n}\nexport const isVelocity = (x: any): x is IVelocity => {\n    return x instanceof Velocity\n        || (typeof x === \"object\"\n        && typeof x.velocity === \"number\");\n};\nexport class EnumVelocity {\n    static get SILENT() { return new Velocity(0); }\n    static get PPP() { return new Velocity(10); }\n    static get PP() { return new Velocity(25); }\n    static get PIANISSIMO() { return new Velocity(25); }\n    static get P() { return new Velocity(50); }\n    static get MP() { return new Velocity(60); }\n    static get MEZZO_PIANO() { return new Velocity(60); }\n    static get MF() { return new Velocity(70); }\n    static get MEZZO_FORTE() { return new Velocity(70); }\n    static get F() { return new Velocity(85); }\n    static get FORTE() { return new Velocity(85); }\n    static get FF() { return new Velocity(100); }\n    static get FORTISSIMO() { return new Velocity(100); }\n    static get FFF() { return new Velocity(120); }\n}\nexport class Velocity implements IVelocity {\n    velocity: number;\n\n    constructor(velocityIn: number);\n    constructor(velocityIn: IVelocity);\n    constructor(velocityIn: number | IVelocity) {\n        if (typeof velocityIn === \"number\") this.velocity = velocityIn;\n        else this.velocity = velocityIn.velocity;\n    }\n    normalize() {\n        return this.velocity / 128;\n    }\n    clone() {\n        return new Velocity(this);\n    }\n}\n\nexport default Velocity;\n","export const gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nexport const lcm = (a: number, b: number): number => a * (b / gcd(a, b));\nexport const floorMod = (x: number, y: number) => {\n    return ((x % y) + y) % y;\n};\nexport const isStringArray = (x: any): x is string[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"string\");\n};\nexport const isNumberArray = (x: any): x is number[] => {\n    return Array.isArray(x)\n        && x.every(e => typeof e === \"number\");\n};\nexport const parseRoman = (stringIn: string) => {\n    if (stringIn.length === 0) return 0;\n    let c: number;\n    if (stringIn.match(/[IVXLCDM]+/)) c = 1;\n    else if (stringIn.match(/[ivxlcdm]+/)) c = -1;\n    else throw new Error(\"Roman number error.\");\n    const string = stringIn.toUpperCase();\n    if (!string.match(/(M{0,3})(C{1,3}|C?D|DC{1,3}|CM)?(X{1,3}|X?L|LX{1,3}|XC)?(I{1,3}|I?V|VI{1,3}|IX)?$/)) {\n        throw new Error(\"Roman number error.\");\n    }\n    const r = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n    const a = [1, 5, 10, 50, 100, 500, 1000];\n    const rIn = string.split(\"\");\n    const aOut: number[] = [];\n    for (let i = 0; i < rIn.length; i++) {\n        for (let j = 0; j < r.length; j++) {\n            if (rIn[i] === r[j]) aOut[i] = a[j];\n        }\n    }\n    let sum = aOut[0];\n    for (let i = 0; i < rIn.length - 1; i++) {\n        if (aOut[i] >= aOut[i + 1]) {\n            sum += aOut[i + 1];\n        } else {\n            sum = sum + aOut[i + 1] - 2 * aOut[i];\n        }\n    }\n    return sum * c;\n};\nexport const toRoman = (nIn: number) => {\n    let n = Math.round(Math.abs(nIn));\n    if (n > 3999 || n === 0) throw new Error(\"Too large or Too small for Roman Number.\");\n    const a = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const r = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\n    let rOut = \"\";\n    for (let i = 0; i < a.length; i++) {\n        while (n >= a[i]) {\n            rOut += r[i];\n            n -= a[i];\n        }\n    }\n    return nIn > 0 ? rOut : rOut.toLowerCase();\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Articulation from \"./Articulation\";\nimport Chord from \"./Chord\";\nimport Color from \"./Color\";\nimport Duration from \"./Duration\";\nimport Frequency from \"./Frequency\";\nimport Interval from \"./Interval\";\nimport Note from \"./Note\";\nimport Param from \"./Param\";\nimport Pitch from \"./Pitch\";\nimport Scale from \"./Scale\";\nimport TimeCode from \"./TimeCode\";\nimport TonalChord from \"./TonalChord\";\nimport Tonality from \"./Tonality\";\nimport Velocity from \"./Velocity\";\n\nexport * as Articulation from \"./Articulation\";\nexport * as Chord from \"./Chord\";\nexport * as Color from \"./Color\";\nexport * as Duration from \"./Duration\";\nexport * as Frequency from \"./Frequency\";\nexport * as Interval from \"./Interval\";\nexport * as Note from \"./Note\";\nexport * as Param from \"./Param\";\nexport * as Pitch from \"./Pitch\";\nexport * as Scale from \"./Scale\";\nexport * as TimeCode from \"./TimeCode\";\nexport * as TonalChord from \"./TonalChord\";\nexport * as Tonality from \"./Tonality\";\nexport * as Velocity from \"./Velocity\";\n\nexport default {\n    Articulation,\n    Chord,\n    Color,\n    Duration,\n    Frequency,\n    Interval,\n    Note,\n    Param,\n    Pitch,\n    Scale,\n    TimeCode,\n    TonalChord,\n    Tonality,\n    Velocity\n};\n"],"sourceRoot":""}